---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeUNyQU5haXNNQnBVbVNDK2g4OTFDN1pZTlBzOStPYXdGUlVwS1d2SHFJUTdTTm04CmhTcDBWZWFNOXRhMkRBS0RIYmV3WmZEUUZhQUU2VTU5ZjdicUgyVUFVdGdHakxsMFN5RE83N3U5VUV1cmFHT2MKeW43REJabzJOMG1lQ3NSdkFnT2R0b2JvWVpSS2NHbGV0QWhrUHhaajcvcXV4RXlpSmhVQTdrYUdDZXh4bStyOQovajk4MnordVI5T0NNdHdNSFhucVEzZ0l1VGZFTWpTNVVXYy9uZzcwT1ZoTHJyS2VDYUoxVHZRSHVMT3FjQ1QrCmU0U0FrRHg4dnpheWtDK1JJdVN3UVExemdDOXRBRG1rNEtteDNCSFBKaVRPeHc3bFVCOHJERXVJbUJCL2ZXOFkKM2lMZEpDcEpVMjVQK0FCelB2cDNvQ05RWWF5b1RjanBJN3VtQVFJREFRQUJBb0lCQUI0Z2tSMkNiYWd2emx2ZAoyYytISWc3Sk95MStReTJiU3hWaFFmakNDQ01OQS85TEJsemtydTNlN1lpWmVIMEdROFhOUi9lUDcwSFIrK3RCCnJSSHo3Zmtic3BqRmV2YmpVdVdiNG9taXNEUE5yOWJlWjFMekVWZGVocHA3c2hYY3l2aDZvdG8rSSt2TDdnaE4KVTd1MUo2RjNOVU9CYjV5TUREdS9IWXkvZ0owdGZTSlM4bUp4emh4ZUpldkpKK1dYTnJibGgvMVY4N2oxYzh2dwpIeWhmNWhIRkZOdFNodGNwaUk1cFJ4ZGxyT0hHcHlNR3ZqZVRsTDE4NGtreDFzTW92YTQ2WFNEYXh1a3g2blRRCmlGbmkxZEdHM1VuNCs4NkQxZ3phU3FNanUxd0RPK0srajFicW9rampHMkJucGYrRHk4ZnJZMFQ1VmtXS2huREYKbmY5NDRBRUNnWUVBNS9CWXltU1BIT3RFVkh0VzN3OHptV2lnb0FrSkVWVG9ubUhhT3F4akhOZzAwRVE0d1RhRQpoZU9mYU1IeU5Da2tHKzRxeExrcmpKNllTQ2N4T0JBVFNCYm9KZzhUU3QzVEtEdndOaXlmNkRtTGZsdVREeHJ1CnR1emlTUzA4Z0FzZVRNcXhnbzg5bERWbnFWZjZBMmJXQUhSek1iTEM0V1ZKblRrdGJaNUIveUVDZ1lFQTNPNmgKcHJFS3JUaUtJdStaWnNEYUtvQ2dBOFQ0elJDYk9PRVJ2djY3N0ZVSDJuTEFaS05iSiszbjZrWi92akNWd3Y0eApBWWxwYzJXcE1ieXA2dWNhejJmMmJuOXNXNXRIbm40OWRyemlJNkZkY2NnZlo5eE52V3dvSWhmOWJLRyt0Y0xmCkt3aEFtNjdoUGhtd1dBSVJDR1F4QnN6ZUsxUm1EZWJUS0ZiL0t1RUNnWUVBc2R2Tk91Y0NGOXNSK3ZiYUZ4TkIKTGxMZFdkdVQ2SWFFRzNCT09OQVk4UFdiQ2xwR2EyT3pIRGtBOVFSRkIxckZKZVh0UmczNUowdzIycDJ6VUpxRApMclRpTU0wK3JocU00ajJVWnZheGFSTTN0UjNrRjZFL2pXYjUzOE9nc1UvVlhHM1MwWnVtVFJEbS9TVkp3M0lJCmlURERaVWoveUhneml5MWRlTUh6T2dFQ2dZQTNaQURWV1FmVFBCeXQrNkpiTjdpNjlUcXBGMFpGcTRjdk1JYVIKZXk1RVoyRXJySjk5MjlMcjVPTERRdCtlSUhJN3pCMGZSSU5Tc2tkRU9BZmw1QUU5eE5QdENqZHhsREhWazlMMwpKUTRSWHRDZHlVM09iVlowU2x5Wmg2ZzdCeVpZVGI1RC9MS3VGWjlWUVgyTDR5REFHTmFOM09sS3RjTk1jdlczCjVHL2ZJUUtCZ0RsdU1TNUpTZWg4WjlHVm16RTFmRE9DdFRRaFAzNFp2SXM2ZUs2TkNYR3BKS0htZVVBQndhYW8KL2RHdk14Ny9WZXBiT0R3VW9jTFVFY01GajBHUjhOVGZ5S1p2dDFBb1IrcjFCSThXS2F2aDlVRjBUeW5sblN2UAo1alYySW5jSFhCZ0hTWVlQeHJ1ai9odlUxUEpLVUFFaVBNdW9IRjU1LzVUUzFkR2FRUjRoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUtSeUN5eEJsMS9yQWI2Ukg4em5yZjh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTlZvWERUSTJNVEV3TmpJeQpNVFUwTlZvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6QXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzE5WDJnUjdsR2Q2MWRiN3hMV2pPZ1cwa3NxNTdYTmE4N3BseTdtREkrSUpXbjNDWVYKQTlhQ3BlMURtcnpWaUNLR1lScU11by84a1AwR1FFaXhSdk1LengyR3FnaEF2U0M4clhTQnhyNUxhaHpVcjZIVwp5cHdGN21vSXVEVUFWbVJpUldIVjRjVUJNaEhuMVBRaHdUUkVFc3hmSmlMVGZ4aFQ4c1lnK2ptQUgzdXZDRlFwCjUvczE3dXcyM2xXdG00NjdnNWhuQjVvOFZFVUUvK2JmazhHdDlyRG1NcFRzRml6VkhtZGRSVmZPS0FCbHo4YWsKRk9Pc2ljYzBubW5Za29aL282OUdCYVdKdUVmMVRRM2wvNXBYVEZUaWFQcllxTndjZWROeFlMdzhYWWpyS2NkWgpOQzhJbzYwVGN6bnJMVHRIZHhvMlhSREhZNC9JNy92STQ5M3ZBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVDNFTWJSd3BGNnRoamkzWkVyZWRoSVNEQ0x1ekFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQXBia0pTVjFsN29LdTdHS1BHQzUwSHJTZUpXCm15engvanZDUUVocmNuYmQzQmYwZEdUSHdtUnhXZkhrZ1psN0dmMllEZy92MDRBUVdQL0VzM0g2SjloM3VuUGQKcTROM1VaQnFVVWZKMURxTVZ4Um03VFgvcnBURVhJekQvRlpWV3BJa08yM1g1c3E0a2w1SGNEY24wdzJHU3YySApnSVJleDkzODRJRjlRTm9FTmoyd0tKc2crRERHYmZ0TXZyWjZiWTNseUIzVnZ4Y0g4L0t0NEovWjZXQTFXNzNUCmptZEpOOG5PN25aT2NxekpQVGp4Q0pBeVZLN2hiQko0cHF5dWVEWWRGQkFoQlJjb1EvUTg5WFN4R2p4MVVTSjIKbTdTTUFFdDhwc0Q0TUpBLzhlN0Q3TThYOXBXaGF5Q0xCekJzVkdNR3BEb09BQ29OY0dlSGlleTQyKzA9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdGZWOW9FZTVSbmV0WFcrOFMxb3pvRnRKTEt1ZTF6V3ZPNlpjdTVneVBpQ1ZwOXdtCkZRUFdncVh0UTVxODFZZ2lobUVhakxxUC9KRDlCa0JJc1ViekNzOGRocW9JUUwwZ3ZLMTBnY2ErUzJvYzFLK2gKMXNxY0JlNXFDTGcxQUZaa1lrVmgxZUhGQVRJUjU5VDBJY0UwUkJMTVh5WWkwMzhZVS9MR0lQbzVnQjk3cndoVQpLZWY3TmU3c050NVZyWnVPdTRPWVp3ZWFQRlJGQlAvbTM1UEJyZmF3NWpLVTdCWXMxUjVuWFVWWHppZ0FaYy9HCnBCVGpySW5ITko1cDJKS0dmNk92UmdXbGliaEg5VTBONWYrYVYweFU0bWo2MktqY0hIblRjV0M4UEYySTZ5bkgKV1RRdkNLT3RFM001NnkwN1IzY2FObDBReDJPUHlPLzd5T1BkN3dJREFRQUJBb0lCQUNNaUNXV2ZNNmpsaHJYWgowek9CY1NKdlBjdkFQMlV5V21sY0Q5K3czVktkbkFmVFBBOG10STU1Vnp5TWJoV1V1WVhVemZtS05DOENGN2pUClJMWG1DeHQxTGpCSU9GdTNxTkNGZFU5eGZtQzFWbWZDbWE4Tlk5N0pUL1ByRFdESlRZeWo5T1lGTjdLcFprZXIKR0pCRDY4R1JGNkR2amgza0ZtQnZLYzVJUWozNGdxNHA2UEo4R3RzVTR6ZlZWVy9WOXVIVzNKNWU3ZHlHK2VadwozbFlWdThSMFRqQUhjeWZQaUFhYmI4bnMxNlJsKzkxbi9PMGQ4OStJZHQzb0R6OThwcEN1K0E4NW9nZ1dNWCtpCjJtYmdpcm9pZEdqWU9wVCtOY0hWeERRZVlIN041WUs0a2FkbWswTVlNQmlFeGh3THB5c2VJbURxcXpOVHpwNzIKbDZqK0kyRUNnWUVBNTM1bkpTOTRtNmRkSmFYM3VucHp6M3JBaUV4NlVDbHd4R0NteXhOaXcyeUJzRDhLR01oOQpxejdsQmxzREVJNWl2MndTZlViemhGQzJpbzlHeitrYmhZMEdodHpDdXg4TVVweURVK2NHOGJEQUE3N092TzBKCmtsQnJzYm5HOHUwZDhjNVdhRkljcWEwVFMwdjZ6ckRLbTZWc3B6V21YSzBPSHJpZjF0QVpES2NDZ1lFQXlUaXIKWmRZSjh4aVd2eERvN1dUYXAwTmxxeUNXL3RPTXFkZjJINzVhSlVHOUllZlNycnNjTmpSSEZsN0lGK0pQM3FBOQowM29mbk5TRDErT2lXZEFtVW9nV2tWMUtmejFrQnJWUS9SWXRXUUkxd2o1QTlIVkJtc3pWWjJUdEZZNDlNbG5YCkM2MTNDWUw4RVFEeTE3cXhpaGVEdzFhTlJNQzdTTW4zWmxOWlpYa0NnWUFLSWxGM29rVmdZd3BEM0tra283bXcKS29xRkxQdnB5SGFrVWlyYkZ3VXEwdlEyZC93RUs3cThwV3MzUlFLMFZkZGkwK05YVXFUVWRRZ1l0cjc5MlJHWQpYaDBjQ0V3S0R3am1FTzM2M1ZGRGdWNVdpNkxYU0hVeno0dDNZMCtmVU53UHV0MnpnV3k1ek5iY1kvNGQwRVYrClhOYU4xMTVxRGpWaENPb09hRnZBWHdLQmdGNlp1T0x3cE03WUlZOEVTUzNLZTQybGZ2ZmNJNEQ4UGlaZmRNUHAKdndIRERVTVNkUmRXdW1XMVlESmhMeHNqZDc5SGdLbWF3Wi8rdlZsVEdMRzJ6VDJCNDNKRjlNOHJNb3FBMWVtVwpjbzFsSDVjSm80b0tVbVNQcGtpc3gxV2FBS1ZhWFdLTkUraXgzd1d6ZDNmNnVwc2NnUUxsL3haeXNkbi9zY00yCnJsR3BBb0dCQUovT0liNHg0WTdxSHJia01HTU9WM1hDSGFlUWlJYmpQSUVuVzNJeGJBb3dadEdnMVA5cDhucDkKVVY0TWJKVWRFQjNQaGhqdHpmSmRkY0plczdBbWRvTlBOVTJGWTNGMFF4K1IzdGJzMzd4QW83RERVZnF0dzgrRgorSXRTeHB4RWtOS3NKYkJEQXFSbnFnd2lXY1psd0ZoYmI1NUsxVkdFbloyZ05zVWxJNFdTCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeUNyQU5haXNNQnBVbVNDK2g4OTFDN1pZTlBzOStPYXdGUlVwS1d2SHFJUTdTTm04CmhTcDBWZWFNOXRhMkRBS0RIYmV3WmZEUUZhQUU2VTU5ZjdicUgyVUFVdGdHakxsMFN5RE83N3U5VUV1cmFHT2MKeW43REJabzJOMG1lQ3NSdkFnT2R0b2JvWVpSS2NHbGV0QWhrUHhaajcvcXV4RXlpSmhVQTdrYUdDZXh4bStyOQovajk4MnordVI5T0NNdHdNSFhucVEzZ0l1VGZFTWpTNVVXYy9uZzcwT1ZoTHJyS2VDYUoxVHZRSHVMT3FjQ1QrCmU0U0FrRHg4dnpheWtDK1JJdVN3UVExemdDOXRBRG1rNEtteDNCSFBKaVRPeHc3bFVCOHJERXVJbUJCL2ZXOFkKM2lMZEpDcEpVMjVQK0FCelB2cDNvQ05RWWF5b1RjanBJN3VtQVFJREFRQUJBb0lCQUI0Z2tSMkNiYWd2emx2ZAoyYytISWc3Sk95MStReTJiU3hWaFFmakNDQ01OQS85TEJsemtydTNlN1lpWmVIMEdROFhOUi9lUDcwSFIrK3RCCnJSSHo3Zmtic3BqRmV2YmpVdVdiNG9taXNEUE5yOWJlWjFMekVWZGVocHA3c2hYY3l2aDZvdG8rSSt2TDdnaE4KVTd1MUo2RjNOVU9CYjV5TUREdS9IWXkvZ0owdGZTSlM4bUp4emh4ZUpldkpKK1dYTnJibGgvMVY4N2oxYzh2dwpIeWhmNWhIRkZOdFNodGNwaUk1cFJ4ZGxyT0hHcHlNR3ZqZVRsTDE4NGtreDFzTW92YTQ2WFNEYXh1a3g2blRRCmlGbmkxZEdHM1VuNCs4NkQxZ3phU3FNanUxd0RPK0srajFicW9rampHMkJucGYrRHk4ZnJZMFQ1VmtXS2huREYKbmY5NDRBRUNnWUVBNS9CWXltU1BIT3RFVkh0VzN3OHptV2lnb0FrSkVWVG9ubUhhT3F4akhOZzAwRVE0d1RhRQpoZU9mYU1IeU5Da2tHKzRxeExrcmpKNllTQ2N4T0JBVFNCYm9KZzhUU3QzVEtEdndOaXlmNkRtTGZsdVREeHJ1CnR1emlTUzA4Z0FzZVRNcXhnbzg5bERWbnFWZjZBMmJXQUhSek1iTEM0V1ZKblRrdGJaNUIveUVDZ1lFQTNPNmgKcHJFS3JUaUtJdStaWnNEYUtvQ2dBOFQ0elJDYk9PRVJ2djY3N0ZVSDJuTEFaS05iSiszbjZrWi92akNWd3Y0eApBWWxwYzJXcE1ieXA2dWNhejJmMmJuOXNXNXRIbm40OWRyemlJNkZkY2NnZlo5eE52V3dvSWhmOWJLRyt0Y0xmCkt3aEFtNjdoUGhtd1dBSVJDR1F4QnN6ZUsxUm1EZWJUS0ZiL0t1RUNnWUVBc2R2Tk91Y0NGOXNSK3ZiYUZ4TkIKTGxMZFdkdVQ2SWFFRzNCT09OQVk4UFdiQ2xwR2EyT3pIRGtBOVFSRkIxckZKZVh0UmczNUowdzIycDJ6VUpxRApMclRpTU0wK3JocU00ajJVWnZheGFSTTN0UjNrRjZFL2pXYjUzOE9nc1UvVlhHM1MwWnVtVFJEbS9TVkp3M0lJCmlURERaVWoveUhneml5MWRlTUh6T2dFQ2dZQTNaQURWV1FmVFBCeXQrNkpiTjdpNjlUcXBGMFpGcTRjdk1JYVIKZXk1RVoyRXJySjk5MjlMcjVPTERRdCtlSUhJN3pCMGZSSU5Tc2tkRU9BZmw1QUU5eE5QdENqZHhsREhWazlMMwpKUTRSWHRDZHlVM09iVlowU2x5Wmg2ZzdCeVpZVGI1RC9MS3VGWjlWUVgyTDR5REFHTmFOM09sS3RjTk1jdlczCjVHL2ZJUUtCZ0RsdU1TNUpTZWg4WjlHVm16RTFmRE9DdFRRaFAzNFp2SXM2ZUs2TkNYR3BKS0htZVVBQndhYW8KL2RHdk14Ny9WZXBiT0R3VW9jTFVFY01GajBHUjhOVGZ5S1p2dDFBb1IrcjFCSThXS2F2aDlVRjBUeW5sblN2UAo1alYySW5jSFhCZ0hTWVlQeHJ1ai9odlUxUEpLVUFFaVBNdW9IRjU1LzVUUzFkR2FRUjRoCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQU1TYndVbWFwMnpBQkJhUTFlenlsYXd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTlZvWERUSTJNVEV3TmpJeQpNVFUwTlZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQXRSNExJdFQrOTh2aGZWQXZ2dnlGT0hvc21zVkZXRjJNTWsxaGcyaVYzaXZONnVWRUhhNXAKM1ZhV3gxdDdDd3Y4L1hKckkwejhYZGNpSFZoT0JTNGcwams1NlJkdlpRRVpPRTVCNDVuL0FDVnNGK1V1VVluOApjZG9VV3k3OFlGWTdWWS9ROFE5QmNjY09oSHo1REFkMjJlSlE2Zkcxb21VU0VRZGVYU2NYdVZyaUhsZ0ZhZld6ClZEeVRuckV6cUlGU2xWdWNpSnZXelFSNkN2UHQ4czlWMm9mcDFLVjgzSjF4czFGZVZQc0dhRDh4RWNDZFZLbXkKUGt5M0E5aldjNU9aN0c3WnBib09tNVdYdWhpQlJkQmRXQ3V4eDdjeUJFbXFia3VKVlBDclN0Mm9pSXh6QXJoagpxNnZVbWZUS3ozVGVNbWRhb2dnL1N0SytUSkV0a3hienVRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVTl4REcwY0tSZXJZWTR0MlJLM25ZU0Vnd2k3c3dEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUdRaTRlWkRxdXpPdWpXZW50dzFWdENoY2F3TUF4Tm9BVWsybG1SekVCN1hzK01DSGVocUxYeGtCTFFRCjdBUCtQRUlKL2YvTXpDQk5rc2pXbXBweis5dnkwY0hTTEtiRjFXMXhRTEw1T2ovN0N4SVJWckg2NzV6akVSeEcKV1pLYXZLajB2V3FOYWZmMjhtUmdJMnVWR2Vhbys5WFhBcXlyeUNvSE80d2NJVkNBcUwvYlZ6TTZPcld5Zmlvcwp0VGsyY2trTGJ2akh0RGVabTcvYjg0NmdiU0hpWm5lMnNDOHd2ZmkzdGl4YkQrQlkvRHNqbHNCaEFQZW1qSWRWCjVaeTkzTENMazdEeVRiWkNIdm9WWnVCYVdFeHVDcUpoNVRkSUIrSVA1VTlTcnlYdmxrYzQ2NUpoeEM4ajFiL3YKMU9JR2Q5OTBhYnJNaHRWRVpzek52ZktJYjJNPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdFI0TEl0VCs5OHZoZlZBdnZ2eUZPSG9zbXNWRldGMk1NazFoZzJpVjNpdk42dVZFCkhhNXAzVmFXeDF0N0N3djgvWEpySTB6OFhkY2lIVmhPQlM0ZzBqazU2UmR2WlFFWk9FNUI0NW4vQUNWc0YrVXUKVVluOGNkb1VXeTc4WUZZN1ZZL1E4UTlCY2NjT2hIejVEQWQyMmVKUTZmRzFvbVVTRVFkZVhTY1h1VnJpSGxnRgphZld6VkR5VG5yRXpxSUZTbFZ1Y2lKdld6UVI2Q3ZQdDhzOVYyb2ZwMUtWODNKMXhzMUZlVlBzR2FEOHhFY0NkClZLbXlQa3kzQTlqV2M1T1o3RzdacGJvT201V1h1aGlCUmRCZFdDdXh4N2N5QkVtcWJrdUpWUENyU3Qyb2lJeHoKQXJoanE2dlVtZlRLejNUZU1tZGFvZ2cvU3RLK1RKRXRreGJ6dVFJREFRQUJBb0lCQURuUWRVMlJJREtKYWxsTwpGMitudS83alFRbkdudlF1S0dxR09QSnhtQ1ZyWmpmdEoya3lHNmtEMHUyZ1RnNmdyUWxhVk1qWDhsY2lMVW1nCnZvYjR5cEZRb3lPOHoxbzJsNDVackw2eWthdkNSbGI2V1dhOTNVK2FoWlQxMHFvTjNMTGJUWjhsZDRhU1BCZ2UKcklFaWdOWGNZR2ZOT0dXMlRhWVI3QlZnUFRwMU5xaFhENkd0UTIza2VxdkJuR0xmZTJ0MjJEZGpkeEM2eWx2RwpScHF6Q2lVOUZKa29DQVFDUFNRVHNVMnFjdnlQenVBbUhPVGJYQURCa3F3MEtnbGhmM1dXK1I3b1gvcXBhNmJ2CmtPSTRITFJ5eVAzN29UNUQyUmtOMERMRm1CZ2h3eXEveWRHMHBWbW1zblZPc3g0YlErcFVuSDRWaVEreGtqU0YKbk0zaGQrRUNnWUVBeWY0cFZiRVJpZmFjRGZ2blc3bnhpWUlhcmJIRTFNbGhaY3BKbDZ2U0dwY2RKNU8wRTJHMwpPazZmVXZZOTZJblVqVUdTZG5YZ2p5aEx4U0VCYnJlWm5YVVBrc08wdjBwRmhLOHJ3VitDOHluV2NZL0pHV09uClZ2UW9wdlJwVjdXTWhHSUpGSElVb0VLamIvT0JHWk15ZnlzY1ZzeTZuZzZvYmg1MjZNQTVnVnNDZ1lFQTVZc0UKQVBldVdwRzFrQnVqZDFuUEpVSUZSTkJ1ZVJwc25GaTlmdVI4SlBDQ0NTY0twN0ZtY25JWTNqa1p1QkY4QmdFUgpUdmk1cUtvbXNPanMzYnJiUElCKzZjOGJ2ZWRmRXI2ZnRRTGdSZWRFSm5aVTViS3V4RXJFZnhwRUNVNjE3enNpCkdoM3NhZzBuOXFuRUtJTkJFdVRzd1RyK1B2c0lINzZadHRTbDkzc0NnWUFtQTgxbnNURnAwNTIvQy8rWXhiL3QKYnl6eUw1aXBxMVRIUVhEa09KUU1LUkIxbUZpMXBSaEV3dk05TzlhZTR3RzdxL0dTbGRDellKUVIvNG96ZWg1UgpBZXp5WkI2cU9hSW52SWZ4bHJZZ2FXbFFhZzBnMkI1d1FQYzlwSllHeWNZdVMvMEZlZ3JqdG1ibjlONEJJRERLCnVpUlZPYWFOaEppeVVNMTBOR2tlTFFLQmdGZW1ZcXYvNThyYnNzbkpVLzBpQlJCRUNvRUJXZjNTVWtETlBlYXoKVnBoQVlsY2VXbG80U2xkUExDSEhDZ1FZWVJSbDJmY2UwTDRQNHVCUXdRblY3UnRJTWE0VUVKTE9RNmFEdGJaSAoxOTI1ZG5OOVllT24vRVltQ3F4Q0dsSzNoSTlLTkRabTBMeWFNM1ZqMCt4b1dqUGR5RzNzbWVMd3RtUnd3bjltCjZjejdBb0dCQUpHQWJNTmFWMEIyN3oyaUEzcXJZa3JaUUFQbDZWT0RzT0NJQ3V3QVQzakdqODZrakhQczg2T2MKMlpTVW9pSC90Tk5adEp4Q2hJbEZJbmh1ekdZeHl0alhKemI4MlVYc29xdjA3QTBrSVg4WWFEQnA2Ukx4NzJ5Twp2NHNtSlJoOTh4bEFwTzc5bnVyUjlZa3dmbnJ6ZC9XWkU2cTVMS3pNREpJYkNjUGxCQStRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU1QWmNxYjh1cHpNdlRzRGtsVElpQ1F3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTlZvWERUSTJNVEV3TmpJeQpNVFUwTlZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1TNmpyazB4cEZSaENlMHZKUS8Kc3pLYzJ3c3Ivam82YVMweWlyQ0NuVHJsVUNUczE1ODcxV0w1U0ltYzAvZU5PVUR0dm4xakRXOE4wanQwdDZURAozZTdQSElUaUtPMzdXQzN2RG5IdGw1czh1TFRQY3AxY1Q2SHJHYTBqL3VNUHpIbG5QTkpENU5jVzUzQlVCaGZQCjBja2FRRzJLL0s1cjExaDlxbHNWN2wzS1UzbkM3eHRGTXRaRGtER1JxU3Q4bkhoSmtRaFE4QmxGTzc4QVU0YVUKS0hMZ05XK3NSZTZBclJ6VzlRSUpGZmxUVVFiMWJEQWVBT2tTcG96dllRaHhqOS9LeUpuNVBXUHRFL0lQaktibApxRDJRN2FTTHpweW9nK0J3NW8vV1k0RjVtK21uM0lyVVByejJHTEsxckZaSXg0OXBaeHIzMUQ0dTY1emUzdmFOCjFqOENBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVTl4REcwY0tSZXJZWQo0dDJSSzNuWVNFZ3dpN3N3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBdXQvZy9HK1ZRSzNRZTRydS9YcVIyRkdaSGUxN3ZKd1JrcTc5eThSNlMyZEJ3WjZQCjFhdkt4UHRzQUhja01KcytPRGtTbDZLaXdhampjOWNKYzFqQmpvS2E3Z0I3S1lrTWQwL3VrOGUrK1RPQTlpejgKSzBMeTcyNjRZbFRJTVJUZ3VETVV4cHFIU2NteDNFV2Z3aHdjMHY5cXNYcWhNYkNiYzBOcWlFL3lQMTNkeWF4WAorbFdwbDJwZ0ZSWEcvdEJFRFJJbTlrdWVvWlVtVXlwWm9XWUZCdUF5U2hScE94VDJFTGpEYjIyRmMwbVByUmlmCi91T1M2NndIRzR3V282OXgxeGo0cUFpcUlCYUNiNVFWcHZjcHBYd1BWVzFjMGU1MjE3c1RrK1VkSVRtQkgwM1oKWWRLdE9WSERjMkJUeTBaeHB1OWVVaTNRRklVcm5HanovaC83b2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeExxT3VUVEdrVkdFSjdTOGxEK3pNcHpiQ3l2K09qcHBMVEtLc0lLZE91VlFKT3pYCm56dlZZdmxJaVp6VDk0MDVRTzIrZldNTmJ3M1NPM1MzcE1QZDdzOGNoT0lvN2Z0WUxlOE9jZTJYbXp5NHRNOXkKblZ4UG9lc1pyU1ArNHcvTWVXYzgwa1BrMXhibmNGUUdGOC9SeVJwQWJZcjhybXZYV0gycVd4WHVYY3BUZWNMdgpHMFV5MWtPUU1aR3BLM3ljZUVtUkNGRHdHVVU3dndCVGhwUW9jdUExYjZ4RjdvQ3RITmIxQWdrVitWTlJCdlZzCk1CNEE2Ukttak85aENIR1AzOHJJbWZrOVkrMFQ4ZytNcHVXb1BaRHRwSXZPbktpRDRIRG1qOVpqZ1htYjZhZmMKaXRRK3ZQWVlzcldzVmtqSGoybG5HdmZVUGk3cm5ON2U5bzNXUHdJREFRQUJBb0lCQUNjbGZGc01UbXNDVG9yYwpJeDVZNHA2eXFiKzZYRmRYNGkvMU83WE45OTJOWGZwTENza0x6ZlZvNTI5Q3ZzY20yZnE2bEVvOUdLSTluTlRwCjc5VWdpSndKcUlJa3dzSkFYcGFkV0VHQlpzYWtPWmo1SXJSL2R2VWdaRGFZMEJKOHhWSnZJYUl4a21yZWl1VkcKUXdRZi9YM0g5SVFYd1Jvd0tXVFpkTG0xVG41bzk5dHFkSEdNZnJ0bnE1REdtUi9mQnNySyszSXhBcTdMK2lCSQp6aXVEd2tlZ2p2Si90UVgzOEIyV3d2cWpVMnFWZ1ZqcjRnY04yL2JMYldVNnR0ME1pMTRVWUw4dG9zdUFKWDhiCmtiUVkvUjdndjMrR0NvcHBWRUVsMVA3cVdWaW8zUGtvbkdpQ21ySnVqKzVXdDFuTmF1MGFiM3ZocE5kZjduVkMKMHk5SjBuRUNnWUVBMGhRcUtnMEpHcjFnK2wrZE05WHAxN2xBUUhXakpnaEdsY0dSVHNTaitwdFBiNnpLV0VkRgoya1d6aTU1YzluMmtJanFKeG83MXJuWnBTdkF4Y05JZnZ6ZTRZYlVORHJEUTRhZUdmVHlWNURzRUoyUThMU1ErCnUyRFRrWmxVNXpoYWV3bTZrcXRpU1JFREdtV2NIeHJzYjQ2aWx2c3grMm1rTDdTYUlCWWlCR2NDZ1lFQTc3dFcKRVlRVHhJMWRMWG5QckVWQjZ1UkNrbWp2aUxOeFk3dDFEa3FxVVlyTFVaWmpJQmNRbmRqOGFpQ2c2YmVlRVFMRgp4V21SQXJkTkpuQzFkTWZwQlJPNjM1Y3l4aHN4RUVsTUlaUjJ6bVdsajJzT000MEhGbzhvLzlTeUM4T1hia0hmCkFaSmJPVDBoYVlFMHI5Nk5nT3dVUGsybGhXdWFMN2tOUis4UXVHa0NnWUVBclZKQnIwdnQ5UWZGMlF2RnNSeU4KdjVOeGRUMFpDNm5NUW9YZkVyT2Q3b2J3dE54RVhTMEFicU1QRE9QdEl0aHA4R3VIZkRBNmRtUHZYd3BvWUFLYwplckRJQ0tUTlR3K0dab1pHcVZDeEFnbkcxWkVYTE04NGluUEtXZGU5ZXI2OXQ4RkJFdjBmSzlWRFVDWUE5cERKCi9RZ2JFS0hTalBDTnEyWS91clZILzRVQ2dZQnFWVkRXMGh1bWlnRnpZMTFmRHhVdTUvSXpXTUl1ZzFGZktFM0MKZWhIVHUxbDFwZHZ2NXVzaTZKVUZTZFcxOVJEeWdLVlNiQUc3RDZ6enlQaGpoU3h4YVEveGp2SWhkdndyT2llLwptVWVkUXU3TmozR3NJZmlyNC9JT2o3d3RoYU1NYjhGSHhEQWNVbVlZa3d2WW1rRnZsc2RmM3piMDJBWjY5bnpTCmxGSjVTUUtCZ0hYYTl6aENTWTBSbXVKdERRdkIydlR3eG1TeUdWMkIvck9hb1VFNFFqU2h6R1ZjZ210YkxySzIKbE9HTkdBanhGVzJ0bGtGNXFVNW1Mb3R6T0NrNFo0ZlU3ZVovVFF1R2duWmlqa2UxSzMwNGRtQlg5MFJQMENyNgptZklnQzFGdVpzL2VSdmQzU2J4U2h2ejI4L0pvcGVlWU5sRUp2UXUrdWExVVZQOWZ3VlRzCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBtbU9MdU8zNzFVbGFhVUpva2xOY013RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTlZvWERUSTJNVEV3TmpJeQpNVFUwTlZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJmZHhiSlNFeGJXMlpLaVNuaVQ4THJzbmI5UVgKVVQyNks3bG1QV0Z4NmFpcU52V2xWZ3ovU1VBN3hOMHdsbVA1b1I3cjhmM2JjUjNheW1melppQ0ZMZ2s0RVJJZAo1czA4OEpWSzZMQkJhODdIeWo2L2o4T2U4UXRHMmpURXErSmNicUt2Qlk1YUtZR3BkK2ZCWDFOckdmWHZYcThLCkVuY3EybGRZVFg2c2Z1V1hRUFJ5K2d6VDdQOXY1MG9ybHg5eGFaQ0VzUDN2L2ZUTjN1dUs2YlVudks3dGx5WjAKVUtveHZFRlFQUVRjMUJTdVhCWm5nWmJCUkowbzI1NTZ3Wmc0N1Fic0dobnltOTJXNGZPOWhkcGh0VjVMdksxVQpQRGRidVYrMFJWZGsvY2YvWVNxR2tiNHo0bzhuWXdYNmFXRkJlMjEvaUFkT2E5M3hadzQxNGRLa3pRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCVDNFTWJSd3BGNnRoamkzWkVyZWRoSQpTRENMdXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQnJIMElPV1YyOWRhR0dBOEdZbWZSSzBpYW9FREdJQmlGTU42Mm9mUHFPOHgrQzYKaC9MR3hpN1BpaGZZRDlJY1BTdDdjRkNvVUM1N0xpck5mZzE1YjF4VVliU1lVRmZRNTE4dnh2UXJ2amZSVnVONwpoaWJTTlJ3bytmOVdqUEJWeXNKRDhiRGd0cDBQb3Y1SWZMeDNZWG14dStqRUZadVJEczIrcVRYUm1HdXFnTkdGCjN4ZFhOTnRjYlJFTFBTdzFJWEpTNlVTS0lra1ZQUFlaQm1rUkNKczZKNXp4TXZBKzliV3daR2VWOU5qOTN6MzQKU0dLYmNJTTNBOVFPcHZSbGUvWUQvcEZLSkV4ck9uQmFhOWZqUkUwVjVSZkpPbTJ3QUxpOXF1NW1pVS9YbkJZSwo5WlQ4NHoxajVmVXIzd2pCdCtyT3BCSHkyVVdCNVlPUENVR0dvY1E9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMmZkeGJKU0V4YlcyWktpU25pVDhMcnNuYjlRWFVUMjZLN2xtUFdGeDZhaXFOdldsClZnei9TVUE3eE4wd2xtUDVvUjdyOGYzYmNSM2F5bWZ6WmlDRkxnazRFUklkNXMwODhKVks2TEJCYTg3SHlqNi8KajhPZThRdEcyalRFcStKY2JxS3ZCWTVhS1lHcGQrZkJYMU5yR2ZYdlhxOEtFbmNxMmxkWVRYNnNmdVdYUVBSeQorZ3pUN1A5djUwb3JseDl4YVpDRXNQM3YvZlROM3V1SzZiVW52Szd0bHlaMFVLb3h2RUZRUFFUYzFCU3VYQlpuCmdaYkJSSjBvMjU1NndaZzQ3UWJzR2hueW05Mlc0Zk85aGRwaHRWNUx2SzFVUERkYnVWKzBSVmRrL2NmL1lTcUcKa2I0ejRvOG5Zd1g2YVdGQmUyMS9pQWRPYTkzeFp3NDE0ZEtrelFJREFRQUJBb0lCQVFDRzJNZnFOZVFDY1EzNwpMak11OVpDeTFJUnNjZGxQSUpJcDlOUmt5d0Z2WGpLWU45Ym02cm1STnRVRFVSaDdJalRRMGxHRWI5b3dIQms4CnVaemlwT0hmL2tJYWhZdk1PMU1sUUNlTTEyWlI3U2E3WDZDaHI1T0lhc0tWd3FtZDhUZmdGbk9UUzJOS1pIWlUKd1NObjl6SytaK0dFUVdSSTBrTEh1OXZjYmE4SC9adnBWU1h4M3dHOFZJMjkwRGh3UG9KdnZGaW5YdDJCTkhsNQpvbk9LM2IwV1pLQ1FJelNKdjNWS2xuNi9BT2oxYVV2NFNzcUZjOFk2WkZETjRibHNoM2pFS3NoZHY1NE1oOUg1CnU0L2Y4VUNWc01KUVlzQlNhVXZZenVra1F4d0RZRnFrQjlZWG5hNm5tRkt0cTl6eEVNcVZxVExGakNFb1F3d3MKaWNGNWNUcmRBb0dCQVBReEdJUHF4M3drN1Z0OGtMVGV4NlJIeXlnN21Od0JjbzU5bTJoWEtqN3Z6enlrSVpydwp3R2tHUGJrcDR4Um5hc1RITDFLSzJ0YzBoVDVsRzFRZWNxZE9QZEdUZGkyRVIzYWJOUDRZT2tmRlNkMzRyd1FaClh6SFJFZ21EYk8zU1BxQytVYU0yT0pySWUrZnhtMkF5eXVCeEcrL3BUSmVBQkhuM21iZWJ2MTNQQW9HQkFPU0IKc3h5OEhCOFhzYjJmYWpDemxzRHM2d1dFVjlITDZxVVNnS05MR3NSbjNWcjE5blNQVExMT3VtOHhTaWVaYU1NdwpZU0hVaEVwTXBCZFVLdEtsc1NNblBWcGxES3ZubnJqMnNYUDVHMGI3WjZjNHlmSmhBR1VMSHNMR1ZZWUMyblc4CmpHTWpCcDlUWCtkdXY1MjhwQnViNkZSaVN1bzJxWlcrdTlXeUcvYWpBb0dBYWxCNXdPMVYzcW5oSVVTeFo5M2EKZzU2eVI1ank2MDVDQnVHTzZMV1NjZ1pNYnJWeTRCZFRYaVpXZHloU2NrNjRRR1lNSjE3RytvMG1PYzBoUWRWagp5NDJZQW9lMkd3a05hQWtZNEV2Q0MvOU1NclVUMWJBS0x4RThUaUlIS2Qrd1hxR2R2M1phM0tET3VXUUtacTZXCmYzTWZXNnR5S2orVk0xam1kdmI3TVNjQ2dZQlA0VDg1NWxCMlZoUWVVNklOa0ZvODZ4VmxnbFFvMVA0YjRwSHgKZzRuQjZ3VW9qUjh3cy85OTZtS21DRGNDRE5EZ213TDVqbzhJWWk1aXNWdWU4Nmt1dnNMbDNMbEhSdHJua2VXSwp3eVJUOWdMUUpEd0ViUUIwVWlUWXRmaWp0aytrSk50MnRJSFdKSkU4R0MwSCtTL3RMdDFTMG1HWjZxM3gyUkZVCnJNUzF2UUtCZ0ZoMDNOenY4cTZSaHFIMG5TaTVSeC9JTm10RDNlZWo4SVJjV0g2M0ZBbWo4OHZTVnZDUGRkemQKT1VXNGZmdUFQQTFXUjZkaFMrNkVXY0gvSzhUcytLbVUvZWhmQ0diSWZuYi9CcUVmdllFbno5WUkzMTlNRTJtRgp1cVA1M0dVcGdCRTJwS0lPNk5yc2dXVmtYbVAwM3ZGV1MrZXU5WmtVckFQTjlNSXM2ZHlRCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRRUxjVXFoZzV3MktBRDlvMEEvWnFrakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFExV2hjTk1qWXhNVEEyTWpJeApOVFExV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRElLc0ExcUt3d0dsU1pJTDZIejNVTHRsZzArejM0NXJBVkZTa3BhOGVvaER0STJieUYKS25SVjVvejIxcllNQW9NZHQ3Qmw4TkFWb0FUcFRuMS90dW9mWlFCUzJBYU11WFJMSU03dnU3MVFTNnRvWTV6Swpmc01GbWpZM1NaNEt4RzhDQTUyMmh1aGhsRXB3YVY2MENHUS9GbVB2K3E3RVRLSW1GUUR1Um9ZSjdIR2I2djMrClAzemJQNjVIMDRJeTNBd2RlZXBEZUFpNU44UXlOTGxSWnorZUR2UTVXRXV1c3A0Sm9uVk85QWU0czZwd0pQNTcKaElDUVBIeS9OcktRTDVFaTVMQkJEWE9BTDIwQU9hVGdxYkhjRWM4bUpNN0hEdVZRSHlzTVM0aVlFSDk5YnhqZQpJdDBrS2tsVGJrLzRBSE0rK25lZ0kxQmhyS2hOeU9ranU2WUJBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVU5eERHMGNLUmVyWVk0dDJSSzNuWVNFZ3dpN3N3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJVFlKYXF2K2hKaXN3dzd4VGFySEt0WGJxaFNiZVBtcFJJNWI0RlpjNVBjcXF3bmMwbWFHN1MyCnNUYzZBRzhQRk5oYjJ4QzY2QTBGWThKZnJqRnhVaXZGZ3IyTGdPeEd4SHdDRFBENjJ2Zm52UzhHSE5PbWx3QW8KcGU0L1BMYWlWSmFsK1dBQ0laVXVYL2dWT3RRaENSZDUxVVZOLzZOOUlycC9BdGZXdFBVcTh1eW5XQ3cydW9lMQplVXFHUjFVRTlmVnhOU1l3TWl1T3ZNbE9jTExMTXhIMTdkUkJ4akpLVFh3ZnA3TW9HditHeE1OVStTeXBVZTVRCjNqaDk4TnEwYTE5SllSNHFzYWlJeUpoaWJkNTdOUDI1MUVHYXhHb2dQRUpxVEtORUR3czJUYk9NbTVOWGhBOHMKNENUUENlU0duSklweGh5eThNMmdYbVVjYzhXSG5LYz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU5wSk9wdVA1MXZFY1g4SWliZGQzaDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTlZvWERUSTJNVEV3TmpJeQpNVFUwTlZvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTUM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQy9yNFVFN01HeE9XaERKNVIveWh4MDN3YWkKY21ZSityS2pkYmxFd1B1VEVtaElnOFVUWS9neFI2aFl4N2d0ZjY3Wi9LQUZVeGtNQkN4U3VzNnMyNkZ6NkVNKwpTTVpWb1VJTTNjUzdzczI4dU8wSnMyV0ltWHNKVFB2R0F4Y3Q4cUhQMEUvditoQTVDOWpBV3NqNDdoTEh3TmZVCjBUMkZrTEdDK2hLMVkwdjhaYm9kMlpiOFVZMkZQWUZseG81TjJuZCtIeEczY0VuQXpwZC9FV1U0VGVhbzFvN1UKbm42REtabHVld2UreEhsem9mUExZRVRVTFVwV1dHdEJIYXFiNmVkeFBJSlJWYWR2NDZqVHhoRVdjcnJ1bGdlZApNOTVhUVduTGlQV0lnZ3NPbHBXOXRiYitMcUNsMkhFUzlDUm9jZDVMVlZZQ2VKajYwQ2kxZ2RFVnBCckRBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGUGNReHRIQ2tYcTJHT0xka1N0NQoyRWhJTUl1N01DVUdBMVVkRVFRZU1CeUNHaW91WXpBdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBV0RubjJNK0wrUyt1VXNDMGZ6ZU1aV2xtdjViMlNCV3Ywb1VKZkZxQngKVXp3c0R3VkFqcU4wckF1eGhrMURWNGhlaFpjUGd4anZtbXhraXRudlNVdnZDWXRMTFgrMzZXVW1KNXRneHpCRwpwOG1nV0FZS2x2Tk81elYxWEJuc3ZoaEJmeFRvRE42eXBxRjNhaGRpeDRKMGF0bWk3Zys5QUl0ZHg1Z2lVczRZCk9DdkRMMS9zWWVYTmRTY1Bha21rM0xtYzF1TDBnYnN5T096NS9HSnRKbzljSDFtZmRDTG5LeHdDSjhhZDZXU1oKS2wwdHBOQWthRHg1YXV2VUFGa0hDUmdJOXhkNzdSaitidTd4eUdQSFY1Y0gzdXl0ZW1DdnhvZUJRMlU2WEVWeAo1VjlCb2pnWC9uTnB4NGY4L2xGM2lheXRIT3BwUkQ1RHBmQmFJMHZjdGI1cQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBdjYrRkJPekJzVGxvUXllVWY4b2NkTjhHb25KbUNmcXlvM1c1Uk1EN2t4Sm9TSVBGCkUyUDRNVWVvV01lNExYK3UyZnlnQlZNWkRBUXNVcnJPck51aGMraERQa2pHVmFGQ0ROM0V1N0xOdkxqdENiTmwKaUpsN0NVejd4Z01YTGZLaHo5QlA3L29RT1F2WXdGckkrTzRTeDhEWDFORTloWkN4Z3ZvU3RXTkwvR1c2SGRtVwovRkdOaFQyQlpjYU9UZHAzZmg4UnQzQkp3TTZYZnhGbE9FM21xTmFPMUo1K2d5bVpibnNIdnNSNWM2SHp5MkJFCjFDMUtWbGhyUVIycW0rbm5jVHlDVVZXbmIrT28wOFlSRm5LNjdwWUhuVFBlV2tGcHk0ajFpSUlMRHBhVnZiVzIKL2k2Z3BkaHhFdlFrYUhIZVMxVldBbmlZK3RBb3RZSFJGYVFhd3dJREFRQUJBb0lCQUh4Tmt3SXRrakdlRzZtbwp5aGpRZFFHbyswRnUxQkxXbXU5N1VRaHY2UFJudEc2SjNNd0ZRUmFiOUdTV0p5NkNKVjVBLzNoVWVlS2I5aTR6CjdBQ1djSzJjU2Jiak5KS2sveE1lNFF3akdGMnd3aTVQUXFHQmZoTDY5QzVsSkt2c010aHpxdExoSTVJS3g2VjkKZWVSTFpxeFl0dDNRVG9nRjI4Y202ZWpzbW9MeVJ5c3hpR1A2Unh6dkhubjRLWGtrbU83WmRoTVc1UkpxK242eApZSjY5VUVXZC8raEc0MGZ3Rklmc0psRlFucGJjazF4aHVHeHM1L0cvdEZ6UDREWVZtTzM5ZFdVTGYrbjJtT3N5CktxZE1sUEVTSmdYbThmbm1pSEtLWTZ1NGhoRDZkSFVhUTFvZjdaL285TXlldUFVZDVUOG40M0NERDR2c1gwS3UKaERPNjJJa0NnWUVBL0hKQnYvOXI0bi9xcDNZZlI2T3hKWnluKzhCNWpuRjVHNk5PL1RPRDY2UHAxVUVVM1UrZQpRNWltV3FaQmRKbEpnSys0ajZtaUVTTE9TOXlFUlZLYXBPbG5ncHR4RmxOV3hWT3hkOGR0L0xwNEFKdzBqZ0tKClhhOWptVmtvelppa1pDSjlRMXk3VUVKdVZ3SDFSZDhKdjA1UXRkM0RSWXpiclZrcVhtNUFIYVVDZ1lFQXdtSk0KaEN2ZktYVFZHczMxalF5bytSaGJSTm1DR3oyeVFVR1E5TVJnMWxqNHFxd09JUWZkVFhaZEVBczJQM0xDNzB4ZQpPRlkycGh5RFhwSjMwRVJhY0pKdWJPd3o4T1dyNzNWalQ2TG9wYXBOR2c1MFV3ck1zMHZuRCtCZGM3QldIaW9pClFIQnRtVnd0TVRTelpwL2dJbTEwZ1hIQkNxVkZWN0F1TGk1cXVrY0NnWUVBdGJocHJCUHBUVHBYYUFTWHI3SWQKcXIyQ0RxOFcwWHJOZXgrcmxJaW94YzlRVzdwbGtvbmxtek1mVE5Hdy9JWDdheThTNUJkd0duVzdtdEE2UnN5WApsVzZPbkczWWtnR2J6Si9hZUNhTy9nWWNyQlBGb1JRaVhkWUxGREFpTngxUitPTDYyS3JBQzU1R1gwdUJpN0pxCkNkUU9OVnhWWEpOdzd1L29sK0UxTmlFQ2dZQWNwNXI1L1BHbnpkWkFYazR0WGNsbTl3VTFVQThTN3ZSaEZFWkgKSHMvYnFULzNBT2dRVEhWK0hzMjNPTC9sZUlodCtFY0hiUVlmVktLMUJVaHVSalZDMVFNOFFWR2kyR2lSSXkvaApwSFZCUHFxaEJiSjJMMmhmb2ZmTTZsazhYYWxFUnhmSGdndFdDVFdNUkdXUjRrMkxKYkdBQjRIYWpPUjgrYmJGCkRnaWpyd0tCZ1FDcnVGaFpWQnRzSVBVV3ltZ056L3k4YTNpNVNadDlCUGRibmJ5ZVo5SGtramVCcU41Rzd5eUYKT2x1ZWRmblZkS2l6YzBSWEZyMHBTSnpwaThSbGt1RHBUelBZaHVWcHZHSXpXRjNRVC9RVnAzaWdMSzNpNFpSRQo0RjRJUXlKbnRSSVh5ZTVuUjJRWWo3Zit3MHJsM0xoNStOWjN6Zm1TVUFNY0hwZWxNTmM5ZXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c0
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "10"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/16

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.0.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c0
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c0 --no-password;
          etcdctl user grant-role admin-c0 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
