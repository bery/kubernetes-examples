---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6Y0M1b0YxWE1uOXkxQ3dReE10Z3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TWxvWERUSTJNVEV3TlRJdwpOVE15TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFybVJCeUFWRWNURXIwZW1jYmc5ZzNXdzIvNXQyNXlnc0xWYSt6SEFGdlpkUWQ1VEUKOHFNUzQxVkc5NE94ZzlvKzlWQjc0alhyQk1HZmZPejZJWDNkbklVVXRyZVRPR3orY2tBYy83NFp6YWhyNDI3YQpjei96VFE4Q3R1ZE9hV1JXMkx6ZkRXamYwTnRXODZ2MGhGQTRoeFdNQVNSM1QzNDBqUG80cXhBUTJ3M0RXUXFECm05MGpYR1Z6dEFsa0pRRGZ5N0doTGpySGVpOXFGN2VNOG5KWEV2NldzcktmZHk3SlViT0YramtPUFNUVUplV1gKeVhsQ2FvRis1NUhvK3I3aEI2WnJnWFJJdDBFL0orKzF3RE8rYnpXWTFNTnNzMWhVd1F1VmtkN2ZQNEtadTh3QQpzNnArb1hxZWxDbndMSCtETFROSkU5MFBiTGVCY05aYlVxU3ZHd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2plcGRPQ29ERGdPS29ldG5uNVA1TTIyK1ZjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVSeU10QXdOTnBlWWlvcGo5a1RYWUhwaVgrekJYY0h0cW9YR1o1QjJLMkN1cnVTUUZiLzlBCkFGN0ZDdXNmTzNBcFk3Z2pXbnhhbzRGRERvMGJRWUlxQ3ZEaDdmRis1cHA1L2Z2NjN6Q3cxT1Mrenozc1JvM2oKek4zZTFIVXNZUDNvUXdJOVYxZXJSZVpSZ20vZStmeGNOSCtDNlVDYnVSdThzOXBidXNsZFF6RFhzckYzUGVGWQp4V1FVUUs4VCtmZEdHbEtaT2ZWTktsOXJEOFRlcGZZYSs3N1VJR1lrcnI2cXlIeHBYbXVYSEtaUXN3dHc5TGxnCkJIUHMrM2NWZVZOUkxTS0d0bkk0M3RWbmh6Rm1TMTMrQmVnTk5yTnM1ZkZLTm1iT3N1RHBmdmtteXpqUDBQVSsKdmgxdmpiMDV5T1FjdzZpRjNTSlhSbDlhbDVSdVhhZHQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcm1SQnlBVkVjVEVyMGVtY2JnOWczV3cyLzV0MjV5Z3NMVmErekhBRnZaZFFkNVRFCjhxTVM0MVZHOTRPeGc5bys5VkI3NGpYckJNR2ZmT3o2SVgzZG5JVVV0cmVUT0d6K2NrQWMvNzRaemFocjQyN2EKY3ovelRROEN0dWRPYVdSVzJMemZEV2pmME50Vzg2djBoRkE0aHhXTUFTUjNUMzQwalBvNHF4QVEydzNEV1FxRAptOTBqWEdWenRBbGtKUURmeTdHaExqckhlaTlxRjdlTThuSlhFdjZXc3JLZmR5N0pVYk9GK2prT1BTVFVKZVdYCnlYbENhb0YrNTVIbytyN2hCNlpyZ1hSSXQwRS9KKysxd0RPK2J6V1kxTU5zczFoVXdRdVZrZDdmUDRLWnU4d0EKczZwK29YcWVsQ253TEgrRExUTkpFOTBQYkxlQmNOWmJVcVN2R3dJREFRQUJBb0lCQUdmSEViNU9KQ1NYOWxPOAppWEtWaERkQUpwcUZrWVNOeTN4UG1zdGQvb3lNZHo0eU1lR1NXYk1mRkZSRzhtUmNoQXJJRW5EVFZVQkhXUG1tCnJGTXg2NmN4S3RwdzlCTW9DV05EOC8zY3lzNHY0OFE4TzVOS0F5ZGdQMlZJME1pM0JWZUZUZGRWQ1p2b2F4NG0KdmlQZStVU3A5ZDdZTElnSnVvd0tlNTZRdVBjaGhkWTBjZi8wdFZSWnBHc2xIb0h3QmVvN0llN21pbkJaSEdZaQpwZzF0bUlrUDRBTCtZNzI5YVJFd3V1VHByZzhlSWkybGxxRWUrL2dURUFNdnJ0cGlNbDhNKzdnQWt1ZUhTaDNPClUzaThFdXpZYVYvanZqUjI5cTIwY2dUeDhpRmVXM2IvT2Z0SkdsSWVYTmxMSGM0ejBWZjVVYTF1WGlEajRPbWgKR0R5L2swRUNnWUVBeWFWUDU5QkNNam1tcHdLYzMwQ2RTMjh6RWg0MjhHT1M3cFM5VmMxN3RNVUpUSHYycW8rWQpkZ3NwWWhhNXZ6VmxOM3M2WGRxMWtvYStwcStZQ0hobXlNZElKM3h3WTQraXpyaFF4c3g4eVFQZUE5VXJnTWVlCmc1VTZlRUxOUWR1Q1Z5dzV4S3l4ckpEQmFETmN6SU1UZTdxZEd6aklBeXRNTmVqQW1pRHpJUDhDZ1lFQTNXWkIKN3NvSjBIYyt4SzRBSHk1V01KSjRmaFpySDhYN0ZGUXgyZnh6dTUvZ0hzUlJ1MFZlRjRadm1DcmlmR1ZuWWNabApxOWRwYjhjWWNKOVN4SThMbXRlMjQ2QTNCZ2J4Qi9SZXpvN0p1L2JZeG5hb3I0ZWFQSG9LV3ZNbE5VbllyNlcyCnh1ZzdVVWhoOFdEb0ZaUm4vUlBqZDVlTTZVbHd2cHFBK1QxTTFlVUNnWUFxaktTSTBPdzI5dTFRam4rVnFHZkkKbENWZHJGeUJhekdGQUlQWFNDM1RYa1J4RERObm1EZGVxVXBKTld4cWlaVGJHVGlldDFqYkcyMjlkSTRMTTRUVQoxeUJGbkwrR2NyZXpFVGVTUzNJRlpMaURiSWJxZkxUWkpUTWFUMVpLa0V3M290QnB6TnNOQTlxYjUwS3NzUGY2CmdzMUdBanhLVnVlVTlKRTN0TDQ0OXdLQmdIRzFRaW1jOUh0dnN2b2FqNDkwSWVvaVgrWUtKNHlUQndnQzBmT3QKOTlhbUh0cE9ZOWUxb2NTZFZCVW4rVmlBVUI5a1lQVm4xZ3dGaWlUVmZ4SGFrZEE5OS8xaVhNQW9zb1F1V3I3bAprUENMci93R0YwN0hhMHlpTlUxTzBZNVQxZ2tvSi81eWFYeXVtemI0V1ZvejlWQ0NkWElIa09TRHhuYnVMVTFVCjBYQ05Bb0dCQUptL29MdytlR0FlTXhnTlJrZlhaUUYwdlgrNm9YUFJmcVF4UE5KSkFRNWRXWGRTYVNHbk95UjkKc2JndUJWNlFVMFFrTjdEVS81UVViRXgwVkhhbWdiL0k4dnlpSUZHMmFCT1Y3WjIwcjY0ZUtjeExQNmZaN2RCYwpJekgvbGd1UXdsdWJQbkcwbG9QYXVHcTZSa2ZWU3YwSE1mR0x5aFN3Q0xMcGdDenFYT0dUCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6Y0M1b0YxWE1uOXkxQ3dReE10Z3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TWxvWERUSTJNVEV3TlRJdwpOVE15TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFybVJCeUFWRWNURXIwZW1jYmc5ZzNXdzIvNXQyNXlnc0xWYSt6SEFGdlpkUWQ1VEUKOHFNUzQxVkc5NE94ZzlvKzlWQjc0alhyQk1HZmZPejZJWDNkbklVVXRyZVRPR3orY2tBYy83NFp6YWhyNDI3YQpjei96VFE4Q3R1ZE9hV1JXMkx6ZkRXamYwTnRXODZ2MGhGQTRoeFdNQVNSM1QzNDBqUG80cXhBUTJ3M0RXUXFECm05MGpYR1Z6dEFsa0pRRGZ5N0doTGpySGVpOXFGN2VNOG5KWEV2NldzcktmZHk3SlViT0YramtPUFNUVUplV1gKeVhsQ2FvRis1NUhvK3I3aEI2WnJnWFJJdDBFL0orKzF3RE8rYnpXWTFNTnNzMWhVd1F1VmtkN2ZQNEtadTh3QQpzNnArb1hxZWxDbndMSCtETFROSkU5MFBiTGVCY05aYlVxU3ZHd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2plcGRPQ29ERGdPS29ldG5uNVA1TTIyK1ZjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVSeU10QXdOTnBlWWlvcGo5a1RYWUhwaVgrekJYY0h0cW9YR1o1QjJLMkN1cnVTUUZiLzlBCkFGN0ZDdXNmTzNBcFk3Z2pXbnhhbzRGRERvMGJRWUlxQ3ZEaDdmRis1cHA1L2Z2NjN6Q3cxT1Mrenozc1JvM2oKek4zZTFIVXNZUDNvUXdJOVYxZXJSZVpSZ20vZStmeGNOSCtDNlVDYnVSdThzOXBidXNsZFF6RFhzckYzUGVGWQp4V1FVUUs4VCtmZEdHbEtaT2ZWTktsOXJEOFRlcGZZYSs3N1VJR1lrcnI2cXlIeHBYbXVYSEtaUXN3dHc5TGxnCkJIUHMrM2NWZVZOUkxTS0d0bkk0M3RWbmh6Rm1TMTMrQmVnTk5yTnM1ZkZLTm1iT3N1RHBmdmtteXpqUDBQVSsKdmgxdmpiMDV5T1FjdzZpRjNTSlhSbDlhbDVSdVhhZHQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRUzRuUWd1bjBCWmsvclFJTFF5SDVjVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBMk1qQTFNekl5V2hjTk1qWXhNVEExTWpBMQpNekl5V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEYXBxUnR0MjZCNlNFbTc5MFdLbnBpbjJ2ck9QM2kKRFo4YUJiQjZtQWtpVlhiODVDQ1RHa1BZb0xITTE4NnIycnpxQnFMcjB6TDV4d3B2bkdYRnZLbkkvK243cEZabgpWTUE1SWhBbDZQb2RpREFsMXlXb1ZOZlZBNFkwQTNTMTR6V3BsV1JXdDl6bjhFWTUxL2ZrbFVuZFErQ2tQamkxCjNwa0tOaCtIUm8rVjUrUkIzb2hlTmRpS2pzZEN2MFRGYm15bG1Ld3hQYTF6ZjM4dGg1WldpMmt4K3BHeXRobXAKdEU0bjIyTFl3RGFYYk52c1JQYno4WFhsNjk2Y2xlRWx4SHdjdkNKUVBtVmlkVVNrZ0tSK3FXWDNZUkMzTUQ0cApYc2FTNWlyV3Qya0FicktUY1E0bE9pSlpGaVo1Szk1a284M3NQSUFmTndxU0h4Q3FXV0l1dFRkWEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZPamVwZE9Db0REZ09Lb2V0bm41UDVNMgoyK1ZjTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFqZ1BMdVpnTWZ5UWxlZ3c4U2l2VnFZSTNDSFVUSCtFRHdGa1RyYzY0WFdoNHNhTkkKMlFITm1KR1JvbWlEb3FCOGVGdkorK1VaSDUrOEljUlVhVTF1dFNiZ09la2xCU29PcDJWNmN2bERaUWRaSGJCdgpuNVBXenkzOEFNSDJCTTN6cEYrSzVjMlpEU0VrTVRibTBiZmJtb2hwRWwzVWVhbTJINXNMOXIxclQ4NUZ3aGxSCmJXQWpKRjY5bXIwOTJEbGRXaVI3RHBWbTQwQmkwVjZBemZKc3hNOG50MGt3ZytxMVV3bHpZT2FMdnhoSU5mK3IKaEhvS3dzUWpTR1JrNXd2UWZJejRVdEg5UDRLRytQN29uNVJ4bDBvOEtocDlrTEpmeWRJR2g5R3c3cWZkV3NIYQowT0Mrbm9wQVNDQ2M3TDFoWHhHNEV1THE0d29YYTFJSjQvbXhhUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnFha2JiZHVnZWtoSnUvZEZpcDZZcDlyNnpqOTRnMmZHZ1d3ZXBnSklsVjIvT1FnCmt4cEQyS0N4ek5mT3E5cTg2Z2FpNjlNeStjY0tiNXhseGJ5cHlQL3ArNlJXWjFUQU9TSVFKZWo2SFlnd0pkY2wKcUZUWDFRT0dOQU4wdGVNMXFaVmtWcmZjNS9CR09kZjM1SlZKM1VQZ3BENDR0ZDZaQ2pZZmgwYVBsZWZrUWQ2SQpYalhZaW83SFFyOUV4VzVzcFppc01UMnRjMzkvTFllV1ZvdHBNZnFSc3JZWnFiUk9KOXRpMk1BMmwyemI3RVQyCjgvRjE1ZXZlbkpYaEpjUjhITHdpVUQ1bFluVkVwSUNrZnFsbDkyRVF0ekErS1Y3R2t1WXExcmRwQUc2eWszRU8KSlRvaVdSWW1lU3ZlWktQTjdEeUFIemNLa2g4UXFsbGlMclUzVndJREFRQUJBb0lCQUdjbCtDbitQL2F2U1VGNgpKTDFoT3EwdDhoWmNvNEN4MWwzTFUwN3lURlRUSnJmMDB0MHlwZEViTmVXaDVWQ3pkeTJjQmQza200YXovRnRjCjE3SXA1NXI0QjZUOENQcmtRMjV3Z0ZleUNkUkd2QmdONENrQ0pYUExIdE9JMGRWQW83OGx4OWtWRWZTbEtDdi8KazJWVmZDd1M2blh4R0lYTHhqekgvYVd1aHV3N1F1dDhtZ01tbndoQ0ErOFBjczhlNmRFVTJ1bDY0aGhOYmNHNAo4ZUVPbjNKRTZ3a283R1F6bGcwOEZtWnIxM2J4STRHV3E0Y0RlbklBVHI5N3dqR05LdWN4bitVUnhpaWhQajlMCm54NHpvVXlPNU1rU1FHSlJkY0tiQ2JQZ2tyZTZYWHZQSHhLckE3cW9rRU1HUDRXYUs4eG5JYjhhNmQ3Tm9BeDIKWGliaXBORUNnWUVBOG5UMXorZk1md2doK3A4cjA1L3NjT0NBeHBQeFdEY0ZwL0FiMVlJMzNqVE1SdkVNS1NYawoyUk1mWmFMazgwU3Q3dE5hdEpYcVNmUGl1Tkl6RXgwZXdPT29pdGE1dmtXTnZqRk40OHkvazJYR3V3ZlRyWDR2CmxRZS9paEJyWmNHWkR1L2V0dUN1VjZCa1E1RmkwL21RUkY3RUpVMDU5d0FRZmZyWDZvT0pCM2tDZ1lFQTV0MUUKT0thaFgwZ2oyVkxiYUJWT1BhWEJZSGNyWFZVd0o0eDFUYnZ2MkVDei82dXlXeDh5aTNqa0VZYWVzYXJiNjNvRwpNaC9FMWJ4b0haNmxROEJWUnQyNWdJUWd2ZGphcG9QUE9xb091VEF6Yk5RYjVJalNtbkgvU1R5V0NIV2g1dzRmCi9lakNTZ0lIelg4QzQrSWZzSHRGVUcwMmNTNVJRVVBxemJLNzhVOENnWUJJS05rejdHZ25jcE15VlFjbEw5YWQKN2FORjlxZ0F1amQ3dVBGL3hRYTlvbmNkc2dZTmhSS3NMSTNPb1FHRkNXNit3cmFmUW5MOVdaR2pzaU96VDVwawpqQjBRWFVIZ3lEQ2NaMjRvR3pyMU1uaElGOWMvTG13WTdicHE2K0lhNGRpYzRuVWxkbzlNMHhha0tYUUJaS2cwClFRUWRtZk5qZU9odnBpVjJ6WGtOK1FLQmdCenlGekNuSzhwL2lBY2lqV0hpY2ZubXczVXQyK0VLNGt2REg1NE0KZDBqODY5U2RtWEkxV2lnRWswdmpQaGgybkxaTWlXUlZlVjkzRFBMUnhsVFZVNXZjQnZzbkZkZlh6YXBkRW1sLwprdk1ES1I5M0JMeEZyMm92NnRzcTNvRFhCdUtxY2Jackxaa0w0aUNRMFRMelVoZlZqTjVGb3pMVHBOcHpBb2loCjVWQ2ZBb0dCQU5CUUd6MzQxSVVRMGZWSXdPcmlaZ2xDSzVUNC9RTXdOR2hoSXJoSzVpUTk4d2k2RktMcHJyVHEKeGIweUJWdTgvWlhXV2QzSVJzTzE0cUtSYTE4OFlJUUdIV0piMzNzeDMwV1FObXZxT3JLVUpadXdCTHc2OVJrcwpka2dWcjZNNU8wQ2oxeXFod25sUU1weGxuYVFqdUErTVM4Mnh0cjh6WW1JeTBrdXVWbGNtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt6Y0M1b0YxWE1uOXkxQ3dReE10Z3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TWxvWERUSTJNVEV3TlRJdwpOVE15TWxvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFybVJCeUFWRWNURXIwZW1jYmc5ZzNXdzIvNXQyNXlnc0xWYSt6SEFGdlpkUWQ1VEUKOHFNUzQxVkc5NE94ZzlvKzlWQjc0alhyQk1HZmZPejZJWDNkbklVVXRyZVRPR3orY2tBYy83NFp6YWhyNDI3YQpjei96VFE4Q3R1ZE9hV1JXMkx6ZkRXamYwTnRXODZ2MGhGQTRoeFdNQVNSM1QzNDBqUG80cXhBUTJ3M0RXUXFECm05MGpYR1Z6dEFsa0pRRGZ5N0doTGpySGVpOXFGN2VNOG5KWEV2NldzcktmZHk3SlViT0YramtPUFNUVUplV1gKeVhsQ2FvRis1NUhvK3I3aEI2WnJnWFJJdDBFL0orKzF3RE8rYnpXWTFNTnNzMWhVd1F1VmtkN2ZQNEtadTh3QQpzNnArb1hxZWxDbndMSCtETFROSkU5MFBiTGVCY05aYlVxU3ZHd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGT2plcGRPQ29ERGdPS29ldG5uNVA1TTIyK1ZjTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQUVSeU10QXdOTnBlWWlvcGo5a1RYWUhwaVgrekJYY0h0cW9YR1o1QjJLMkN1cnVTUUZiLzlBCkFGN0ZDdXNmTzNBcFk3Z2pXbnhhbzRGRERvMGJRWUlxQ3ZEaDdmRis1cHA1L2Z2NjN6Q3cxT1Mrenozc1JvM2oKek4zZTFIVXNZUDNvUXdJOVYxZXJSZVpSZ20vZStmeGNOSCtDNlVDYnVSdThzOXBidXNsZFF6RFhzckYzUGVGWQp4V1FVUUs4VCtmZEdHbEtaT2ZWTktsOXJEOFRlcGZZYSs3N1VJR1lrcnI2cXlIeHBYbXVYSEtaUXN3dHc5TGxnCkJIUHMrM2NWZVZOUkxTS0d0bkk0M3RWbmh6Rm1TMTMrQmVnTk5yTnM1ZkZLTm1iT3N1RHBmdmtteXpqUDBQVSsKdmgxdmpiMDV5T1FjdzZpRjNTSlhSbDlhbDVSdVhhZHQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU1KaHl4ZkxPME1ydStXM1M4VFdycDh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TWxvWERUSTJNVEV3TlRJdwpOVE15TWxvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTUM1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzVUZjg3M01OZU1HQTNUY3p6T3hlL0RxWXUKUTRjTWpaRVFORk9iR1F3UTdvTy80NWFmcUEyOWQ3ZVIwZEtXOVlPZlR3UEFZTzRydVEwSkQ5UVd3OGdiZ1dheQovS1lpcDNyOXFqRGxQQ0RLWU14cm9kU3NzdXc5RWVTb3pweG9oNVJtZ2ZUdVhPSVdVY3NFUmhZMnVpeVVJMGpaCjFPbGNzQTJBenZZd1RBUW5wc21iZFZ6R3Fpcjl2RTVZS2VXQVhFZFBobnFVaVQ1MjhBNDl6RzZrM0I3ZHBCZGEKUkJ0cEtlMUlFSk1nWnhySVdTdThnRFkyRWFkQkN4SFVZRkxLMW5UNDBMTW02VFZ1Y0d5aVdQTjhmSTJiUGl5aQp2VlZ1cGs3QThIMGxURldIYk1jdWxMY1Z3NEtNVU1uQ1VXWWIrOUxpTCsvUVhuTHQ5dDU2bncraVBCbHRBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGT2plcGRPQ29ERGdPS29ldG5uNQpQNU0yMitWY01DVUdBMVVkRVFRZU1CeUNHaW91WXpBdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDcGt1N0Z6QmxLRTVDWGZDQXRkTWllSlZSd21JTUhyU3ZXVi8zdnZEeGgKWUJLeTZQdWJ3eGh1bnZZSzNwUXBYRU5wUEFhZW1tUGkxcFpxRlNYRWZNYWcvSFhuYmVkell6NEs5bUxYZG1ldwpSazZKZWdQUGkydHVWSG5sWkl4VnlTNTQvL0JLYjNLdWtzT1IrNzE5RWVORDhKT2VtZmxDQUZ6NEIvbHNiWk56CmNJemhpREUvRUpNUHkwN0pta1cvSFVjR3V0VWlPU3ptR2NVTzI0U29XTkUyUHB5dVp1T25CMHJJeGozbTh0VVQKRmlSSElvMXRoL1l3OVJnMXlUSEQwZUJ0ZkIxUjBzTjFDRlE0VHZhTHhiRk5hR0ptekZSSThSRjhnZzA3eW5yOApqQmdPbTJFNFF3Q216d1dMbmNURHV5alg1Um9rSmxoaW5TNmpUZzFCcXlObQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdVUzL085ekRYakJnTjAzTTh6c1h2dzZtTGtPSERJMlJFRFJUbXhrTUVPNkR2K09XCm42Z052WGUza2RIU2x2V0RuMDhEd0dEdUs3a05DUS9VRnNQSUc0Rm1zdnltSXFkNi9hb3c1VHdneW1ETWE2SFUKckxMc1BSSGtxTTZjYUllVVpvSDA3bHppRmxITEJFWVdOcm9zbENOSTJkVHBYTEFOZ003Mk1Fd0VKNmJKbTNWYwp4cW9xL2J4T1dDbmxnRnhIVDRaNmxJaytkdkFPUGN4dXBOd2UzYVFYV2tRYmFTbnRTQkNUSUdjYXlGa3J2SUEyCk5oR25RUXNSMUdCU3l0WjArTkN6SnVrMWJuQnNvbGp6Zkh5Tm16NHNvcjFWYnFaT3dQQjlKVXhWaDJ6SExwUzMKRmNPQ2pGREp3bEZtRy92UzRpL3YwRjV5N2ZiZWVwOFBvandaYlFJREFRQUJBb0lCQUc4NlBCd0lsVlJ5SVM3UgpDbFp0Z0FGMG41ZGhmU3l4eFFNL0JYZ3hmcWFqSkg0SDlCOTlWbElHRERBQkRERUV5YTdVVk9JaXpKTitEaThFClMwQW00SFJ5SmQwRi9nc0xFSzQyZkFiOUlvbVh0TnhlVlRRY2FlVDJXcFJoQUUxV0pHT3JXZ1BCeVF1d3FQVzEKeEJ1eGdKU2k0Vld2a1N2TG1TOWFDemhPU0tnclZXendjTlU4MXh6cHRoelpMU2QvNEN0NUJlb3lqNGdTa0o4cwpPUDNORkYzR0tsQjRCWFFqZnhBbjl0UDhJRlRMM0dIeW00RVcyMms5WFNKaUZxWWZpSjJTUWpCMzZHdjVJd1F0CjRsaHh3SFQ2Z1dwR0dURTU4NlNMcGx1UC9FdE0zQnBQd3lwTEZUTHdZZThkcENaak85aGFNTVJ5WGgwZURjQkoKSm1KUnlvRUNnWUVBMGRLZDN2YnM4cnF1Y3p2UmV2Y24vUVBFMUZiMjljNDRua0RLMlJKZW81eFNHSzZVUkl5aApLd1haUkJYbE5HbjdjQ1M3ak9vK0VoVElBblZHb2xlVHlKTTNRV3hZU3NjWkxMeitqT3JoNDNrMllVcEI0Z05pCkRuUGFpMlVreGVhR3NaWDlqRzZzcElTK3FWdERxVFdWZUpUQ3V0Z0w0d2FkRjhqcTdKbEVEajBDZ1lFQTRoWUoKZU5yTjZvL0M5V1h3YVBnK3Q3dlRCMmZVVUErSm9iak15dTlyY09jQXdJZnViazdEcFUwNGEvTFcxaHM3UDA5YgphTWZqRVZvczNjalJCOUkrNU9jTzFPMXQvWkRhWXVscnpJRFc5WWJEYjFKWGxYakJraU9FNVJEU1lFdlBQd2VNCk5nY2RpTlNobUtFTmxpUFMwbFZNK1RaT3VBdnNRa1h4ZVY2aW12RUNnWUJZRlFxaEp4ZWhiaXo5d3diVmtCd0IKWXl1bDJEd2tSRVlRYVRLK25hK05EM3FIVWdKOEpHMGtHbmh5MUo0N3VxSUxHZUNCNzNQUE0xb2piZ2dRN3FMagplS21obFZJYlVpbUhWbStseUpTN1lZOHFtSG0vMzV1eVpZQkJORnlUbDRyRDBpdDJZSitwRVBEWk42N1h3ZDdWCmw5MkhnbHE3RzNPbklIaytpYmpBSVFLQmdIbmxsYy9TY1NtaHYyVGVSSVBrTExTVmtVOHgzUmdaZUlSNGhmcDQKb2Y0cW5vNHYvQTcvYXA4S2hudzFYejNyU3NOMHZ2MDhvS0h2YzdkVW1kZFV0VkpuZmVpeDV4Yks3ZVJjcENHTAo2ZHBSZ2JmWXRwNUJrR1NCd0JwZE9vQnUvMXVsYnlTR0s1ZGx4WWJzZHMzWG5NaUk4MHArekd5UkNSNG1aZTZoClpweVJBb0dBU0lZR0Y0bXMwWHNsMTRuYkp2QjJMVWl3MWViZ2V2Yk02Ly9nNUxvYmJZQTNWS0tlRjNWUGNVbHkKY2dVZTVDS2lpUSszcTRZTThqN1RYREhzbXhNdXM3d3BIaUloeUhBdENNVFdDYUlSNVBWZC9hbkdvWTA5UnBrUgorYVZXOFZZYnAxVSsyMElxamFWMDNIL0RVOVR5QU9PTldvUUlkYmNhUTdiOElZYm55YkE9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c0
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.0.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c0
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
