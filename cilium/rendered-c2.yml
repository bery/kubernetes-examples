---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FR3NQdVhRbnU1Z0cvWCsveXhRZmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TTFvWERUSTJNVEV3TlRJdwpOVE15TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzVHQ4L0RQZ2hWWGZKdmM1YWRoQkd0dU5NbCtVdTZZNEUxQVp0LzZaNkpnNGh3b3cKaGxMZTByTHZtZEdlTmdtVFM4MXhSRFRnaWRGYzdCK2k5QkZTNlJxNERHMTdScFhzWlZGRDltcTMvS3F4U0VneQpZVHAwZ1NjZElRNm1mK1J1bEJEMmlyVkZUU2NuNUJGQWUxdSs4TW55T3Y5WXVUNm80Wmd1a3JTTVVqSnBPUUhqCkxzYU5xY1gxVnIvN1F6QVNORmxsOFlncU1oRHF4UXlRdzBZQTVGNWRDaGxLN0Yrb3N6ZVJENXovN1NTZ3pUK20KY29lK0ZLclhPNFZFZTNsSllpYW9UOFlSTDc4Mk1mYkVqUFhPdXFnaTNNRVoxdXBpMUh4RjBTL1ZsVXZiWTNJegpDRmpBUEVHSUJuK3gwOXplRm8vRkY0ZUVWOGJ1N3lSQ3ZsRnZXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0xvNmhZYVo3My9lS21NenBLSHhKcU52YTkvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQllaQWZDeHYxRTl2ZTBEZXl1YTB6RWwrRTIzOFdBZGVIMjZKdm5PWDJKUDE2TXVWZmxrbUtNCml0dGNRSVU2b201R25yQWp1eVpEM013Wi8zekJRQkcyTkF0K2Z2WWh4cUJaNStZWGVzbmFPMmV3N0pxN0hnNkUKUUxWcElpNWhQYkJNajdpREVSUUI2cFArdFo5VTN5TkdhWVNsOEJMeXRyNlZuUWlPZUlzQzhZTWFBakxDbyszYwp2c05XT1FKWW1sQ3QwSWhvZzJtNmJYV3ROa2xhY2ZwY1Nqd2h5WHYwYUNwTlpwZ1k3TmlOMUE1N2dEbTNmZTBmCkxhNnM2a3YrOWNndEE0QURacm9hdTE2Vk1VcWxVemcvcDRHbDlqcVNNc3NXR3FrcEI5am1ra05qZnVPNjlXa2oKSEE0TFNraUpPN0V5ZVhUK1hVSGZPd0VIcG1MN21oaEQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBM1R0OC9EUGdoVlhmSnZjNWFkaEJHdHVOTWwrVXU2WTRFMUFadC82WjZKZzRod293CmhsTGUwckx2bWRHZU5nbVRTODF4UkRUZ2lkRmM3QitpOUJGUzZScTRERzE3UnBYc1pWRkQ5bXEzL0txeFNFZ3kKWVRwMGdTY2RJUTZtZitSdWxCRDJpclZGVFNjbjVCRkFlMXUrOE1ueU92OVl1VDZvNFpndWtyU01VakpwT1FIagpMc2FOcWNYMVZyLzdRekFTTkZsbDhZZ3FNaERxeFF5UXcwWUE1RjVkQ2hsSzdGK29zemVSRDV6LzdTU2d6VCttCmNvZStGS3JYTzRWRWUzbEpZaWFvVDhZUkw3ODJNZmJFalBYT3VxZ2kzTUVaMXVwaTFIeEYwUy9WbFV2YlkzSXoKQ0ZqQVBFR0lCbit4MDl6ZUZvL0ZGNGVFVjhidTd5UkN2bEZ2V1FJREFRQUJBb0lCQVFDbEFxUDhzT3o4UnNxRgpFODA5QjFHNEtKNHVQbUIvZmtGQkZuTzRheXg4OGx6blRGQlpRQ0oyNFlRWkpPSnV4OEdYdm9xSEp6RjdXaStHCjV5bnlCYUhqd0V3YTZPWVVCZXNtdnZDRU1hRTkwa3NjOE15eS9KaTlaR0V6c091N1pMU2R0L0ZNRUZ5NmFVUTEKdGpCMFVrQWU5V0c1WTQvWHk4YkhUVzBmZTQ5V0ZtUHRzY2tZTHFNcUNiakgzZUxqMTJ6QVFrOE0xZkFySUM4cwplMGVSQUtPTS8wM2tTdndPLzd6Q0VVWm5JUFdhL1NCZ3hiaVJVZElZbUo1alN4RkV1NjdCRjh4cmYvamZIeXZyCkh0YkFQWlF5Q0N0SXVQL2gvUHFWZzhhc2lKYjlPTVFUNmhWaCtTaUZHTXpDR3NpTHp1V3BnSGFvWWhZTG9nM00Kd2lXb2l4NHBBb0dCQU45S21IeXN6SzhVd0JLK1RvNmdiUGwwZ2REUE1kakJnWGNIT1gyVWtLRzZTQlZVc3lmLwpsNGs0c2M2a3ZmVmxoRXhJT05rL0xRZEFnSFZTOE82ZGoxNmtKbGNUS3RhQUNiTTM4Y2JhcVBPUGxSdmExdXBZCjZIaHBvUlJ0WEJMcVBqNkJmellvM0pEZitLcnlNSW9KT25uYnh4WFY0UDdmdHNkaHRHK01FNy8vQW9HQkFQMmoKcmdYMDZTLyttOW01Mmk3eHRGczdGaVlKNnFpMGhvN1Z0QXpTdVJPakJ6YXJUc2J3eUxDWmhxVzBuNXNDMzFYMwpNZUtxMGpKTDV5UzFUUE5tWUl6cnNvSE1mN2pYcUV4WGQyUVRmOFRaaW8xVm40V3drb3BkeXdKaFRvZnpabGZ0CmFEZi80N0x2bzZlZFFGZHMxSTRsTWlpelRWb3JqR3hsS2UydWtOQ25Bb0dBYjgrWnRleU5maXBrMTczbDluT00KdmdsQ0svNWtsb2FuUHFRbWZLVFZHN2I4KzNselVOY2kyWHJEUnBlbDYyalBLNmVLbC9hVHBLcis2RUVGRm1kZApjR1hBTVNBTzltUWM5MXBQUG1VbDd2aDZFUDJ2V3AvMG9MODhBcytVS0lDVmRKVkJ6eXY4N3FySWlVbEhWd2V4CitXMDlMc2p2cHBEOXBLOWZPL0FudjU4Q2dZRUFocStSTEdhV0lUOVJvVGRZemM3WjJBd3pRYlhJWHhlbDBGbFkKeCtwcUR5eG1Heml5bDErckltUVVKUkFhSk9WTWxVaXp1OHE3M2F1Q3JYSjh6MDlRKytQNUlZWG5XTTlqOWs0SAoveU4vbUpkd1JJYndNN3pFeENiME0ycGFta1M4MXZvaGVvTXVkWWxkWFJkYTRGSFJPVDQxT1htbEhMbTlVcDRSCnVyNFU5a2NDZ1lFQWpWQ1dvVFBFbUwxNTZycVJFRTg3c0U1TXFVNGFEdjQ1MDRuZ0U1T0dIYVRZeFZ1K1RPZDQKZjNmVG8vSFBWcUpIYWR1R0t2T2s3QmpWeWlkUEt1SnJKMjVzY2EwWktlc2l1bzlsdmNUU2g5Sk5iRmNpczRyRgo3ekRBQ0R0dkg1ajFBZGkwYlJpbDNFZmpEaWdDeFpPNXppNjdadzVmaURWcURsSTc0Rkw4dCt3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FR3NQdVhRbnU1Z0cvWCsveXhRZmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TTFvWERUSTJNVEV3TlRJdwpOVE15TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzVHQ4L0RQZ2hWWGZKdmM1YWRoQkd0dU5NbCtVdTZZNEUxQVp0LzZaNkpnNGh3b3cKaGxMZTByTHZtZEdlTmdtVFM4MXhSRFRnaWRGYzdCK2k5QkZTNlJxNERHMTdScFhzWlZGRDltcTMvS3F4U0VneQpZVHAwZ1NjZElRNm1mK1J1bEJEMmlyVkZUU2NuNUJGQWUxdSs4TW55T3Y5WXVUNm80Wmd1a3JTTVVqSnBPUUhqCkxzYU5xY1gxVnIvN1F6QVNORmxsOFlncU1oRHF4UXlRdzBZQTVGNWRDaGxLN0Yrb3N6ZVJENXovN1NTZ3pUK20KY29lK0ZLclhPNFZFZTNsSllpYW9UOFlSTDc4Mk1mYkVqUFhPdXFnaTNNRVoxdXBpMUh4RjBTL1ZsVXZiWTNJegpDRmpBUEVHSUJuK3gwOXplRm8vRkY0ZUVWOGJ1N3lSQ3ZsRnZXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0xvNmhZYVo3My9lS21NenBLSHhKcU52YTkvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQllaQWZDeHYxRTl2ZTBEZXl1YTB6RWwrRTIzOFdBZGVIMjZKdm5PWDJKUDE2TXVWZmxrbUtNCml0dGNRSVU2b201R25yQWp1eVpEM013Wi8zekJRQkcyTkF0K2Z2WWh4cUJaNStZWGVzbmFPMmV3N0pxN0hnNkUKUUxWcElpNWhQYkJNajdpREVSUUI2cFArdFo5VTN5TkdhWVNsOEJMeXRyNlZuUWlPZUlzQzhZTWFBakxDbyszYwp2c05XT1FKWW1sQ3QwSWhvZzJtNmJYV3ROa2xhY2ZwY1Nqd2h5WHYwYUNwTlpwZ1k3TmlOMUE1N2dEbTNmZTBmCkxhNnM2a3YrOWNndEE0QURacm9hdTE2Vk1VcWxVemcvcDRHbDlqcVNNc3NXR3FrcEI5am1ra05qZnVPNjlXa2oKSEE0TFNraUpPN0V5ZVhUK1hVSGZPd0VIcG1MN21oaEQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRR3VWdHNhWHZXSkU2UFcvZXNRbmJXakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBMk1qQTFNekl6V2hjTk1qWXhNVEExTWpBMQpNekl6V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFERy9ZK3NtNk1ISTBDaS9ySmN1TXdpdEc0ZC8yV0IKakRDcWlXYmd3aVhrbVdEVWNTMXRWdHNpQmh0N0MybEhzL1NFNTltUUQxSjhwUXVmNW95ajFIZTdpaU5lSFZ3Mwo0MGlwSm96WDFiRjVhZGc5MDRtbXRWb2FjZzFBRFlHSXNDWVVrZzQ4WlljU045azNMV2E5SWNXV0ljTHVwUWlGClptUFNESDhmUjZ5VTdhb2YxSGEzcGh1d0lod1BHc25UTFVFR1VFYzJTMTZRVmhjbWFoMzJUb1I5N3RFbkNUTlUKQnZ2RUJSRU1FQnQ1QWhsS3BlSlA5ek5OTHhqVjc0QTd6OTNsNTFvUzFZdGVtOFZDa01KcDlnTWxyV0xsQnpMMgpJdjdsUXV1R2Mrcyt4UndwOHhzRFJKT29qVVd6L1lhRm5xVzdnOTAvMkZxQXUzY3VMWEphcUtkSEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDTG82aFlhWjczL2VLbU16cEtIeEpxTgp2YTkvTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFqd0lyNFJFNStiS3hXWGRKaXdIT0s1NVZQay8vR2ZQT3ZMZVJEMVlsUnA2OW8xQjIKUmpKZml6RlJMRVpvRDRuTlpiS3BteUxyUkVBaHgwbGtyWjVGazJiK0FMQi9FQVhIamd0QTdxL3Z0dERsUVFkdQpVaTByblRBOFRWQUdjK1B5T3gwY1JEM2wya3JDMmY5VHYxa2hVSjk1d3FUR3VIdlNFelRCTXJ2VnJST0RDR2NhClBBbE1qNjlWRDE5VEVTNSt1OENadzZnOHdyYkZCRUpUbGRLZWtNNzRuZHJGZE0wd0hzMUMxNEExVXlzOWZvSzcKWGxyZi9WVjU2MnIwd1VLSGZxc21ucG9LOVBZSjZiM1QrRHZsQlBDbFVEMDNUUC9yWEhZenJwYjV4UWxnNDNlQgpsQmIvd1E3VEtqeEUvOFZ1M1QweXU1U2FkYnhWeEtqYk02RzRFQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHYyUHJKdWpCeU5Bb3Y2eVhMak1JclJ1SGY5bGdZd3dxb2xtNE1JbDVKbGcxSEV0CmJWYmJJZ1liZXd0cFI3UDBoT2Zaa0E5U2ZLVUxuK2FNbzlSM3U0b2pYaDFjTitOSXFTYU0xOVd4ZVduWVBkT0oKcHJWYUduSU5RQTJCaUxBbUZKSU9QR1dIRWpmWk55MW12U0hGbGlIQzdxVUloV1pqMGd4L0gwZXNsTzJxSDlSMgp0Nllic0NJY0R4ckoweTFCQmxCSE5rdGVrRllYSm1vZDlrNkVmZTdSSndrelZBYjd4QVVSREJBYmVRSVpTcVhpClQvY3pUUzhZMWUrQU84L2Q1ZWRhRXRXTFhwdkZRcERDYWZZREphMWk1UWN5OWlMKzVVTHJoblByUHNVY0tmTWIKQTBTVHFJMUZzLzJHaFo2bHU0UGRQOWhhZ0x0M0xpMXlXcWluUndJREFRQUJBb0lCQVFDYTg2M2ljaHRrSG41aApya1dEMEY4ZGt6VEFaVFZNeUxiSXhVLzRLeGJJeU9yTzR3YkZ3c0hHMzh5Y1p3bG5UV2xWNlJqUWhpM3NZN1VHCm9jZllkMFY1SXh0aFdTbUxWNUFvTDUyeklITWZvVjFDMzZ1cnhrSlFuNGxUM0hDRzJPditUckdKTkdJV3ZLaUgKdi9IbHl4dUtTZVg2WVVhZVlsbk9vZTZIbEE5K3M2YndWYVFNZEdWMzVQNjBLdTlaT0RHSndZeEZhdnlPMzBmSgo4QTBzd3JOYlZ2bGNDZTRiZEdrS0F3a0tVczhmell0d2dmL1h2WTZUcjBQbnltaGFYdVo5Rzc5amQra2Z4VHN0Cm5yNGZObzRMSWpiNktnSVcvL0R5VkozVVUyY20zeCtYeHJDVjNEQmVpQ3JmMVpQMWlaa1NSZGJoSE1QaFZvMFgKb28rR282R3hBb0dCQVBDZlZlY2QrVEE0NzJkR2ZCTWdPL0hJMllDVGswUGhURjk2cE9Ra0Mzd2tGZFFnQ0dhawpRMlhJcGJZWkRvWUErOFRrRUgxUjJTallOcTMvQmkxTDIvbGVJQi9lYXh5MnovclBGeUxXOXRTQ3ZPcnpHblBmCi8xL1RsMVRtV0Z2enJlVmdoaFdQY295RWs3blFseVZpbjE5VlBkRjVxNjVHUGY0ZUtiRXhIbFB2QW9HQkFOTzEKSFBTbVA4OHRTT0FoRmRnN2k2T2RsUUVmSGw0dlF4SThPMzcrTGtPb3dpS21aczU1dWFRVitBY3FCc0l0TmwxNgo1Y3VFc3daejRLcTdqUFQ4cXZ4UUd2K0Vha252OGRIemh6VjlDQ0tWYnhuY2V0dlRQdXo2RGpCdXNMZ0hvbUFtCitYNGZqb1E4SlZ6QktUWUJaUkJmdWt0ZDVXcFdpaG9Zek5DRmVDb3BBb0dBUE5LcDdpL2ZhMWNZL093T05POXkKOTUwamphTEFHT3A4V2E0d3ZCSjRiTHJhWWJKdkxUTGNib0FYa3o0bU02MVA5dWNIWEFZeWRHYWkrN3g1SFQ0TgpycTBpUmF2OU8xYmluNjExVmJNczFXN3V2aDBSVkxVTVluYWp6Q3dscmFpZERsd2x5SkZvRFNqK0JudzVtSk9qCllYKzBqcHpJenRhbW1QT2E2bFZXS3pVQ2dZQTBGN2FlUkdJakdtTjZNdW5ySVF2RklMdFBZVmJabWd1STZ5VkEKcEU3Qit6NTV4RFE3emh2dDBqSUxvVDIwZmVlSXJQcnFUeWEyQ2NGWWdYbTN0b3hrTlZuUFVjZk5sYXNOSEQxQwozaGNvVzFqUkpqMWM1ZWZ2NjcrZUR6NlFxZUE4aEpxVGZEUlhPVzJBRzArR3FHVXoyRHBBM1VQY0hKc3l2TE41CkE3NkRzUUtCZ1FDUzJ1ZHpzaTI0Ykg4dzA0K2JiVE1nNFh4d1I5SlBRYkxNQ1ZSbFNVVFplKzZBa0VSbDBUN3kKak5LK2UwQ0Z3TVd2dDExQjI4OFlSVHV1ZTBoOTluZ1k0VzFpeWl1ekZJRUV0NC9DZU5XVVFhcUVzWEtZV214SApPQ1BQV1JBakVDQnhwbzZFekZVSDRvenE2ZzJhUTI5YWNxK2RiWkNwVWNjMWo4bmtVR0d2aFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU9FR3NQdVhRbnU1Z0cvWCsveXhRZmN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TTFvWERUSTJNVEV3TlRJdwpOVE15TTFvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEzVHQ4L0RQZ2hWWGZKdmM1YWRoQkd0dU5NbCtVdTZZNEUxQVp0LzZaNkpnNGh3b3cKaGxMZTByTHZtZEdlTmdtVFM4MXhSRFRnaWRGYzdCK2k5QkZTNlJxNERHMTdScFhzWlZGRDltcTMvS3F4U0VneQpZVHAwZ1NjZElRNm1mK1J1bEJEMmlyVkZUU2NuNUJGQWUxdSs4TW55T3Y5WXVUNm80Wmd1a3JTTVVqSnBPUUhqCkxzYU5xY1gxVnIvN1F6QVNORmxsOFlncU1oRHF4UXlRdzBZQTVGNWRDaGxLN0Yrb3N6ZVJENXovN1NTZ3pUK20KY29lK0ZLclhPNFZFZTNsSllpYW9UOFlSTDc4Mk1mYkVqUFhPdXFnaTNNRVoxdXBpMUh4RjBTL1ZsVXZiWTNJegpDRmpBUEVHSUJuK3gwOXplRm8vRkY0ZUVWOGJ1N3lSQ3ZsRnZXUUlEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGQ0xvNmhZYVo3My9lS21NenBLSHhKcU52YTkvTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQllaQWZDeHYxRTl2ZTBEZXl1YTB6RWwrRTIzOFdBZGVIMjZKdm5PWDJKUDE2TXVWZmxrbUtNCml0dGNRSVU2b201R25yQWp1eVpEM013Wi8zekJRQkcyTkF0K2Z2WWh4cUJaNStZWGVzbmFPMmV3N0pxN0hnNkUKUUxWcElpNWhQYkJNajdpREVSUUI2cFArdFo5VTN5TkdhWVNsOEJMeXRyNlZuUWlPZUlzQzhZTWFBakxDbyszYwp2c05XT1FKWW1sQ3QwSWhvZzJtNmJYV3ROa2xhY2ZwY1Nqd2h5WHYwYUNwTlpwZ1k3TmlOMUE1N2dEbTNmZTBmCkxhNnM2a3YrOWNndEE0QURacm9hdTE2Vk1VcWxVemcvcDRHbDlqcVNNc3NXR3FrcEI5am1ra05qZnVPNjlXa2oKSEE0TFNraUpPN0V5ZVhUK1hVSGZPd0VIcG1MN21oaEQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUtlU21mVTRqdmJ4S3VkR0h3YkpxMDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd05qSXdOVE15TTFvWERUSTJNVEV3TlRJdwpOVE15TTFvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTWk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRQzE1c0RXWndaMG1KK2t1dm5qb28yUFpyVTkKd2ZQb2YxR01hdzgzZmRHc2pxc1gzMzNGelIrcFl2cW9lTGJqaGN3L3pDeXMyZmRpeVZuMkNyVnVlOURJdzJuRQo5RzRuSDRhUmV4dGYwRGRjLzh4MzhWRGRKYzNFRlYzUzBHTHE1WEUzWG03dlZDNGIweEppMEl2RW1oMlFZK2Y2CmM4MWUvcUxZQ0dyUTlLenNBaHZkZ0RSRXBqVmpYbkR5dmQ2dXZpQzh3Q3dickxWVTQ0RDMvMEhYd3pqQkUxRjEKOEZxeEdHOXpRNS9sU0xnajR5NnRIYUw5R3pmN2M2UGtFdE1YUlZEQjdNMjBvbXdWZGt3a2tIM042b3pUZFpSOAp0bVhFT1FveG5VM2dWdnZYZXhDbGoxOWg1bFFwQmNZQm9WV2NTNWhoazZrNVVyYWZ5K3BCOFBYTTBUNlBBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQ0xvNmhZYVo3My9lS21NenBLSAp4SnFOdmE5L01DVUdBMVVkRVFRZU1CeUNHaW91WXpJdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDWnRwakpyZCswcitpQy81c25HQjZwa3NPMEV5eEwyMzR4VVJrZml6ZjIKRVU5bXlObENrSXhVZDEveWhHVlFhek8zRnBUdUx5RnNkVnQzbUoxY3o4SzFXWWVtelcvNDNDRGVLN2s5RTZ1Uwordi82WFBCZm4rMWhEVnltdmNwZGFmSEZycnRNMVdMRTVGY3BESExqM1JlOEhFSFVIUnEveDM4VFVOVGQ1ZTk5CkNwWFhqZnhhMElheldERGh3bW9Ib1BPNUE1U05NdHFyM1RGMGErOHFBZ2lzSk9wbkJXWDlmRDRTRTFsdVpKM0UKM2Rxdm5iQzhNb0VOcStxVzhEWWIxTFhQZllYNmJBY0JEWkZsZjFTQnlwVmdNQ2ljZktkbXVqWUhOTjhualdsSgo2clRXR0tNTjBMOFB6a2Y0WXRqT3hLSFcyWFdDUm81YnVSZ241NGtTQUswUgotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBdGViQTFtY0dkSmlmcExyNTQ2S05qMmExUGNIejZIOVJqR3NQTjMzUnJJNnJGOTk5CnhjMGZxV0w2cUhpMjQ0WE1QOHdzck5uM1lzbFo5Z3ExYm52UXlNTnB4UFJ1SngrR2tYc2JYOUEzWFAvTWQvRlEKM1NYTnhCVmQwdEJpNnVWeE4xNXU3MVF1RzlNU1l0Q0x4Sm9ka0dQbituUE5YdjZpMkFocTBQU3M3QUliM1lBMApSS1kxWTE1dzhyM2VycjRndk1Bc0c2eTFWT09BOS85QjE4TTR3Uk5SZGZCYXNSaHZjME9mNVVpNEkrTXVyUjJpCi9SczMrM09qNUJMVEYwVlF3ZXpOdEtKc0ZYWk1KSkI5emVxTTAzV1VmTFpseERrS01aMU40RmI3MTNzUXBZOWYKWWVaVUtRWEdBYUZWbkV1WVlaT3BPVksybjh2cVFmRDF6TkUrandJREFRQUJBb0lCQVFDaHJuV0JIUm56MFNVMQpPcXlhMVFXV2pPaFQrRzFnSHFyUmNPZVpuMUFiWE1SZTk5dkhVVWZ2TzNjcEFBTXZ3T0dIWTJmaVMrdEQ5MHpyCkVTR3JEb3JKcUVmL05IUWtlalVXWXFJMlM5Q3A3UVJGS0UyRUEvSWRkQkJ0TGFSK3ZXb2dtT05wL3h6c3huUDEKT1FEQ3cybTd5ZEdNSUJwUGNXNDFMMllpVFJqV3ZKazlpMUxEOVBBNXdVZnNzNEpUZUNZSFR2Y2VBdUMwRnBRSQpZMXZQdHg0RFBPZU8zQ3hKdFVZRUhrN0R0aDJvemYvWXVxQm5mWUxSa3JRc2hnaWhZTUtVb3BpcVloazc1UGlLCnRUN0pjQnRFeUgwZTUyM1cwQnY0Y21saWo0TStGdWhJaXlrS3FwUlhqTGoveHY1ZFYyRFFBaXJudlQwc3UzY0UKbGI1YWVicmhBb0dCQU0va2xDU2FneEhCL1FlcmQ1NWkvUmoweDJMN0pTQ0E4V3d5T1Vlb0I2VHd3dWhPWlVhUwpJeFRYc0tpOU51OWZ0dUNtaGMrSjRjamgxT2d0RTkrdHBqVGVlbGs0VDJOZjh4cG82OHI4eHdMZ1F4VVFlTURWClZMVjNHOWpRRTAzL3hsNitWWWtXZmZYa3BwQnIyaHFZZFNodlNWYVg4T2w5YnNVUXRtTVVHTXZWQW9HQkFOLysKZFBzblB6R3kvT05vUExYTURQL1dnVTg3UFprTkpuS2wybG1wTlBnT0pMdVZIUE9CQmc0VXdzamhXSnBxYjAveQppdGtNWmNadmdOdjFMaE1URjdNYzJyRUtVRStjOW5sZU5FYUprQlczRDY3dzQxSTNEOWdGcVlMa3pqNnEwVmFECmMzMFMrejVSS2lMekNLWStnZ3l6QXRvbmozTU5SRGc2Mjg5OWtVYlRBb0dCQUtHQTRQbWlzNG83R3ZnM1pBRSsKdzRMOHZsME40R1RrNXlqM3gzbjhkcHZUa29kb1I5TlFPa0s1NFhybEsrVkFoVkQyN09NektaMm1tNEVYYStZTQpBQi80YWpJZnhjVGN5SDVPM2tkZW9yaUFRbno5dytHQ21ZRTBIQVVPZU1EU29HZ0FFM0VoY1E5eTUxY3hBa3BCCkFGcytRVW90VmJIK2lPdzlOSU82SEIxVkFvR0FSVzRBSUtGSHEwWUpzUXRzVmdXTHVmbHBWMy9MVmhlSFpWNFgKVWxkcWZjRVVqYmhvb3VuSlVMQUt1RzF4STF2K2FNK0xUai9UaERDbnhvWTI0OTYxSitXM3U4eXduQnpSSVVtYgo5b2xKU2hIV0lLbTJMSk80cTRNRnlmYldId0tmcEt0V0x0eWxWK21jbi95cEg2NmNiUWRIeVFzZUlkRm81ZTBJCm1VWVlzOVVDZ1lFQWt1U0MzdUh1UGMzOGRHc1B2emx2emJKQWR6UDh0b0lBQ3UyL054SytiRUZCclo2NkpqTzEKeE5NM2k0OUtKUUZQazdiZi9qOFBqZGRvSmlEUWVETURQdWVMbDBvYlhxSU1lSWp3bk4rRUhnWEhBZ1lJZExzYQpmNXZBTXV5ZEVnTmJmYlp1R2ZkTUpoQ0o4Skc5a0VIZS8renNIaWt5RXQvbXB4SnVzMXh6Znl3PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c2
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "2"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.2.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c2
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
