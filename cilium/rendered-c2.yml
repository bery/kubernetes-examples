---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdjhodFNSa1BSRXVvRklJSE1HU2ZZbndGZWxRMXo2OVFGUmQzVFZEcXU0QXpxTG83CjArZVN0bzJwdlBzNVJrU2ZYaVN1OWFEdG1QK3ptczk0c2xpMEZRb0hyUVRIdkxkSW52bnBRdDBXTVJPNFNURmUKSENFcy9ZZmdmMjNIYU9oZE1qaWFVRlpMME9ESnQxMjlDeTdpdmZRaVJOOUdFS1B4N0NJQ1VLenRvdWtEYjlUZQpocXlkdzY5cTBvOE01ZEw0dEZoalJYb0lUUVV2akNLbTBsMnlObXMyYXdoYmdyVjFCVmFDdmdoMGt2WmxqQ21BCmR1RVAzeXhqY3BTeVJ5UHIzZU9XY1pLVDBubXNmWkl0azlMdTFtTlBMTkpXcWVjRVgxdmlDSjVWVGYvM0ZRdngKMHM2SUUzSVZJaHRCOG53ZGpVTWZqUjVhQTVMVExTSGhhZHNkY1FJREFRQUJBb0lCQUViVnNuZkRSNzVENjJyWApzK3dOM2tpejRob1NyR1Z2TFRiOUdkVjJ3NXhKZDhza0xpRFFjWUgzeE8vR0lwdHZrU1ZtaXpDeUpjL1M4ZldHCkYrQlhudnYrWG1OclZwSy9aNVZBWFFXVFB6VVZRWVhYTkJsVHI1aGM3WEJqamJtVHlZaFpHN1g4aWJnMnJvcUoKbHQ5Z2krTDVId2N0S0dYUkIvUGRnOWxrWmNrN2ZzZ2dDYW5lYnIzd1hDQ1RZdGdlQmpNWkY5SzYvYWFuUnplTgovUi9JMklBMHQ4UEx4Q0d1OEZrNk9WZjBGeWpiQ3ozNGZXbjJoTy9ZS0xjelRHcTUxaklZN1lNby8yVmw2Mzc5CjYvYTVlU095TWh3NUFZbEtTM0x5emtwMXlPMVd4TnkxZHBDZm1oNm1XUDZma3RDR2pXV3habVlkL0I0Nzhlb2cKYk00RGJDRUNnWUVBeUlXN1ptM2oxTWNwc1FBOFBXKzlJeHI2YmVzckZvblFXQUNoWWVYYkU4QzZ2M3ZIK2JjbQo4T1VkenptMDZLNWNDcndJbGFKcWM1a1A2WmVzVHNtWDY3V3YzbG8xSXc3SmREUjhaSmpIWTFoOEdSNW1IYUtBCmFGR1pZK2tNQnh0VG8xVUdBcGxkcENNNzl6SU5rMEw4ZDdhUzVWTFhzYkorQk90OW03eVhCclVDZ1lFQTlOZTEKdlorckQzWFE4TjZvL1NlRXRXcFZPL0FvL25wL2Q0SE9BQzdYc0R5OFg1UGNEMVNHT1dxQUgvQmxrOEJlSjk1bwpxNi9rZ1cyc3REMms1YmkvZnRYenQ4dFJweThLZHczb21FTGg2MnlGLytkQ1RXL3ZTTm5FRmt3SUlKcWR3RjY0CnQ0MU9WM2Q0MnNWQjVCSlRrWHp1MWZQQWZUL1hod1Eybklya1ZVMENnWUFMZHZIdStrdHpaK3V2VGdjanNCYk4KUWdhZGNEdW5ienUxUEZ2OXYrbVZxSWhFMkd2bmtCd3UyN3FubFhJTmQ2S1Zqb2lqSFlVZWxOcS9EVWZ4dlQ3dApZQmJ0REpWTEt0WkR5Wmh2Ry9rU2FnVzJYZkdTc2k3TFNCY1FDa3dBd0FRNUsyeExpNzg1MmpYY2ZVVWZiVTRICi9pMUo1VUdsekVHK1FFU1BPZW9jblFLQmdHNmFSeElLMzdaVExYaXh6THJYTUQ3WGN2dHBpTXMwUVFLV1U1MkgKaTQya1VpQUc1aURTdVBPVTVaNEg5WXJpR21aK05PQmh5NktnRGFVNk41UkNlZGJ0QlhTZ1Z4bGp5YUZ3V2dMMgpLNkl5MnZGMzRWNmowdjhneUZDZU5nbXNidGlvc1Y3UmFYTmZsK3VUc2lrNkVpQWx4S3BIdTB1WkhGNTBpOHI1CmZ4MzlBb0dBYUxzNnd2QWxIRkFZZWM4bjFKMnRpZitKV2gyeXIyUk1RV0FpMkNtMXRlRHJDWGd2WFdYUDNSeTMKZU0zb05YWHhLc1NoNnVycWdCMGxmL3Z6blN3TG95YTVqM0RNdkhTd2t5d3pOcHd5dGI3dG5QVkw5eWUrakh0VgpOR0E0ZUJKeWl4cTFHTUhhWGk5WGJmU0srcmI2ZFR2WlllTDFwMjNrazBqU1lPeWJoRTA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQU84dGZnZjVtTnFKZGtaVmxkN3NlbTh3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTjFvWERUSTJNVEV3TmpJeQpNVFUwTjFvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6SXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzNITGV6ZkFYZERNUjQ5SUJLdHJYUTE3TmFvOTBDZ2NlZlAxQ0VVTC9ZdG1hN1hxUG8KMHp0WkZ6d0w1aGJMSXZVeEMxaDNGaDF3WFVTNmh1UmRLWE9WRU9jT3Zyb2ZPRE8vNDhLY0RMbHhzM21EZEJKMApzaVJHZEZMWTFPT0JnQmp6Q2cxRWZ0NCtBSW5xZU8vSWV6ajl1M0dQbTJ5LzFua2VGRDZHdEZEcVlXOU1Cc2NjCjFxOXZRRkM0enJ4dXZmb2V2VXovcnN1ZzlMdkIzUkI4bnFZV2cxWmRFS2VaaTg2YWdVN3VhYldsUGRMcTUzeXUKUG5DM2tSV1hDQk1rTE4ybStSZWRXbWRKd1p6Z0xKMW5jd3VQV0VYQmFhODkyN0VnZUpJUnZzS05tcjg5ekpTSQpBSWpvUmIyL2JOYW5BWFJxSy9DRWw3SDZhSTZOSWVKSGkvUEJBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCUUt3LzVFZE9WQ1h1U0g4eXNMcGpqTExjYmFoREFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBR3ByZFI0bnY0RG51Rm92alNXTFJtaEg3eUI0CkM2MjdPU3FOZ282VEhvdTNaS2U1V0twOTZvMjY1UWxNbXk3d3UzZ1JaTTlYVHUrNWdxZWw3K1VBWWtyR3k4SDAKenJOaG9vNjVjbElWaGlHZXFJZXVQQlI3ekgwYVM2L2tkU1p4bFhXNURGYUduM2JUbkVQa0JLM3BzUWhCTFFhQwpTcUZVS0dBaVF5em9IQTNZUU51UVJHdkRia0EvcHVBK2trSncrdU12cEZtUlB3QVJPSVpoUGdYY0I1QVJhdWx6CmNCUkVTdWRIbGpURVMyNWk3cWRGdkVYNGtXbHgvTlJhSWZxQjJmUXQ1YnM5UjJ5YzR3VFFwWnl2TjdzWjFDdHkKaXRvRlhpUjYwTnhRN3ZvUzd5VEhZdytsNGxEaGpQR3VJMGk5UzRDNFZYSFQ1Zng3R1Z5R0dpYlhENTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdHh5M3Mzd0YzUXpFZVBTQVNyYTEwTmV6V3FQZEFvSEhuejlRaEZDLzJMWm11MTZqCjZOTTdXUmM4QytZV3l5TDFNUXRZZHhZZGNGMUV1b2JrWFNsemxSRG5EcjY2SHpnenYrUENuQXk1Y2JONWczUVMKZExJa1JuUlMyTlRqZ1lBWTh3b05SSDdlUGdDSjZuanZ5SHM0L2J0eGo1dHN2OVo1SGhRK2hyUlE2bUZ2VEFiSApITmF2YjBCUXVNNjhicjM2SHIxTS82N0xvUFM3d2QwUWZKNm1Gb05XWFJDbm1Zdk9tb0ZPN21tMXBUM1M2dWQ4CnJqNXd0NUVWbHdnVEpDemRwdmtYblZwblNjR2M0Q3lkWjNNTGoxaEZ3V212UGR1eElIaVNFYjdDalpxL1BjeVUKaUFDSTZFVzl2MnpXcHdGMGFpdndoSmV4K21pT2pTSGlSNHZ6d1FJREFRQUJBb0lCQUZVV0poSmozZ0dpYmlWYQpUOGJuOGNKU2lNZmtmczBzYXdzSGk2MkFMRFZTUkpocVdMWFdlYXhqVElhbTZ3NkhkdkhNT05aVlUyYWtJRXlnClk3c2FpTmZLbStOUkl3Rmd4ME15WFhyUHV0Z25zcDR2c0dmRFkzSE5tYldoN3ZsOUFacmxuOWFsTVRZVVlBR3gKSXBMQkYzRm55VlFXdjhqQXExVWJ5UllrOGJpR3RtVk94RVREMGRhaGdldTY0akEzZEFIVmdLZTAvamd5QThVOQpNeDZKYkpUOVVUaEtDTk1FcnRUcmNyMmx6elp1aU1JVElFaXNFK2J3QTRVMXJQV2pBejdCQTZRUmcrQ3ZVSE0rCmZ0ZU12dDExTk0ya3RZUnlQMjZYZW56ZnMzbXg1L2pKSUxoWG83ZFFIQ1QzbmZ2Uk96ajNEanduSVVoT2ZaSUIKc2s2U2pwVUNnWUVBeXhQNEhQd2VpWUEwTDZLZ3dVd3I1TzMwckUvWUI0NFhEbk9tczA0b0xwMlpXVlVQTkFIVQprRFNlSUZIOE8rdDZLUkJnUzhHc2w5aUZMOXliYXl1OE1hZHpVejgwNFE4TnNPWkNmRTAvRmFIT1ZZd2M5VFovCkZMWTZUaXQ4K1pwUTBrYXNmTDBOM0pjVFpPRWVHbjhWdThKSjE0L1VBVnZHT3o3UHpSN1Q2WGNDZ1lFQTV0VEMKY29QWXlQOU5iTzFaOUo2R3BmQVp3UExvZXBNeUxha2d0dW5nK1loWldKOU5Scm90Z1pYVHBtQk02eTlMMkhRZApLcWVWY3R3SnBpWVZZU2NBM2ljVXNwemRpbktZYUJFWGFmR0MxWnFFUXdWWVp0enJlbzR1YXlNMXpZdVozNDlKCjZSZGVFcCtZbjdtcWhEVXRCWmtQZE91YlZlY09uaDVpbHhZSVdvY0NnWUJwSmJ6STNTMitpaGY3Tmh4QUdYMTgKdWt4K1Q1VU9URjdaeDczZmh5ODgrN0xqMHl2ZEJMbVh0UGJPeTBScmpnQWhkTzQzSzE5Kys4ZnlRU3Bqc2pCdQpFVUtnTHREbFd0TCs3aW9zakI2R3g5RzY3Nklxd1AzSnJwUy8xcnFOem4zY2NtVnE3TVJabkF1WnB3bmNORUwvCmhaaVFPVk5QSk1LZCtHYkYwUmx0L3dLQmdITVRYbHo0bmZxV1RHTWhjTmNpc0wzSkZRMjhDMm9RTjlQTG5TT1QKTlRVeFpGbHFFWHhSRko2bHN2NGV4RG43T2pTT3JudTFVQ3dTeGp5dWY3b1BWNzlvZkVrUEt1TDZma0JqUk9qcwpIZTJmT3BDdStZTk9YNWFaaTBxZUl4UjFwQ0J2cnNrbGZTQ0xyK3J4QkxFa1VXMlpBTHVwT2FkNXFTL3F0ZnZjCllBM0JBb0dCQUlyOERPVlhuM1NBa0hNVDJBN3NsanhZZG0xNng1OGF1SWwvZDhZaWU2bGdZa0YyR3FFa2xzWWgKTTFFOXZkRy9GSStzcjNtcEhYYnZUbzh3aUFtZGQ0RUl5TTFWWk5xSnFGMW54UXVseFF4Mkhwa1NwVENOQy9yUApzLzF6N29kRjF2WVJpRko1U3EzSW4wVFFoWWJxdXQ0YVN1cC9WUG9hMXhOQllsUnU0c2VGCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBdjhodFNSa1BSRXVvRklJSE1HU2ZZbndGZWxRMXo2OVFGUmQzVFZEcXU0QXpxTG83CjArZVN0bzJwdlBzNVJrU2ZYaVN1OWFEdG1QK3ptczk0c2xpMEZRb0hyUVRIdkxkSW52bnBRdDBXTVJPNFNURmUKSENFcy9ZZmdmMjNIYU9oZE1qaWFVRlpMME9ESnQxMjlDeTdpdmZRaVJOOUdFS1B4N0NJQ1VLenRvdWtEYjlUZQpocXlkdzY5cTBvOE01ZEw0dEZoalJYb0lUUVV2akNLbTBsMnlObXMyYXdoYmdyVjFCVmFDdmdoMGt2WmxqQ21BCmR1RVAzeXhqY3BTeVJ5UHIzZU9XY1pLVDBubXNmWkl0azlMdTFtTlBMTkpXcWVjRVgxdmlDSjVWVGYvM0ZRdngKMHM2SUUzSVZJaHRCOG53ZGpVTWZqUjVhQTVMVExTSGhhZHNkY1FJREFRQUJBb0lCQUViVnNuZkRSNzVENjJyWApzK3dOM2tpejRob1NyR1Z2TFRiOUdkVjJ3NXhKZDhza0xpRFFjWUgzeE8vR0lwdHZrU1ZtaXpDeUpjL1M4ZldHCkYrQlhudnYrWG1OclZwSy9aNVZBWFFXVFB6VVZRWVhYTkJsVHI1aGM3WEJqamJtVHlZaFpHN1g4aWJnMnJvcUoKbHQ5Z2krTDVId2N0S0dYUkIvUGRnOWxrWmNrN2ZzZ2dDYW5lYnIzd1hDQ1RZdGdlQmpNWkY5SzYvYWFuUnplTgovUi9JMklBMHQ4UEx4Q0d1OEZrNk9WZjBGeWpiQ3ozNGZXbjJoTy9ZS0xjelRHcTUxaklZN1lNby8yVmw2Mzc5CjYvYTVlU095TWh3NUFZbEtTM0x5emtwMXlPMVd4TnkxZHBDZm1oNm1XUDZma3RDR2pXV3habVlkL0I0Nzhlb2cKYk00RGJDRUNnWUVBeUlXN1ptM2oxTWNwc1FBOFBXKzlJeHI2YmVzckZvblFXQUNoWWVYYkU4QzZ2M3ZIK2JjbQo4T1VkenptMDZLNWNDcndJbGFKcWM1a1A2WmVzVHNtWDY3V3YzbG8xSXc3SmREUjhaSmpIWTFoOEdSNW1IYUtBCmFGR1pZK2tNQnh0VG8xVUdBcGxkcENNNzl6SU5rMEw4ZDdhUzVWTFhzYkorQk90OW03eVhCclVDZ1lFQTlOZTEKdlorckQzWFE4TjZvL1NlRXRXcFZPL0FvL25wL2Q0SE9BQzdYc0R5OFg1UGNEMVNHT1dxQUgvQmxrOEJlSjk1bwpxNi9rZ1cyc3REMms1YmkvZnRYenQ4dFJweThLZHczb21FTGg2MnlGLytkQ1RXL3ZTTm5FRmt3SUlKcWR3RjY0CnQ0MU9WM2Q0MnNWQjVCSlRrWHp1MWZQQWZUL1hod1Eybklya1ZVMENnWUFMZHZIdStrdHpaK3V2VGdjanNCYk4KUWdhZGNEdW5ienUxUEZ2OXYrbVZxSWhFMkd2bmtCd3UyN3FubFhJTmQ2S1Zqb2lqSFlVZWxOcS9EVWZ4dlQ3dApZQmJ0REpWTEt0WkR5Wmh2Ry9rU2FnVzJYZkdTc2k3TFNCY1FDa3dBd0FRNUsyeExpNzg1MmpYY2ZVVWZiVTRICi9pMUo1VUdsekVHK1FFU1BPZW9jblFLQmdHNmFSeElLMzdaVExYaXh6THJYTUQ3WGN2dHBpTXMwUVFLV1U1MkgKaTQya1VpQUc1aURTdVBPVTVaNEg5WXJpR21aK05PQmh5NktnRGFVNk41UkNlZGJ0QlhTZ1Z4bGp5YUZ3V2dMMgpLNkl5MnZGMzRWNmowdjhneUZDZU5nbXNidGlvc1Y3UmFYTmZsK3VUc2lrNkVpQWx4S3BIdTB1WkhGNTBpOHI1CmZ4MzlBb0dBYUxzNnd2QWxIRkFZZWM4bjFKMnRpZitKV2gyeXIyUk1RV0FpMkNtMXRlRHJDWGd2WFdYUDNSeTMKZU0zb05YWHhLc1NoNnVycWdCMGxmL3Z6blN3TG95YTVqM0RNdkhTd2t5d3pOcHd5dGI3dG5QVkw5eWUrakh0VgpOR0E0ZUJKeWl4cTFHTUhhWGk5WGJmU0srcmI2ZFR2WlllTDFwMjNrazBqU1lPeWJoRTA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQVBCTkhHUEo3RFk4OFJDZHBzK0NkVWt3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTjFvWERUSTJNVEV3TmpJeQpNVFUwTjFvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQW5rWkdDM2g5bkFuT05HdS9Za0U3SDVyRGIxZmhDalR3M2RFM1RkejRsQjl2MG1iL1JIdXAKZFpUbkxNam4yeXhXcjNWTnpaU0NFSFRuN05aZ05DeUcxdXgvQlNxaVc2WDhVaFExUnc0SW9NejJScXVGL29GNgpaVk50KzR1VHhzSnllMzhUaFEzZEsrazdqbEx4WGY4amJMS1MyZEtjK1dFVGhINE54K1ZucVprK00zN2xPQ282CmRLMnk5dE81U0NzZjZ0V0xnMFZwc0VMdGlpaml1Y3c5Q1RuK0xiUWtCV3U1UFZaMHV6MWJoSmlOSGtIUjdyRUoKbS9mVHJHdWN2elh0cVZHT09PM1FJbk16SEZOc21SV2RBMllVVU1Zci9EbTJXSzU4UWJBaXpidms5TGJYK0RHcwpjQXVTeStKbHgxdHRscktzdDBXWXY0QXRnYng4K2xsaWRRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVUNzUCtSSFRsUWw3a2gvTXJDNlk0eXkzRzJvUXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUpTT1REYmpXMzJFaTYxbnZDRGQ0VDlLa0lLU01nMVVTMGlLeTAxcEJ4N0wzcllZc2JrNUNFeUtiaU52CnhseGtLOWIxTEFNemZRMjZhSExSMk1EQktwZjBXSE5lN2JPYW5lSzNOd1V5em9GSkVyRGo2ZkRJWGpmNWhSMmgKVVBUdDdTcXhkMW1LaXpSbzBoQ0ZaZlhBbTZoSExXTTQ1a0JBKzN2b3dVeHBWcXNIRFZhYWNZVmpLT0FzemFDWgpRMWxvZ2RQSnNaTUZWVkJQSi9XZ21RelRTQThZTThTUmxuWCtmZnEvUUV4aVRLK1BqbER4cmVWTkNDTzFVTUVMCmZ5S2xuWTk5dUNSLzNrMnpEdm95TFZlcU9Fa3h3Q1RmRHhJTFpjLzgxaHd1WjB0bnlSUjRiODU3RDZvWGJTUWYKRDdId2o4a1RMaC90WHNoYWJZa0FjRWYwSHdrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBbmtaR0MzaDluQW5PTkd1L1lrRTdINXJEYjFmaENqVHczZEUzVGR6NGxCOXYwbWIvClJIdXBkWlRuTE1qbjJ5eFdyM1ZOelpTQ0VIVG43TlpnTkN5RzF1eC9CU3FpVzZYOFVoUTFSdzRJb016MlJxdUYKL29GNlpWTnQrNHVUeHNKeWUzOFRoUTNkSytrN2psTHhYZjhqYkxLUzJkS2MrV0VUaEg0TngrVm5xWmsrTTM3bApPQ282ZEsyeTl0TzVTQ3NmNnRXTGcwVnBzRUx0aWlqaXVjdzlDVG4rTGJRa0JXdTVQVlowdXoxYmhKaU5Ia0hSCjdyRUptL2ZUckd1Y3Z6WHRxVkdPT08zUUluTXpIRk5zbVJXZEEyWVVVTVlyL0RtMldLNThRYkFpemJ2azlMYlgKK0RHc2NBdVN5K0pseDF0dGxyS3N0MFdZdjRBdGdieDgrbGxpZFFJREFRQUJBb0lCQUhiQjE5REhpY2hJK3pZTwpHcjRJbitvbzM3ZHR3dWM3cmZkaUFoTWtXRWdjQm5WaTN1cHR0MHNJZlNUM1lqRHI1ZWNsSjBtM3dwZkNnRHNPCjU0UitYSFpyWVN0cFFBVndXQkRtSk11NTFmT0JsdENUNXFoK1VtNHcyWGRDMVpEdldhTWNTSE12WWVLTzBDY00KU1JyMFU0bzl1ejVCYjVNV3FlUmlDTWtTY21Pbjc5MXRyOXcvMkk3aUFZckVSbEJUWkI5NjVIemM3bDVsZTZEbwpWZGdLT2RCbnlMVklrM0NmNy9iVTA3ZjN6aGVZNjNwVThWQm5ZRkdJajJmY1BuOUJUeHprK3ArZzEwSUlzeTdXCkI1SVMwV0ZPdHVGVDE2NVZ5R0w1QnFFWERIN3pHQkw5MGYzTWtLakwzSmx2L3gvNnlRenhlRmdWRkZiYkc4MEgKNytmT3pzRUNnWUVBd2FRTHA3bTc2UUpiSG9CSXo0QTExSGdHT1RPZ2pqRlc4bnRyZ3FjN1RuNkQyS3JFeDNxSgpVZlZrTEhxcHRkUk5pbEJnL2pDVkJtaFN6SjVNT0tPQlBCeFdGUzJQSHJpZURRdVFVUDMvclp2ZXRRb2dmOStVCldrcnpHdzhXSzJmckdVejBTZ2psVnFTVytRNHpSWU5Fb3ZvK3BLc0FSdTU0Z2pjZjZaZUpFemtDZ1lFQTBUNlgKeE94VXlLRUhKSXBXT1F0b29FMUNSUzdPdW1PY3BCMkR1d0pRQ05iYlNtL3lmZUxMMDcvVGZiYTVhVWdDOGFEWQpGK0hXLzNyYnNqU2VIUnlDTVlOaHlLRnc0TkNSYnQ1ZlE5WldvTGhncGlFanJGUmlXc1RmTGFCYkp5V3VCa1pECk16ZUlwa1hBankwcGp0SWVvd0ZhY1VONmJkWG4yTHFOYm9vSzNSMENnWUFrWXdvWm8yb3ZGOVU5ZndldmpqMFAKUnRxTWh5b0Ziam9UYUtQRU1sNlBtbkIyRjJqUXZ6THNwcnNETEsyVlVHYWR0Z3J6MlBjMzlBU1RGSy9uK0xtQgpMU1h6NXRLOUNCNFMvM2hINytMS29iNlFzRzE0K2U5cnBDZllqdFl3bzk5bXFySkE4emo5TmdKMG5IbC85M0cvCldsekpIcVQzcnpvUDVnSG1LQ2FHNlFLQmdIdml4VlR3WDlwUmpMc1R0SzBkbGhxaTQ0TzJqT3RLSXVvQUY0aFgKZkM5ZmxvSmgrWDZURXY4UjZoUGFaYmh4ekZ4blVNb0RDcHBFa1dMWFNHNFAvUDEzdmlOZGdrbDQ4MEpqSXFBMQpmU0MzU1hIUzJSNGs3LzZ4NVRsTVlldXhvWEZSbEdQMGsxRnVwdTJlWGFhVHZWUGhienowS0w1ekVVditWOUtFCnBKMzVBb0dBYXRCYXQxVWxiZWJodTlkK3UySmFBL2hBSU1iSUpESmpXMS90WWlUVDFIUGQ3Y2JlcFo1Ym42bEMKZDgxYzV2blRySmNEV3RxbU9LN0oyTHpYUUZlMG12ZkxtQjU0c01hcXlnRHB2cE9YOHFNdnVVWmpBSE81bDY3dgpydjFYYW1EaEpPamhoL2NOK0FwVVVVZ0RPQVpWSEw3NHpMNkRsdi80aVBadmdZcmNQeGs9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQU0xMUpScGE4RXZhaFE4SFp1RVRYV2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTjFvWERUSTJNVEV3TmpJeQpNVFUwTjFvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQU1QMEtSd043NjlhVkxSeUJCbDQKd1BUMkpqRFhXNmxlcHJVNFlGU2xBTER6QmN2K2dhb2dzRmg1NWRZQjFWczBUMmYwTkFZTWVFQ3ovOStFQ1NMawpObEcxMDZ6SjBwNXFSRE9HK0JDOG40Q2RIRGhOTy9mQ0tRQ2tJckI4ZEFEcTcrTVJTemZaVVNtWFVYSlFXTUZlClhOZ0NySlBEbzRtL05kY1g0QWsycFArc3ZQeFVBR2huaHZnNTEzNXE5TEhzNDFWUHQ3c05KQmFrNE1LMjIraEoKMmtqbHFDaWdNRnBJZ1ZUci9oZi90b3hoMU8xSGZZMEFMcWxSLzZwajhUUzJNZ3liNWRDb094djZmbkhYNWppSgo1bGppY0VSb3N1QWpRWmxJaUoySmU5a1FUUWVpWGFUc3Y4RzBBRUlrSjJwQTBjaDlYZHhFS2NxaDNJcFJxUHNNCjh6c0NBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVUNzUCtSSFRsUWw3awpoL01yQzZZNHl5M0cyb1F3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBVEZjWnFuVVNSTDBDSVFVSHpjeUJQbGM3RDVoYmFDUW01SDc2ZkpNTXlsMU5yeFNlCkpPeEJ2NnVKeHhEWkZZbE9xZ3ZDeS8xbkVsdCsvZ2owMnlyWURyREJqT0NzWlJOMzhKTVI0VXZGRmxhWExyNDMKTDMrUXdrc1JXRmtNM1ZlR2RKQlVZRFhMb2VKeDhqeWZ6b2FQU01vc2NoRWlVL0Z0QytFK2Y4R0d3QWxSdHk2aApyemJSOEkvc3QrelkwM3ZTZ2NtR1Y4ZGhHN2QvM2tRRXUrVkRGQ0ZTcmRPRk1WSnJSL0NTSkNpc2JvUTZzME9xCnA4WkFoTjh2aGhOT0xwTG9GempOUDF0R2UzS0xrVzhuWVlMQ2t4R1cveXUvNVhaZCtvZXJ1RUZpVG14SE9rTEIKS3VYaHFsd3lhckdYWHo3am9saC9IQyt4NkkwSzU0WXZTY25nY2c9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdy9RcEhBM3ZyMXBVdEhJRUdYakE5UFltTU5kYnFWNm10VGhnVktVQXNQTUZ5LzZCCnFpQ3dXSG5sMWdIVld6UlBaL1EwQmd4NFFMUC8zNFFKSXVRMlViWFRyTW5Tbm1wRU00YjRFTHlmZ0owY09FMDcKOThJcEFLUWlzSHgwQU9ydjR4RkxOOWxSS1pkUmNsQll3VjVjMkFLc2s4T2ppYjgxMXhmZ0NUYWsvNnk4L0ZRQQphR2VHK0RuWGZtcjBzZXpqVlUrM3V3MGtGcVRnd3JiYjZFbmFTT1dvS0tBd1draUJWT3YrRi8rMmpHSFU3VWQ5CmpRQXVxVkgvcW1QeE5MWXlESnZsMEtnN0cvcCtjZGZtT0lubVdPSndSR2l5NENOQm1VaUluWWw3MlJCTkI2SmQKcE95L3diUUFRaVFuYWtEUnlIMWQzRVFweXFIY2lsR28rd3p6T3dJREFRQUJBb0lCQUZMV1Q5NnRRWXNXbThKZwpoTDBqNENadVBIemZQYitlNU1pdFdZUE84VGpjczdHbUdMaUw4eUNqLzNaMTlmVUZheUFlQ3pRWFoycXE3VnRYCkhPbWtJaFp1MEZvMlE1UjJoZmhtY1UzWi8yL0dleHlPQWZEZUlxbER1ZXB6NGpKVkh5NFZySCtpbmY0QUd3MUIKVEJRS3lTTUVGbUt0RE9CNWRkQkZKbytlaXlnTjU4SG5FY2d2YjhWL1gvSDNGWVhFUHpyNDVMQXRtN2N3c243SQpUWWZwcjB2VUppV24yaEZ5QlJyVlEycDBCcVYxaEN5OVRyZ0VmaUN0Q3c3Y0tNZ3EzTndnb2FFZklBZDhHWGIzCkd3R2VHcWNWN2x2ZGJSd1MzZXRHcTFRd01yNmowaVRhV2ZRaDUvcXJ2dGtuUGFYdVVwa1FqME9oejlmcVNOeHIKMkppSnp0a0NnWUVBM2FBaDNka0hTdVh3VE02dVU3RzZaQUd6YURSdWE2NDEyYVlOYWpaSjVqb05rd241Q2pKeApYQWMwQmdKRXVxOVJYY0xKd3hhQktZWmhlWlgvVGJpbTFZN2JvcXYwSnBuSlFuL2J2K3VFNXlMT1ZrdDQzRlZNClZDaGtvd0g2Mk0waEhjU0dQNU9mK1FKblo3WWFmT29waXl2WnlQUVkzei9maWt1N0gxQVVYRlVDZ1lFQTRsaTAKWTAzSmNhOEpiZGc2SnhQYzBCeWFQQmZSWXFraFBNUHkwVmEydTJSc095TEJia1hRbVR1TWlhMGVMNUU0Ry8vdApIOFQvd05tTEFRZmhQd05HZURyOGFMZGlnWk1KT1hvK3ZCMXNGQVM0bm9qS1djdCtWM2lYVTdKaWhsYTZoSFc3CmZERndTM0RKcGVqSDZoNGJwcHJWOEJHczZJKzE3RWdQM0k3bm9VOENnWUVBMlRQSUhTbEhHV055OTRPVG5CalIKNkpNMkpnbEVzcW5Bd3ZjWHJLRmFHWldKbWpLcTdSQjB3dEdZYmM4cFZxRGRxSHR2eTQreHRHV3NBRUkrUFFpYwpFUzU2R05wWFpNRlJXcWYrVVFCY2R6NUlaSkNBK2NkckVBdXFYWXRpTWJvUUc2RndSTHpFaW9HTm9EbjdpYkxnClZqSDZ0aFJzajllRW1JQVIrdVU3bnlVQ2dZQk5iTzUzc1pvZzZ6RWNoQVNRYlhqeEwzZUs2dExUSHV1aHI1MlcKQWtXTG9IUnRYaHd3cm0wR25ab2JWajZuSXRQQXNERGExelp0TDMwZkl5VG51eVVWNTRlRUFvY05yOUJOK3dVTwpzRG5TTnpNMzk2N1FQSTNCT2h6NW9tR1Zkb0ZpNGlyNTlxZGxCdlhUYk9kRnJIcms2TDRaMnRIODAzdjFrVWpyCnQyNkFmUUtCZ0hDalVrN3RHNVJQdmh5cGtlOXNKNVlYSFlUUW1UNjBVYnlYakNxMEw3Y3pUSnVyQWNxUThzMjEKbkdZN2ZMamVkVnIzL3h2YnoyNjhDclg5OGdvNGl5cGw0VGEzSmdWek8relJtRWxVSWErTTIzN3pLdmsyb2JULwpzaG85VS9vb3dEaVVxQTlIdjRxM0Z3L201YStYNTNoVmptMEhxQW5QR0s1RlI2dHp6Q0JtCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUxUTml6SUd5OGFrZ1MzYVMySkZlTHd3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTjFvWERUSTJNVEV3TmpJeQpNVFUwTjFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTJwVFlYdGw0Wnova1hxR1B5Yk1Zd216OUpDaFoKTklTT0tJYWwwMDJScG16eWpJYW9sLzFtZFhNVTIraGhwZUd4L3JOOHNnNzB0ckZIdG1iV1pyZ3k2UGx1SXBPNgpycjlFM3dHV3I1cThiTkVjSDR4aWZ4U25qTllQMEpqQXJtNW9DMnQva2dPUlY4S3hoL3R2Z2M1K0NSTm9ES1VlCmtiTlNjYkJBNmZhZTZoVVhUdGhDMWl1RFhYdjBhVE5qT2dFTFlNUW1tUjA4RGZmV3AwNHl0WnA2NFR6N0ZoejcKWmpzTVB1U2pDSGpmSEZTbzcreGVEY01GUlAzYXNpWG4yWEtaVVlSVjl1OHdVRnlMRnByVmtGdlZ6aDFNVTVSZApzVXYydlpjTVRKM3JMWWlsY0p3bjFIRkx4R0FIbGxadnliNUYzZjVYckwvVzhGR2RzK0lhdmZuazBRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUUt3LzVFZE9WQ1h1U0g4eXNMcGpqTApMY2JhaERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSVI3SEQwbER4Yk9pcS9jeExIeHBiZkdGRUZjQkl4ZEJCN3doV1Eya242dFBrQ3YKM2NEYitlSGc3b3pZQmJ4UjBkVVBraTFkV2xaSHVFZUNqTHphVXBEVktvSWdoUnJYSnZibU9vMkhLVzRJWmdxNgpVcEVESGtrYzE1NFBzc2dydXVZTGRGV25ZOUNqNTZMa0crS1QzaXZVNk92bHQ5YWlGUzQ0dENHTnA1aS9ELytkCnpPVzNuaFBjb3RHUDNlOFZlUVYyaFB5NHVtbHE5YUpHeDFJeGNkMjA3c0I2MTJvSFZpWCttUU9tZklNNzF3NUEKK2Mza1ZlS3R3UkFBaUpMTm95MmlQYTBKcXlkSWZNQVRVS21zdWducVc0Wko4bzJyUmZrVTVvd3hra2p0RWE3YQp0c1RIajd2aHRZMnNmTkFCL3pOakl5UUd6NzZ6VGI3WEFUT3o0WEU9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMnBUWVh0bDRaei9rWHFHUHliTVl3bXo5SkNoWk5JU09LSWFsMDAyUnBtenlqSWFvCmwvMW1kWE1VMitoaHBlR3gvck44c2c3MHRyRkh0bWJXWnJneTZQbHVJcE82cnI5RTN3R1dyNXE4Yk5FY0g0eGkKZnhTbmpOWVAwSmpBcm01b0MydC9rZ09SVjhLeGgvdHZnYzUrQ1JOb0RLVWVrYk5TY2JCQTZmYWU2aFVYVHRoQwoxaXVEWFh2MGFUTmpPZ0VMWU1RbW1SMDhEZmZXcDA0eXRacDY0VHo3Rmh6N1pqc01QdVNqQ0hqZkhGU283K3hlCkRjTUZSUDNhc2lYbjJYS1pVWVJWOXU4d1VGeUxGcHJWa0Z2VnpoMU1VNVJkc1V2MnZaY01USjNyTFlpbGNKd24KMUhGTHhHQUhsbFp2eWI1RjNmNVhyTC9XOEZHZHMrSWF2Zm5rMFFJREFRQUJBb0lCQUZnT2tzUlRWQUEwYXluOAphRkxYaGVmOXhGVm1zOWxHZFlhNkIrQUNaZVRvQ3lhMXNRSGFJZ2E2My9KZndjYjBENk1PWi9QTHRxWks4UnI0CmZ2Tk96YU94cUw3aFNOblJVRXVPOWtlMFRLaUI3WlNBRjhZZWFnbUF5MG83MzVQbUFxQm5KRE9Nb0diOGxreXoKN0k0Y3hBV2YvZERxVEZCaUw1cUJhUVZZUjFrQmUydUFSQkJOaUhtd09Za21GbVpWcjh3dTFSTTFXMHJDcjk0MwpUWU5xZlg5aVFnRVlCR1dyK25KSzlkUER5d1h5MlZYWjl6N3JteGlNZUJ6WFRzY3gvZkEza2FTeUVIaUZsb1lLCm1OYTNFQVVaYkxsY20yVkhqc3BTNlJGRFpycFlOUlVsOFdtZitYMmQ2K0NRZ1VNTVFLZ1ZVZ3RLWnd3SVN2NlMKc1d0REU4a0NnWUVBOWx6TFJxU1JhbHZ0ZFdRdXFkY293MXc4OGg5U3Z4NFcrNWNIVlF6ZlN3aGlxYXh0NWxmSwpBaHNZaFlPczFpYnc3UnI4c21id1MxZm8wVitMVzBVL2h2bjd0eDZWeTJCc0JZSGgrT0Ztck13QmlBTVl2eHdwCjM2MXVicXh6cTJnS1ZHU3Btd0lULzVnUUJ4eXFTOE9wa2lRY3lQMURNbWZ2S1luamxaOFk4cThDZ1lFQTR5SFcKT1pxc25DVkFXaDh1dTQzUlZtaDlmeDN4ck9TNlZnK3ZCb01YSXh1QjBSUnFQbkZsejJxenN2TTRydkR6TDgrMAovMll1QnA4djFKVHpjcXBxY2crbWkxOWN4dE1rSW1sVWpqOWYxTDhTOXVIZjdlc1NRK0ZaSDBneVBTZnJxQ24xCkFlcnIxejJPNEl6eDRMS0s5Yy80SmZySWxKR0xVcmtZSXpWZWdIOENnWUVBb1Y1UXE3bjVvZEFLN3R5ckVBWmwKcGVrUjVvb0wyakZzWG1ram5WcnNHNnFuYlhvTEZsaWtjZEtyc2pCNGttRTVhQ1ZJSmRiMVNIU1JoQ3J3RGQyQwo2ZmR1SUJrQmh4Qm1VUWt0S2FjQ2FPYkxqZnB4U0NTN2JNNmR5aEpkUllYRlZsZ0ZIQW8xYlRKK05ScGFsWHZZCjQyZVNEemlNdmtTRHpCS01wcUZxWnZNQ2dZQitIZjI3d3B6eG51V2FwUkhuNXBsRVo0UzNuc0xoQTZoTHZTMnMKYWdIZzVwY3dweXRQUE53UlRlZzJCME9FTUJwNGc5YTJzZUFBb1VlSHZLVnBHQ00rN2wzRnFjLzBQcTBqeG1URApENEdBdWhBbnNjZ0xiYW1ZczNvdkdvRjYzNzNFaEhlYzl2cTVhMTc0WklxeC83R1ZTRU03bzRMWXEvQTJvTHc4CllKZjJ0UUtCZ0U2bkMvSEpoeE9uZWwvQmVCNGE5SWhnZTFWK2hQUjBlWUVmdjA5UGk4WDVJZTltVVVjSUUraW0KZ3o5MmNyYUlvZFVGaHE0c2s5aUlpOFBWOXVJcVZ1UG5mR0lPdWNhbG9OUlJ1YzNNRDJSR1E5YmNXYjBZZDVtZApvWVRGS1BvYVJ2WUdZWGdNZ2lobnBrN0tYdWQxdFhWekZHOFl4QXdqUmEwaGpmc3hlSmh2Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRSU9ybWlWRjdoOURDajRiSlQrWnFhREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qSXhOVFEzV2hjTk1qWXhNVEEyTWpJeApOVFEzV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQy95RzFKR1E5RVM2Z1VnZ2N3Wko5aWZBVjZWRFhQcjFBVkYzZE5VT3E3Z0RPb3VqdlQKNTVLMmphbTgremxHUko5ZUpLNzFvTzJZLzdPYXozaXlXTFFWQ2dldEJNZTh0MGllK2VsQzNSWXhFN2hKTVY0YwpJU3o5aCtCL2JjZG82RjB5T0pwUVZrdlE0TW0zWGIwTEx1Szk5Q0pFMzBZUW8vSHNJZ0pRck8yaTZRTnYxTjZHCnJKM0RyMnJTand6bDB2aTBXR05GZWdoTkJTK01JcWJTWGJJMmF6WnJDRnVDdFhVRlZvSytDSFNTOW1XTUtZQjIKNFEvZkxHTnlsTEpISSt2ZDQ1WnhrcFBTZWF4OWtpMlQwdTdXWTA4czBsYXA1d1JmVytJSW5sVk4vL2NWQy9IUwp6b2dUY2hVaUcwSHlmQjJOUXgrTkhsb0RrdE10SWVGcDJ4MXhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVDc1ArUkhUbFFsN2toL01yQzZZNHl5M0cyb1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFEUi9rR0NqQllZeXpIVjlJd3ZYWDhiRHgrRUhsYmwzV3IwVlQrT0Q0MmE5L3ppbldDNWNrOHQ5ClNQK0RZVzYrbkRJQU84K0dNakJGT3ZSZitoN29FbGNUTUpJSUNzRHVDZXhmd1FjVEc5QTF3bTR0RXNvZzVmUFkKV3djU3ZPbGRRbHE5MzBhb2ZQbVZ2MWtTeXVrcDhzQ2pQbTlZc1NFTnJuTEgyV3NQTG9NZjNOY2FHRFZ2aGp3cQpQN0FPQm16VTlacThkT3dwZHlYK3crTGtBMDJqVkU1RWdDK21HOGtuNjJoZVNDVERnbUc3NlZ2Z1RTZWN3RGxsClBNemw0dVk2L1lUR1VKNU1LelhuemZuaXRQWHhsUDJWc1A3dXhLZDRIZThHVFNNcnNTMTRaOU5xTTY0aGFVUmcKZFlSbGpKMExOR2JMWnQ4Nk4wSGtRelBoTWVHWEQxTT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQUtSNkE2TXp5OE1DTHIyN2dNQVYwMVF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXlNVFUwTjFvWERUSTJNVEV3TmpJeQpNVFUwTjFvd0pURWpNQ0VHQTFVRUF3d2FLaTVqTWk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdnZ0VpCk1BMEdDU3FHU0liM0RRRUJBUVVBQTRJQkR3QXdnZ0VLQW9JQkFRREFGc3NEWlYxeHI3a3JJd0hqSGxGb1ZGd1IKZ21lWk1zUkhyZ1RreTg5QndCblhyNEQyMmFraEVRcjduOGdrMmFJRTgzM0x2aCszZW5HMHJGTUF5eFlKVllNVQpzTzZFVFkzNGFLQzYyRnlGU09zRkhMS09Wc3Y2UGZpRDBpYzF4Wm1ONVBXY3NsOEhKY09YQ3NZUTBJUkpkOGdqCmk0Rk9VSTZKMXJ3SFphREFvbXlSckNjNlhvZzM4dHExZjBVaWVCUDJDZEVMN2w0RmpUUzhFcTNGTytqQ09oMCsKQzUwRkg2VEpKRnFzYmlIblE4ZzgycFBuaWo0c2RqWkxxTUxseWQ4ajhURkd6TDlqckZKVCtQSTRqNVNOSGpFQQppWHFSN2VOS1JiblZHZDR2K0NaV1JGY21YUnVqRXFXZU96ZEMwTEZNZ3hmaThMT1o0UVZiWVM4ZWcxUGxBZ01CCkFBR2pnWWd3Z1lVd0RnWURWUjBQQVFIL0JBUURBZ1dnTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3IKQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQU1COEdBMVVkSXdRWU1CYUFGQXJEL2tSMDVVSmU1SWZ6S3d1bQpPTXN0eHRxRU1DVUdBMVVkRVFRZU1CeUNHaW91WXpJdWFIVmlZbXhsTFdkeWNHTXVZMmxzYVhWdExtbHZNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFDeE0vcFR0ZHJtUisvQU9wRldwTGJzZThsUGlHOWxsdTErdVRtbnRjTVoKMVNnR3ovRnYxVGY0NmZOQUJBU2RMUUY3ZVE4WXlHejI3QUlxams2QW5IUmNIQlVWWFVxMWV2Q21zRmtkQnRVeAptU3dYQXcrcVJjaDNicTlLcThSaFhWRDFXV3hwTlM4WnlTMGVFUzlNMk5XdVZUQVFxUFNkeVVIYnl2cVdVb2xiCmpKMTZtTzZUNnhzV0dYVlVSWnNVaWtkaHdRNVZoS2hIVXpmaWFodi90SUl6bFduemJiTGtwQlBJbk8vT1hkWDUKTk9aYnh4dGRoVG9XbHFvRm54V1BXelBhVmpiWjI0MS9oRlZBVHVUdUUyb0ZBWUJiV3JrRURydGRzYWE4K2lNMgpDTEozSmN6MWkweTg4Y2cvSGo3aUNSNjdLdUcwQzVVd255YWc4SWdjSE1HVQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd0JiTEEyVmRjYSs1S3lNQjR4NVJhRlJjRVlKbm1UTEVSNjRFNU12UFFjQVoxNitBCjl0bXBJUkVLKzUvSUpObWlCUE45eTc0ZnQzcHh0S3hUQU1zV0NWV0RGTER1aEUyTitHaWd1dGhjaFVqckJSeXkKamxiTCtqMzRnOUluTmNXWmplVDFuTEpmQnlYRGx3ckdFTkNFU1hmSUk0dUJUbENPaWRhOEIyV2d3S0pza2F3bgpPbDZJTi9MYXRYOUZJbmdUOWduUkMrNWVCWTAwdkJLdHhUdm93am9kUGd1ZEJSK2t5U1Jhckc0aDUwUElQTnFUCjU0bytMSFkyUzZqQzVjbmZJL0V4UnN5L1k2eFNVL2p5T0krVWpSNHhBSWw2a2UzalNrVzUxUm5lTC9nbVZrUlgKSmwwYm94S2xuanMzUXRDeFRJTVg0dkN6bWVFRlcyRXZIb05UNVFJREFRQUJBb0lCQVFDd3VBZDdqMVRoazMyeQpUdG1jbmpiYzJjZCtJRSs1SkhocFRaS1kvMXdrckZ2YUQwK0JTb3dMck1kQzZTUFRxeGtnbnZaYmJBVjM0a0ViCnEvSU01OG5WT29PR2xLUkt1YUxrSnpXL3orK0dlNmdrSXR1dWtmSEV2aUNVL2RFdTZpU3o0ekdIUUo2bVQ3cmEKaVlIZzFFVHY1akFOYTNuQmwrRWF0S0IxMmF5RHF4RTgySURyNWdneVh0YzFLdXRxY0FLSEp2bmZRc3c4UlR6WQpmRktSNnZDWHc0UUMzTzVRK1U1cDdtbTMwQXBqYmZQaGRrVHRkbjN3Z2JmYmZSajM4M2l3V2tza25zZnJ3OHV0CnFKRVFPd1o1YVB6T3hGVHd3eFQ2M2huWVNZanB2OTFDdVo3WGVwYUZSODlnRVZoUVpMVFhhcC9hbnlQUysydFgKRVhWSElBakJBb0dCQU83RUFOTE8vRzN4UXFsTTNaVCtjY3I2V3QzQ0x0R0VBNjVZRHhveHord0c4NGM3RjNrMgpjdkRmTitHdENrWWxIQmVKYmY1ekhJYXRNNlhVLzN0ZjZpL1dPZzBNZGFiVlQrbUE2V1NSd3FRdUNBWlNiQXBGCk5wcG9VTHY1c2xTYklDUnZmTlU5dmdtRlNtWCtUYlpOdDZqU2l2WWg4UmlxM2p1ZzBzcXd2S0QxQW9HQkFNMzAKU0duTHlIYVNqd1JmUUhVOVdIR3IxUTYzUG1YeHRFa0dnRGN3QnRFMlJYeTc0SU93ZXFtdkxwWnBtRGZxRlJRNQpTUGVmTkY2WWhVRHRocnlkOTdKeVFZYnU5bWFvWDIwcm5PVzR0ODdtSGpZNjZOWkpYSkFkNnU4cUd2MnNLTDFTCnEwSEJwNVY0RkQxTWFENVlGbDJjY2JyZW9wVmJzNVFxQ3VMRXIxRXhBb0dBRkNQRVRnUFhsdzU2cVAwcTA1NkMKeXJSRFplRXpRY2o0NW9QWEFrYWhXeTlhNjFVNHJhakNHVDg2MzNaUkg0bVJ6UXB5bEx2dzlBczRDQXpuWCtpLwpRRG01dTlBSlBJRlJ0RWlEWjFCRU1zVVBPRGxMazdJeTRPTmJxLzlyNDJjU1Z3QndieXcrRTErQzN3ZU1Wb3hICnFaM1l5dG9pRkFxVnBFSDBoZFJTbE9FQ2dZRUFzRTBOOCtxckJyMTh5ZXhUL0Vod1BwWXVnek5mcWRyWFRxL08KNys4ZjF0WFRjK3hNUzg2MW9pM0EvcWNUMDhHQkc5ZlIyNDhnUUYzbHErZm9yK3UxenI2NTB5MGFKbFM1bzNWegpFTDhvTVdlUnN6Q0lnbTg0V25JUjIzdTZzUzQvalptSDJubFE0TVZ5NWVwVFRoTVB5a0NTcHJuUWlYUi9iRFQxCkxwdlp5L0VDZ1lBS1ZBSGQvMjBxNUxYMXBXV3RkVXlhV2llY09CZFVaRTdiVGJkd1FWeWRodStXMFIrVk9weEsKWXhXVVV3ZnVvdzE5blk2Rlo2c0hnejlad3FwUEo0a045b0pXdFJhUWJObnc5bTFvTWxMeFBNa1FuVVNiRXAxLwo0T2VrOURlL0tvUTZrYnhVeFpIdHZPSTIwQXVJRHMrUTc0clZ3bkE4SytweFloRWRSOXJ1TkE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c2
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "12"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"
  ipv4-native-routing-cidr: 10.0.0.0/16

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.2.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c2
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c2 --no-password;
          etcdctl user grant-role admin-c2 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
