---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTJwdC8xOGs4V1l0UTg0Sk4rNFltMXVITGdFcDRWOGtOZW10eHpvRTVyQ1czT0hvCkJheStaYlo2c0prYk1tWjNIY1dRc00zVEFXampRZFFCMUFGVnlUaVZNYURFNzFqMFdnRnZIbkhFNlJWTzUxcXQKSTkvMk9oRVdFcWkzbFdMaTg0UEYwWFVJN3dUNlgvU0d0K1pBdm45cWVXdStERjlIM3NobFVGSTFBNEJna3dYcQpmUVN6WEFDemZYUU1zU1dERXNES1BxTDJCb0ZXYWxxczRDTXpHVjQ4OGpLcC8zbDlJdEZZamdrbERmblpDRjJICnpMQnZNUjFVTTB2MXRQTWZkYllZUGFCVHBkSWl3bGY4T2ZsaHJNajA5bG5OeHM5WlloT1ZhWnREUGVhaTZTNTUKbWEyVmNuYjRKVStQcjAxWVNaeS9ZTzFZOTNwOFdVZnVTS3B1RndJREFRQUJBb0lCQUZtZmI3S3JZUk0vZFczegpYVjB0c3Y2NEtsREpwYWxzd2ZnMkl6QWVnckYreU9ZZjhjQ2s5dmZVNTU4RDJJbWxqbGppWFdydlFuUnVJQjhlCnJ6RWU0bE16aDhVUHlKMWN3SjA2Q2xWWXVuMXIveXVMcFRoK3BWVG5UdExsYzhVd1lLOXEySEp0c1RQOEFXOVoKbEFMbFRSakwvYkxLM3pzelpUOFlQYnJIVlNxeXExNjRwQVVrL2plcFRwVVl0ckJrNk9NRUt4bUt4QXhpczdrWgpoZXBKWGtVNmdDa1I2SHpVRUw1ZkwxYWM5RnFIUHprbDBDakhmakMvc0U1bXNEbkQyR3VMZXc1QTdqYTNmaFRhClFmOE5rT2R5U0g4dk5scDJpSkdDaWxad1FrdkpZRnRldkZHZ1hDemxDb1I1cjdoQ0hiSm5YblpHNjZWaHVPc0cKNUtOTHpHRUNnWUVBeXRDd0tPZE5UWGMzd1ZDRnVYYTMya0czY0xxWW5abVpWcks0cnlZTU1peVp3NzBZZHNFQwp5aHZzTWN4a1dlMDVTbFk2S2VHZFl3dGlrR01kNlRlcmYyZVVlbm9kYm1JVlN2L3pyRjJON0IxK3lubE5uOCs3CkpPV2RzbWJGb1R3TExaVFBWV1YxNXVSU1JvcHd6cjFMR3R1UGdHNUZNcldqUjBTWFVWeTBHTnNDZ1lFQTdJL3oKcFpHWFdhSzQ0b0ZNKzYrUlM5UEZ3MFJvdWpGUnV4SXgxR1ZmVG5CV3hwMkxQVGhJcGlJdHJHa2dzNHFteThyMgpPOGtZclArL1Era1Y2ZnRtaEZIdU12QkdVSGgxbTNERkNUMzBkaE1CUFFDcEVTcHZYNFJ3c1Y4Vm1qS2tYbk9sCjRnbFBwbGdHZ2dUMTZ2c1R2TGtncmdhVG5WR0RVSTJ1MFpMODFuVUNnWUJONEpaVURvVWJZdFRROFNkNEVNTUcKRnNmbWpHLy96RFFhRzJSWk5PWG4ra0pNNi9aUjIwbEQ3RGJrNUZRQVI5d0ExRjFmS1pmeXFUTit0K0NMWmVuLwpjUG1Oa2dodEUxS1R5dlo1VUM4bjVDZUVmZEcxdE9GcWlKVG1KUnBzRUE5R3dHWmdweVgvczlwMzViN3RVN2hjCkpzVFNqd1VaTksvdXRNTFo1aHZ0a3dLQmdRRERlbFNBYldWZXFXc1RxSHIvdzExU0JtWDE3SEtKNFRWRFcwNlgKejBqSkhXVm5iRW5oeGIrcW9MV1RNYS9YRE95MW5EcUt2cXJJVWZFdjRjeTg4NFFNTlZPYS9oZHNhWTN0YTJzMgpMdDd5THRRb0g0S1ZiN1ptZko5T3dsNnNjOHFGVGhVMlNqRnFLSFVBUGE4a2hHTVQ0UHFUTTFZSmVwRURJSURrCkp3ME0vUUtCZ0J6NXM5QnNMckJyZ01aU2RIOUNBSGdqNTcwS3JoNll1TjRnOWxBSmZRakxwK2g0cnRqZVRSZ3YKRE1tTFBZejJqZHlwRitjd1VvQ1BwN0tSZ2F4djRvSEtzUEFOWkQ1QmhrNkxiODk5QTdKVG0wUFdBWEZ2cEljeAp4aDE2U3lWQW54YjdGNklpMkVwa1B1cXF4cTNvKzV4Nkt2N2F6QTYxbVZjUEYvTWFCNm1ECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/admin-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-admin-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURLRENDQWhDZ0F3SUJBZ0lSQUl2TjNla2c1UGZQS1YxRnJEVklkWlF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXdNall4TUZvWERUSTJNVEV3TmpJdwpNall4TUZvd0V6RVJNQThHQTFVRUF4TUlZV1J0YVc0dFl6SXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ3d4cHcxSE1tUWFYcFR5OFg1NkI2Y1cvaktNTk1VdXdWRlFtdGpSUXFTYjd4anF5N0IKUW03M2d5SE84Ry9PaVl4UEpERWkxejVmS1lkRy9nNVoxK3JOeUZMKzZVY0FoMmVsK1kwamYzeHM0VGZuUnJJaQo3ZzZ3WFFrbks3bmwrb0VyNVpXVGdKcHp2cVovUDBOZnhsSnZpVmpaVmI4RDgweDFLUTJ3blZ3TWxPWGd5d3R2CnQxZEhuMXRURVBzb05sbGN6VHlUYU90UmQrWHZHVkJpZEY1RkVha2E3ZldEeFlkTlU4RUllZHE0UW4yZFJXc3oKOVpmbjliRlFRN20yVnNULzFWOFMyV25oSXE3Y1pTYkZkMGlXdTFkNC9iTlBDOUZGeHVJSHV6WjM5R2NkM1FFeApQdXh2TGhUMnBDOGxvQWZ4dFJuVmlRRUV2SGlDWDV3d2ZBaGhBZ01CQUFHamRqQjBNQTRHQTFVZER3RUIvd1FFCkF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXcKQURBZkJnTlZIU01FR0RBV2dCVFAyNGJiVnY2U0tBZXU3a1ozcXFiVDhEb3oxREFVQmdOVkhSRUVEVEFMZ2dscwpiMk5oYkdodmMzUXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSkI2UVBSRG5zQmFJeDRWa3pNUGptdmFZOURxCm5qMS82YWxWYUhSTUtaVkVZTGt0aXA2NHBaUmdJRnpKTkFZT0d0dlFONENUYlA3Z2ZkMXdCTnVEajNMV1JTMDEKVVdMNDFJVUQxYVd5S2Njc1FXRG5za3l1WU91TFdRSGk5SlhFMTN5cWxpZUVpd2dlRThKdGxzZXova1hpdG0xSApwMHBVOUk0WTQzU0U4a3htZXVhU3RiNXNlc09HRFc2TXoyUjdwbEVhdUZmVDU2cmozTm9TZXM1NC9uNll1ek1TCm1CR2hNK1UvZktOa0tHcXZRZllVUFNvUWxPUU5GV092clZXOXcxY3FJNEtzYTA5dStxUjFGNWVVby82V0JoSkYKMDVzdkhwdmtlQzJLVkg3NFgycEV3QVZTTk0xQ0pscWRzdzZRcEZSYkZqL1YvOUJnR0FMSDIwYWI3TXc9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBc01hY05SekprR2w2VTh2RitlZ2VuRnY0eWpEVEZMc0ZSVUpyWTBVS2ttKzhZNnN1CndVSnU5NE1oenZCdnpvbU1UeVF4SXRjK1h5bUhSdjRPV2RmcXpjaFMvdWxIQUlkbnBmbU5JMzk4Yk9FMzUwYXkKSXU0T3NGMEpKeXU1NWZxQksrV1ZrNENhYzc2bWZ6OURYOFpTYjRsWTJWVy9BL05NZFNrTnNKMWNESlRsNE1zTApiN2RYUjU5YlV4RDdLRFpaWE0wOGsyanJVWGZsN3hsUVluUmVSUkdwR3UzMWc4V0hUVlBCQ0huYXVFSjluVVZyCk0vV1g1L1d4VUVPNXRsYkUvOVZmRXRscDRTS3UzR1VteFhkSWxydFhlUDJ6VHd2UlJjYmlCN3MyZC9SbkhkMEIKTVQ3c2J5NFU5cVF2SmFBSDhiVVoxWWtCQkx4NGdsK2NNSHdJWVFJREFRQUJBb0lCQVFDTXltSDIyeXFkM2FRVAp3U080V2VxblZZamNYKzU5Z0VZK1Z4djRRRENmV0dhT2F2UWQ3Njg1YWpNdkFjZktrem93ZmY2MFpRSEVBT3RBCjIyN0tsM0RtM0RsZDFLVThBcHZHVU83YjZ0bEtUa1diNlc1TzY1Sy9YQm5DSE0wK0lUbG5vTDUwYitTVGNyQmcKZ0I1RTFVc3FraFUxWTFseTUvOXBBSDFxd0tsalNwQXlmVXBheVl1aXNJNCtXUVFlRlkzZFpCNkpUQlp5dE9iSgp6RzNJSVdraVJrTjRySCsyKzJ0amJsUEd4cGtiK0VHOCtWSU05M1hDMGI3RFp4V0kvbnFFRHUvUlFaNGM1Q2RYClZUSmp0QVlIM2kwdVZVc2FDWFUyNnFvV0pzd1JDcFVqNVczUm0xQ3h1Qll3aUhDc2phcEdJSVZ2Y3BSZWZMWGMKSHlBL3ViVEJBb0dCQU1qd2JaQWhRelF2eTlyYnRBdzJvUjRKdmQ4VjdRVTY4RVVDK0NRTk9Zd1MvVDYxSFp4bwp6L0NOUlQwQUxhWUJ6REdEVmxIdGhxUHZhMVd1WjRPZDAxVkltZDlRVTBVdVZ3Q0FqemdqWnBvS1hPVlU1cWhIClVLMlgxcUlxMXVJSDk4VURoNlowdzRkUDlrNTB4RjNYYmRXek5rcjVDSlZzL0E3UEZaMXg2T1dGQW9HQkFPRTMKS1JpMFJnQ2ZXVkJvR29OY2FwVG9OV3pZS3JNYkZaNTA4NjRsRnh3RlpGOGFUWXp3aDNDVUdtaUtxMjhhb0hMaAplaGwvMUU3RjZHdVRqS0ozbW9LT2VsdGQ2ZnY2WHpYRVpoNWhOdkxoTFpkTHIvWVB1NGtRdDY5UGpwRXRPM0RGCktGSm5OdzJQWkU4K2gvcnpTdkRXWi81NXFnMGxEckErYis5b2svQXRBb0dBSm50ZEVEZytqWlVGdm5GTEJ2ZkQKWFdSU041SVVaV2NITXNCQjAyMnc4ckdFVEdrVk5hb2hBSm1kZy9RdnlkWVlTL2N5SmRpT2E0RGpsbklqSXVLcgo0VzVaQVpwNWlBczY0RDYrcnVxZ3NLbUJadTRlaW1XMS9yalFneGdmTlFSL24veHdFeUhUZkd1RTZUdVZpNzlCCktxYjZvOXNUbU1KWmQyQ1RiQ2F2aXAwQ2dZRUF3QVhPRG5nMmIzVnVLM1ozbEtVSll1a1NGRG5EUG03TFlnMkoKYjJQRWJtblNpSnZlbjFxOXdDa20weGZZejZRK1JYVW1LL09ueTNwR2p1S0JPRTBOK2w4TXlEWXN1R0ZqS0c3SwpPd0RjWHYzTFo0SnJCenVteEZqeXBKRUtsNUdmYXFsUGxlTFhOOEtZM2xBTWxOVTNnbHpzMGpaZDNWTkpVTkFMCmxHN3dKQWtDZ1lBUGFMbC9BaHJDVTBVYzRpODdFUmxZdXJtOXBZcWRMb1NaNENnNVFSRHprb3hpQXRTczdBbzgKWGExUUxvc0JrNnIwU1F3dURjZUVYK1VQTWE3elpVbWFObmNnZGYrbjRCU1pyQkFtQUNhSys3dFcvYWpXZWRNOAp3ZkNDS2hzYXVLWWRqdnRmUmFpLzh0RS94cDJKSEdCOEZvakc5RVV3MndsVTM1VmJTaDV1bmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-ca-cert
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdTJwdC8xOGs4V1l0UTg0Sk4rNFltMXVITGdFcDRWOGtOZW10eHpvRTVyQ1czT0hvCkJheStaYlo2c0prYk1tWjNIY1dRc00zVEFXampRZFFCMUFGVnlUaVZNYURFNzFqMFdnRnZIbkhFNlJWTzUxcXQKSTkvMk9oRVdFcWkzbFdMaTg0UEYwWFVJN3dUNlgvU0d0K1pBdm45cWVXdStERjlIM3NobFVGSTFBNEJna3dYcQpmUVN6WEFDemZYUU1zU1dERXNES1BxTDJCb0ZXYWxxczRDTXpHVjQ4OGpLcC8zbDlJdEZZamdrbERmblpDRjJICnpMQnZNUjFVTTB2MXRQTWZkYllZUGFCVHBkSWl3bGY4T2ZsaHJNajA5bG5OeHM5WlloT1ZhWnREUGVhaTZTNTUKbWEyVmNuYjRKVStQcjAxWVNaeS9ZTzFZOTNwOFdVZnVTS3B1RndJREFRQUJBb0lCQUZtZmI3S3JZUk0vZFczegpYVjB0c3Y2NEtsREpwYWxzd2ZnMkl6QWVnckYreU9ZZjhjQ2s5dmZVNTU4RDJJbWxqbGppWFdydlFuUnVJQjhlCnJ6RWU0bE16aDhVUHlKMWN3SjA2Q2xWWXVuMXIveXVMcFRoK3BWVG5UdExsYzhVd1lLOXEySEp0c1RQOEFXOVoKbEFMbFRSakwvYkxLM3pzelpUOFlQYnJIVlNxeXExNjRwQVVrL2plcFRwVVl0ckJrNk9NRUt4bUt4QXhpczdrWgpoZXBKWGtVNmdDa1I2SHpVRUw1ZkwxYWM5RnFIUHprbDBDakhmakMvc0U1bXNEbkQyR3VMZXc1QTdqYTNmaFRhClFmOE5rT2R5U0g4dk5scDJpSkdDaWxad1FrdkpZRnRldkZHZ1hDemxDb1I1cjdoQ0hiSm5YblpHNjZWaHVPc0cKNUtOTHpHRUNnWUVBeXRDd0tPZE5UWGMzd1ZDRnVYYTMya0czY0xxWW5abVpWcks0cnlZTU1peVp3NzBZZHNFQwp5aHZzTWN4a1dlMDVTbFk2S2VHZFl3dGlrR01kNlRlcmYyZVVlbm9kYm1JVlN2L3pyRjJON0IxK3lubE5uOCs3CkpPV2RzbWJGb1R3TExaVFBWV1YxNXVSU1JvcHd6cjFMR3R1UGdHNUZNcldqUjBTWFVWeTBHTnNDZ1lFQTdJL3oKcFpHWFdhSzQ0b0ZNKzYrUlM5UEZ3MFJvdWpGUnV4SXgxR1ZmVG5CV3hwMkxQVGhJcGlJdHJHa2dzNHFteThyMgpPOGtZclArL1Era1Y2ZnRtaEZIdU12QkdVSGgxbTNERkNUMzBkaE1CUFFDcEVTcHZYNFJ3c1Y4Vm1qS2tYbk9sCjRnbFBwbGdHZ2dUMTZ2c1R2TGtncmdhVG5WR0RVSTJ1MFpMODFuVUNnWUJONEpaVURvVWJZdFRROFNkNEVNTUcKRnNmbWpHLy96RFFhRzJSWk5PWG4ra0pNNi9aUjIwbEQ3RGJrNUZRQVI5d0ExRjFmS1pmeXFUTit0K0NMWmVuLwpjUG1Oa2dodEUxS1R5dlo1VUM4bjVDZUVmZEcxdE9GcWlKVG1KUnBzRUE5R3dHWmdweVgvczlwMzViN3RVN2hjCkpzVFNqd1VaTksvdXRNTFo1aHZ0a3dLQmdRRERlbFNBYldWZXFXc1RxSHIvdzExU0JtWDE3SEtKNFRWRFcwNlgKejBqSkhXVm5iRW5oeGIrcW9MV1RNYS9YRE95MW5EcUt2cXJJVWZFdjRjeTg4NFFNTlZPYS9oZHNhWTN0YTJzMgpMdDd5THRRb0g0S1ZiN1ptZko5T3dsNnNjOHFGVGhVMlNqRnFLSFVBUGE4a2hHTVQ0UHFUTTFZSmVwRURJSURrCkp3ME0vUUtCZ0J6NXM5QnNMckJyZ01aU2RIOUNBSGdqNTcwS3JoNll1TjRnOWxBSmZRakxwK2g0cnRqZVRSZ3YKRE1tTFBZejJqZHlwRitjd1VvQ1BwN0tSZ2F4djRvSEtzUEFOWkQ1QmhrNkxiODk5QTdKVG0wUFdBWEZ2cEljeAp4aDE2U3lWQW54YjdGNklpMkVwa1B1cXF4cTNvKzV4Nkt2N2F6QTYxbVZjUEYvTWFCNm1ECi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/remote-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-remote-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFRENDQWZpZ0F3SUJBZ0lSQVBUNDVwUXpGSnE4bU01bWlYVVR0OFF3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXdNall4TUZvWERUSTJNVEV3TmpJdwpNall4TUZvd0VURVBNQTBHQTFVRUF4TUdjbVZ0YjNSbE1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBCk1JSUJDZ0tDQVFFQTJNWmJ0bDBUR0k2bXM4dFNJRVpYaVZCbHNhdld2Znh6cTZkRGlWejFOV2lORVpaeDAxakEKQzVscTdBMXIwbmUyTTVucEdCNDhNN1d1cTcyRE55ZlN3ekNDMXhibjUyTmZZOFUzMTlEZTRoOFJPWmpwV2lRMAppQjBPSXB3VWVYVkJ3REU5d0tlMWFQOXFLaHYycThRSVE2b080QU5iYk5jM1I5clF2UHBxaVhCbUNmNU5pbk44CjFHQlAwcnhIeTJTKzJWRHhSV1FtNVdlcStDNDFPTjJFbTZPd2FXczZqRTkwR0RvdU4yV0RRK09xZDN3UWVyc0cKeU9xYUpTazg0V0YveUg1Nmc3dG1OUDRkdEZlNXpRUTMxVnZvZkpyQTZVOXBRL082ZUpIWHBpYmxtOXNDYVJQYQprbHRrZEJjWXNzRjBHV2FrYTNId0xyTVpBYm9WZXFneTdRSURBUUFCbzJBd1hqQU9CZ05WSFE4QkFmOEVCQU1DCkJhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUhBd0VHQ0NzR0FRVUZCd01DTUF3R0ExVWRFd0VCL3dRQ01BQXcKSHdZRFZSMGpCQmd3Rm9BVXo5dUcyMWIra2lnSHJ1NUdkNnFtMC9BNk05UXdEUVlKS29aSWh2Y05BUUVMQlFBRApnZ0VCQUR3ajhGMVZVN0cwYnZFQ1RvS1VVZTRDS0FLVTFZTHB6R09hZ1lsWkYwd2lnb1BySjUzYWRQaDdLKzNpClBnQjZXRzY0cVBBZ05WMURhRkgyQnpnYWxrb25meXo5SjQ0bnkxdjlkaDFVcEMxRi96cWdSTWJ3ek8yWWtSUnYKRHRvQjBnSloraSszTE5hejkwRkhRMkMwYzVIYjBrQjZ3THlqV09BR1UrakFwd29BY1BIYlBjSG1tRTBLaW8zYwprYzRBQ3dFZ1NZTDdWTHk0bVAyK3FBSk44S0JPLy9ndWVqWHR2Qzh1S0hnSjZvRUw3QkYvbTdVZ240WEJGdzFEClM3UHV0eHA4dzUrVmlua040S291cUQ1c1ZZVHlEUS92UE9DTm5haldodWhMUGtQY3ZRYlBuckE4eGRmcVBIQ0MKaklpUVVsL1dWY205d3N0eWN5aHduQy9FS01FPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBMk1aYnRsMFRHSTZtczh0U0lFWlhpVkJsc2F2V3ZmeHpxNmREaVZ6MU5XaU5FWlp4CjAxakFDNWxxN0ExcjBuZTJNNW5wR0I0OE03V3VxNzJETnlmU3d6Q0MxeGJuNTJOZlk4VTMxOURlNGg4Uk9aanAKV2lRMGlCME9JcHdVZVhWQndERTl3S2UxYVA5cUtodjJxOFFJUTZvTzRBTmJiTmMzUjlyUXZQcHFpWEJtQ2Y1Tgppbk44MUdCUDByeEh5MlMrMlZEeFJXUW01V2VxK0M0MU9OMkVtNk93YVdzNmpFOTBHRG91TjJXRFErT3FkM3dRCmVyc0d5T3FhSlNrODRXRi95SDU2Zzd0bU5QNGR0RmU1elFRMzFWdm9mSnJBNlU5cFEvTzZlSkhYcGlibG05c0MKYVJQYWtsdGtkQmNZc3NGMEdXYWthM0h3THJNWkFib1ZlcWd5N1FJREFRQUJBb0lCQUgxSnQvd2dzMGJBUEEweQplRmI3RU9EbVBNQ0JwdTNMbVRjZXgyUCsvQ0pRT1NodklYNmJqdk9sU2kwQVhNOGFMWTZKYURWdVZERTIwcXVrCkx0Q1VEYmFPdFRDSHBxVVB4RFF2Nm1TcjdnWVhHcWVGZjJsLy8zU2tCbVZ1ZkU3dXZIL09kZmlCZGRJbnZUNTEKUnc1amtMczY4TG44ZHJ6amJxbnpDQzRSTmI0VXpZN0d1RVl4SjNPaS9nYXNNUEk4cGdMSDhNc0IwQlEwUEhDUQp6WWlOOWxOVjE4K05mVm83M1A2WkIyTVRTaWZMU2hQU25XaTkwUVdseFMzUXNieG81aGNrdnFubFNrbVlDV1ZFClFSaHA5OGhrWVp6QjVaKzU1UHRrTGdma2k5bEtwQnVYYjRhNU1kMTBCU1JyaVI5eDc3aDI1a3pyQ0FwRGFKU1AKL3Frd2lNRUNnWUVBL0haTnYxLzdvTS9QaERmMEJPTURiMUplMkVIQitWa3UydFRFdytNTGFuazdGTHdCVmpIdwp3NGRXeEw4b2MxR3plaXJPeVpGbnJ6WC9rTU1iSEpBY3AyVWFWNHpsazJrRVRxbW44QWpLeVVqNmJwS3BIVXVECjljT09oTEJSWkxETHUxOTZndjRPVzZsK3VvTnRqdkJEWWNpNDVmSXQwR3NoeXVvTWVHUC9oOGtDZ1lFQTI5QUgKTGVDbndMd3FSVUszam92aXJsT0c3SFNhN09pd3JadzdrS2lkd2d4ZjZLeStGWExzRldaNHVNWVF0OHM0NVFCNQo5VFI4V3NFSWRTOCt6ZVYzUml4M01teGt3K3dKUUlrdWovbjVmcVVQMVVFc1JnMi9GMzdmbzJEVUkzQkRmTE8xCmRXTW1UNjB5eHZIY1ZxR3FkQ21mcDNFYk53U2hDSUc2dEJLMExBVUNnWUVBaWdSUzlMQ1FhNVd3S09ROTd2MzgKUHJ1VlJqeU13cmhTdVNkZ2VvYUJFekE3Y0ZabmxLdXdwL1F4SjFZcDB3RnpVUEplSWl2dnR3V2FOWlcwR0tWZwpSTk1zMTNnYmViOExyOFZvSGYxd2Z5SDZac0NlMjNrUkp5WkZuNXlVb3F0VWRaYjQ3dXZkQlpkZnhLOWRFYXVmCjZyRkZBOUNsNHk3dVJuUTFaUXVtQXFFQ2dZQUVZSU1VRmNvaFcxM1lIVGo4ZktxWjRBM3F2WE9zVGdIZW95TEkKZ2FNS2p5YUZ3cExTYUlSczlLcG91NER2dC9zOURDSmhrSmI5VTZTd2VLMWVlamhDekhYZktpdGpmMXE3eno5LwpISElzWkdzSlN3L3ZvU3h4OGxQUHRBamxYOEhvUk1mVE81TXl1UGN1NFBnTFBaTGdWMGZYbExmL0EzZVZiTWZqCitBOWdaUUtCZ0VOM2RBOTYzNGk2MGVyalY5eGc1NHpWSGE0QXZoUFNTOGRYNjlzVlhDV202VG1jRGNXQ1VxUzEKcmc1K01JWHhTLzVEV0xCQVJtSGJJZ1Bib0swM2x3U01KVGJIS2J0ZWhra0xCTkQ2MjMxU3NzczUyQzJ3d1ZlQQp6ZUdVdUlJbGdXMkYyN0orNnRXaER6aE4wc0RVcWM4OTcxQlNOTEI5OWg5bzB6UVM2RFRZCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/clustermesh-apiserver/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: clustermesh-apiserver-server-cert
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURxRENDQXBDZ0F3SUJBZ0lSQUpIN0IrOU41TG9pUEZhL0FLUGxqeEl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRFd056SXdNall4TUZvWERUSTJNVEV3TmpJdwpNall4TUZvd0tqRW9NQ1lHQTFVRUF4TWZZMngxYzNSbGNtMWxjMmd0WVhCcGMyVnlkbVZ5TG1OcGJHbDFiUzVwCmJ6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQURnZ0VQQURDQ0FRb0NnZ0VCQUtzNEJDVm9ZRkFIejNIVVRDOXAKaTIvQ1FFM3BrelEvZlJXMkZjYzJhbVVndVN2MVFKR3ZWSXFEWUV3anlFSStzanJ4cXZtYWNjLytoWmR4YzAwTQpSU0Y5cit3S3UvcWZrcjRvbWpTMDNpVUpmK01XRk1hUGlxNDBMWFVrUEdJdFBRaFZmR04xU0RqdldDZVdJN0dCCkIzeGo3OCtJT1FjaTEwWTFKeHVjMUxlczVlWTVuNzlNcDBCRXFMNkovY0tpbWpHS1Jlenp0NEJlMWl3U1VmUk4KUUtBZERiblFoT0lkTmZZdzZyeXFidW16UlNaYSt2MVM5dDlQd0dtUEVDWFFqQTJJeU8zUm04V25PWlFvbmJHUAoxaDFocG9kS3BIUW5RL09LVHlQQ0xLNnNQYS93QVpDWkQ4dUdqbkdQaWpNdDhwUGU3NmpKOEZsQTAyYkR6UGV6CkNjVUNBd0VBQWFPQjNqQ0IyekFPQmdOVkhROEJBZjhFQkFNQ0JhQXdIUVlEVlIwbEJCWXdGQVlJS3dZQkJRVUgKQXdFR0NDc0dBUVVGQndNQ01Bd0dBMVVkRXdFQi93UUNNQUF3SHdZRFZSMGpCQmd3Rm9BVXo5dUcyMWIra2lnSApydTVHZDZxbTAvQTZNOVF3ZXdZRFZSMFJCSFF3Y29JZlkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnlMbU5wCmJHbDFiUzVwYjRJUUtpNXRaWE5vTG1OcGJHbDFiUzVwYjRJbFkyeDFjM1JsY20xbGMyZ3RZWEJwYzJWeWRtVnkKTG10MVltVXRjM2x6ZEdWdExuTjJZNGNFZndBQUFZY1FBQUFBQUFBQUFBQUFBQUFBQUFBQUFUQU5CZ2txaGtpRwo5dzBCQVFzRkFBT0NBUUVBUDNmNExMeE9ySEovR1dlZTZxVFdaaGh3RURkQ1VUL2p0ZWk4NUJvNGFreUxnSkFPCnlyVlJvamo0RVBySlpTZ2xZTCtENW51ZDJDRHFWL3ZkRUxkMmlPSFd5cm9RV1B6dndwUXIwYzhqL3VNekxiRlEKaGtSYW1zb2hPRG1kcnNVTlZqZTVLcmIzTHlmd25KclNteG43dGNNSS9makxSa2NkTkxQRW9KQTd0L1Rac0RaSwpINkVUYUlOc3NSZ2JEbHVkN2daREhiZUNiKzNQa01jbm1zaVBiUWJEMExDUERydVo5bXA4OHVqTHVJK0NsVk1jCk9MbmQ1TXlBaVgxOG1lVzFZdlJSUGRGQ1d3c2YwOGNQNDFPMFJHek9TckZBanhPeENhVXM1OUttazlsVzZVb08KNHY3clEra3k1ek5JZ3NVVWdFaVcrVzFtWUVHSzZ4US9VcHdxZVE9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBcXpnRUpXaGdVQWZQY2RSTUwybUxiOEpBVGVtVE5EOTlGYllWeHpacVpTQzVLL1ZBCmthOVVpb05nVENQSVFqNnlPdkdxK1pweHovNkZsM0Z6VFF4RklYMnY3QXE3K3ArU3ZpaWFOTFRlSlFsLzR4WVUKeG8rS3JqUXRkU1E4WWkwOUNGVjhZM1ZJT085WUo1WWpzWUVIZkdQdno0ZzVCeUxYUmpVbkc1elV0NnpsNWptZgp2MHluUUVTb3Zvbjl3cUthTVlwRjdQTzNnRjdXTEJKUjlFMUFvQjBOdWRDRTRoMDE5akRxdktwdTZiTkZKbHI2Ci9WTDIzMC9BYVk4UUpkQ01EWWpJN2RHYnhhYzVsQ2lkc1kvV0hXR21oMHFrZENkRDg0cFBJOElzcnF3OXIvQUIKa0prUHk0YU9jWStLTXkzeWs5N3ZxTW53V1VEVFpzUE05N01KeFFJREFRQUJBb0lCQUZpbUxCOWlKMXZJYjNPMApRNjNZcThVMWdpM1UzYzZUZ0tRWkhyV0NTeHdKRVZiZEtJMUZoalFoU1Y2aXVERDBYVHQvbk5LWFVJNHNiZWEzCmFzZGRydjFrSWczSWtRTjJVM2Y1ZGI0TVYyZzl2dVZJcllFUkdQQ1JPMmdIVnV4T0YrZVV1MDZUanMxTHZ3emcKQTZNSDkyUkVLZ245c2VrcjlPSDQ2MEswdEw1VUFYZjJGa21XYmZTNXZWSExnQ3ozVkkzM3ZNMzEzakNyUDdrUwpjQnNuNXFvZjFYYnlBVU9Qc3g5RlhoK2hENGpEKyt1VUlTdnJGdXpLNXduNmoyVERWMEgyOU1uenhoM2s0NVhCCmdwOHJqYlBVY3lNQi9EVTRIR3Bta0pRM0ppelo2QU9WSFlCWTNUbnZ1Q3hDa01maitHTmZJNkFUSVZGTkswenUKb2MzYjR4RUNnWUVBNEJUNGNscnYvNDJoSE8zSFJ1NjNJTENrbW5DNjVBNDQ4cm8wTDdVL3dDRTdLckdaTHRyUgpZeXNZdjZWaERoeTM0WXRITS9xRWlHYUZMSmduYzQvdnQvd3ZLdE9pK1RCd3l5S1dCYzZhU2lHb3M1Q2dRS1V6CmZqbjJ6cjduNVpHa0RCd0Y0RWhGbERQWWFVdmFrL0ZOWTB0c1VqZUdCM096ZjNVOWptOGxmT2NDZ1lFQXc1dHIKbnV5VWZPR3dTOGdBdHhEU29HeGZ1QTZCT010dkVURTF5citNOWNoQnBRNUJlV3BkQVM5SUhGT082aUNFc1o2RQpaV0ovdExKcTRsMWJ0ZytReEJnQXNVSXA3VUxHR1FVYXlLWXFETW1rRXQyanVmajgzN0J3bjV0eVcxempWdnkrCmt6R0dIQTdZbHZMZDBLck02V1pFWTg3eWVwOTlldHR6SHZhbzRuTUNnWUVBcTRRQm91NHVNMHBCM3JXMXlYcGcKbTFuNXMrakRkRm5haHhlMWFDcndiK3cvc0c4ZDAvcFRPUGU4eXJ3WUxNZ1lpeitqTVlyNE5MdGNCZ1UwZFVUZgo5TkRIZloxZWFpUUV3Y2RvVTJ1UE4xektGeCtGT2RYNU13M0U5dnl5M1VuNzZmVHRIbjNUSEJ3TzhwSEg3V05PCm04a1lVVm9FY2VIQ3E3V2VkMDVsd0ZNQ2dZRUFuTWhKSlpPNG5MUUVxMmorY2IwUkpiWlhybDRwNHd6ajFDTGUKVzhqV3dmV2w4QmNTRWJCWUpXZnhZNHJ4NU9UMWxxeFlzQzZYNzR5R01UUGxHM00wZEloTW5jZExkYmxzc0ljdgo1WjJSM0xnT1EzVFZFMjNudVo5aFZmeXhWMXVIZUtTU1Y4WjlHS1lwb2l1OThNL0YrRm1ZL1dyVlhjWFNQSlFDCm5OSFZvZE1DZ1lBV0pzV1RCTFBCdVE1cGIvZ0hZZDZFck1VQU91NEFqaWNWL0s5UW9CNWUvL3EzbGZPRjczZnUKckozS21Vdjc1SjdjQlVzckx6VHZ1TVc4MUxmVVEzMktGSGlxZE9uYkJVNlR2c2JtK3BqclpBbzdSd0NsRzZFUwp0R0c5cXNnRzFPd1RFKzVDZEdZVWhNZDE5eThVVkxuY2JFN1J5ZXFFQXVndzBxZW9vTVlCd1E9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRYTFZQnVMNWhocTlZaWhJOVFRYmNhVEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakV3V2hjTk1qWXhNVEEyTWpBeQpOakV3V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEbXZQWWpMTjdaSmh1eFNPTnduNWdxV1BqMzZRVVIKaHlRZE1TeFN5Q2phREhCb2VVK3VIY1l5amdIY21rL3hPbWphQnpqMlB1KzlUc2RmTjJWVEs1amxqMWJUM3djRQpsM0JkQy8wbDJlNmdra3hjS1JXNWRvMDJxRU84S3Z1Z0FCY3RwUVlPU1dXY0h0MFA5TldDTGNZSDBuNzlzQ2hICnloeERKYW5LVGZnQncwcm1vd1JGMDlLb1pwTnNKdVNGakx3eHhmRCthQ3hva0lId0dCWUlFcGMwS1Z1WjVhdkYKc1doNlRXc1M0NUR4VmhjKzZha3d0NmQ5QVpKMjQ0dmkzWDk3enZYV290VzlqOGl3a0V2YkJZSkp0cDRya2hteApUZ0tSTlpZNEpyUW1MMHY0NXg5c0VweGR3WUN1QUdrZVBtQnF6azFvV1dhbDJtVm45Rk0vVWlBckFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNL2JodHRXL3BJb0I2N3VSbmVxcHRQdwpPalBVTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFKUndvSTdRRUQyZDJiQlJ6Zng2Wld0U2hxcDRZMDBKOU9qdkhUTnJ3cHk2dWVHaXUKMWhieUVLMm9NQkd3UmN6WEl4d2V0RW9wQndlZlQ2R2NmeDIwZVJqUmQ3MmNqZ1VxbjNKSndscHk3VG9lZU8ySgovc2tuMWVEeGxML1J3Z1VLS2NDalVzcEFsdnFvcnVIN0hNNkVDUFlXSVlndnhmQUprdEJqQkFLTGhqQlZjZVE5ClNrdlFldFdrWlNEWW9vS2c5bit4MGNmVnVoK1dFeXlPdWhKdys1d3hsbFlJOXRRNStOcXBtNm1KalZOUkVZb08KKzd0UjJybDRWczE5TmtRZTBTbkF0dlI4UXltMjBKWmJ3VU1zV3ExMENXbUZNcCtoUVlIaFdyWWxLYUhaRTRoRQp1a0hzYmRwbGdOTHozQU5BbUl2dmlrZHd2OCt1WUN5Q0ZTa1poUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBNXJ6Mkl5emUyU1lic1VqamNKK1lLbGo0OStrRkVZY2tIVEVzVXNnbzJneHdhSGxQCnJoM0dNbzRCM0pwUDhUcG8yZ2M0OWo3dnZVN0hYemRsVXl1WTVZOVcwOThIQkpkd1hRdjlKZG51b0pKTVhDa1YKdVhhTk5xaER2Q3I3b0FBWExhVUdEa2xsbkI3ZEQvVFZnaTNHQjlKKy9iQW9SOG9jUXlXcHlrMzRBY05LNXFNRQpSZFBTcUdhVGJDYmtoWXk4TWNYdy9tZ3NhSkNCOEJnV0NCS1hOQ2xibWVXcnhiRm9lazFyRXVPUThWWVhQdW1wCk1MZW5mUUdTZHVPTDR0MS9lODcxMXFMVnZZL0lzSkJMMndXQ1NiYWVLNUlac1U0Q2tUV1dPQ2EwSmk5TCtPY2YKYkJLY1hjR0FyZ0JwSGo1Z2FzNU5hRmxtcGRwbFovUlRQMUlnS3dJREFRQUJBb0lCQVFDNXA3bDB2Qm5qSjJLSQoxMWtKdWFBNkVyVGc1TUdMUk8ydC8yN21mTjlCODFoTzk2MUJML3ZWbWFXdDF3d1QwU2VrcHNNU2Y3bHUzUUJXCmdNQXFsNTNDdC83cEl6OEdWc08yV25zcUJaeVgzcDlLV0ZSK2tnRTF4VlliQllySlJzbGZsTFMyc2gvcjZubDgKNlVjU0k3cC9lTU50WkZ4RXh6N09XSE94citLcHB1NUdIZ1VnWFA3QkZncFc4SEEveTJ2RFlEWExjZ3pWVFVGZgowQmFycWN0OURmUG92OVJxb25mNHNsaU1KNngxSkNiaVV1NGV0UzNPWFVWSWdjcDkwdnB2UWdyNUE4bmhZbHZVCmtYTHdXWGdlQnk4anFoekpKWG9DM2N1c1hKMGxZeXBaSy9JajNzNGl3dlVFMXJFL2cycjVaWmU2cHJKcTBHdlUKbVRBN1lBVkJBb0dCQVBxR1RHai81dXZma3JEbGlPRFpXV2NNTVdPOUVaWGtVeXViNU1pMFdhRithNTIrWnE4bQpWd05JRTRqbVFIUUFUWWpWcTdBQ2FFNVBjSHQzN3Z5Wjd1YzhiM1FMd3JoS1o4NjBEV0dLeFJocytOd1U5QUk0CjBpMVRjcDdmOTFXYWJWak9WR0ROb09CVUtSUWkwdVBGemxmU3VyU0ZVelJBT00zZXdEZ0IzQVBaQW9HQkFPdkgKOU5YM0RnUGRMTVNubmJBcmlEd0JUa25Rbkt0cUhHaTdubDIzeEVRSU9kTHo0elBNbGRMMHhmYzdWaE02WlM4LwpDVERFOXk4UGZjVUtFVVFKMERQckhLZjVocGxiUUJITW1UL2RXUVBiWXFPSFRMUm1GVDhyZ2pzQ1VDUWt1QnNTCkV5VmlpRUF4KzBSN3ZidzdiQ2c1TzAyeUNhL2s4bzVkZ1lhVjFmV2pBb0dBVDErVmZmNzJEdTE2OElrSTRSUjcKK3VZbUQ4K3JicTQwbTdCOHdBcEVDNktlUGhCQlFHVUpWSVRWaTU1SDlYalRGL042dmYxRlJ1cHNYUElXeWZtTApjNy8ySC9KSjgxRy9xZ0hwNjJtb0lLRUdCOVNycXJpTi9zWmRubkNmVUlQbytTWUdIZFdJandxYktVSVBSeE00CjJTSnUvUnJ3emJFN1RoNnhFQTJtdzZFQ2dZQStGT0E2bGxweVdnSTNwWXEzb0Q2MnpnRTNIbDZpSThabkxUOTkKbmExbjNHS2RVT281OFZ4aHQyR0l2Mjdpa1RXalF3M0FjWnhFSCtnVndaamFPVnRBMEY4ek8xaGRlTkZkM21sYgpqNFNvcDFOSmk0NSswWUkycDlZYWczbG1pdVNPL0N0ZVpKdExpOTJGSXEvS3FEcktQSWVJNVovM1dHa2xZeWwvCnJtUXYwUUtCZ0Y4RXdqNlRlbWNRS2VpQlcxQ3dNM0xWSkxvdlljRzE5TXJmTWMrWVlaQVZUUmpDREFyOVpGOHYKYnNtL2dHWTJJeDNJQmlSVmZSRDhrNUduZHl0S3p0ZlVGVkNibFZybTN6ME5rZ2hZL0RSUUpKd3QyTVNheGM5UgpNdFF1VytCSW8reXRxa3BadXpvQjJQUXZjSGUraS9HTXFJWE5rZlh1VTB3Nll0T3hGd2lsCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZFVwUlVkTnhIUWY1ZVBVNGdDZnZsekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQzdhbTMvWHlUeFppMUR6Z2szN2hpYlc0Y3VBU25oWHlRMTZhM0hPZ1Rtc0piYzRlZ0YKckw1bHRucXdtUnN5Wm5jZHhaQ3d6ZE1CYU9OQjFBSFVBVlhKT0pVeG9NVHZXUFJhQVc4ZWNjVHBGVTduV3EwagozL1k2RVJZU3FMZVZZdUx6ZzhYUmRRanZCUHBmOUlhMzVrQytmMnA1YTc0TVgwZmV5R1ZRVWpVRGdHQ1RCZXA5CkJMTmNBTE45ZEF5eEpZTVN3TW8rb3ZZR2dWWnFXcXpnSXpNWlhqenlNcW4vZVgwaTBWaU9DU1VOK2RrSVhZZk0Kc0c4eEhWUXpTL1cwOHg5MXRoZzlvRk9sMGlMQ1YvdzUrV0dzeVBUMldjM0d6MWxpRTVWcG0wTTk1cUxwTG5tWgpyWlZ5ZHZnbFQ0K3ZUVmhKbkw5ZzdWajNlbnhaUis1SXFtNFhBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVV6OXVHMjFiK2tpZ0hydTVHZDZxbTAvQTZNOVF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFJd0xQclZGakhYQ1FuYm5Ed005ZU1YTWRCNUYxdExkSHVFc3dlNkM1bjN3T2xqLzF6SEhpZW9SCllGK245OUxCN1A1T2pxdDUrbThGVno3a2VEZFYvZGREL28yQkRUeVdDbWNZSGgyMGNWTnAxZzlrTzRJYWplQ2sKYzIvSWkrNXJpcWh4Y3dXRVI5elZ5Nlp2OTdpckZqYksybkkrSkNNazJMWkxZT2lHRnhHVnZiZFIxenI3bSt4QQpyNnZVTGVMV3ZscUlHUm1OMkFtRzlOeEtSQnd1c2NSeHFaVW0vOUdXcFF3MFA5Y1Jidm5wZC9ZRU9ZRTdEZ3VBClRWN3hCNkZHeVd5Z2l2Vk9reWVJbGtyT3lWSFB3eW1hb1ozVDZ3NTZtYVdzTTgyMmp6UHNuZTJPOW84Wmg1SloKWmQzS1FNT2dlNlVSZG5sVmp1OTQxRXhnMDNQelVKVT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURURENDQWpTZ0F3SUJBZ0lRVUE2VzVYQnAwRzBVVnlJZVlDaG02VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TVRBM01qQXlOakE1V2hjTk1qWXhNVEEyTWpBeQpOakE1V2pBbE1TTXdJUVlEVlFRRERCb3FMbU15TG1oMVltSnNaUzFuY25CakxtTnBiR2wxYlM1cGJ6Q0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFNYVVPRk1KTmhuOHJ3Mzc5a05zTnpnd3Fid1UKUlB0cWhTYjE2SXBxRndaTDVSVCtJNFNwZWg0MStidjUrOGlyRDgwVnZucVZrb3AvVVI5RVFUSWwzYTlHWGVQcgpTb0Z4WWd1QVR3MVRtT2V3Yko3Nm81ODk2MXRTTXhBbWRnejdGNXVNR3VuM1F2LzlVL3dKUnVUZnQ1MGo3eE96CjNrdnc4S3lDRW1LOStmb1NMNjdKMVF3VGo1bmp0WGIvNDZ5aHVOS21nUE95b0wvRm05dnZQUG1BL3hydUNjT00KZ3ZXSTJTbmdCWlVDM00yNFp4c2xxYytvYkwrUk1YWkZ6Q3ZZenBHbngyVGdxWnpSZjh3eFRxQ1YrejIxVVNTWgpGTHhCR09UZDBDbk1ucTZGNnY4M0tYMGc5cmRNYzl6Tk9xc3hBN1lKT3hTZXlqcjg2Y3drdE1qbURlc0NBd0VBCkFhT0JpRENCaFRBT0JnTlZIUThCQWY4RUJBTUNCYUF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0cKQVFVRkJ3TUNNQXdHQTFVZEV3RUIvd1FDTUFBd0h3WURWUjBqQkJnd0ZvQVV6OXVHMjFiK2tpZ0hydTVHZDZxbQowL0E2TTlRd0pRWURWUjBSQkI0d0hJSWFLaTVqTWk1b2RXSmliR1V0WjNKd1l5NWphV3hwZFcwdWFXOHdEUVlKCktvWklodmNOQVFFTEJRQURnZ0VCQUZnNG12VlVsWnF5VjVvR013Y2dHcEp2OFR1bXVxa3ZxQnlUcFAxT0RNS1AKaHdrYzlkc0MycGhDR3VwekptVU5PSHhlMWk2RUhkU3hwQ0NBcjRrZmxsdVpEc3ZTVjJKMGw4L1lCaTRzSmFRWApqcFFqZlhaTzNpVzVVM3doNWV4Y3NVM3dNbHpRMEl4UTNDaDdMNVUwTEpRMUp1dFlWY3hDdmp4S1BmZ2U4MXZ6CktKTmpVKy96LzRja2kwQXN0cCtJcjlEb2k0YmNNWmJjRUk3Q0M1Q3RkU05mT1dBaTZtbDcxdHlDZlo4b3RYQXMKbHJScEdIR0ZsTVV5VnM4bWRaTS8zeENpWnpETllKK3VUbUJNYUZvaURncGhuSE5XbTBzUGExUFZzZnlvZ0NTSwpPYWZKRnNWYytsSGJacVV1WTRQcEdscTZTSlZwWnpPV2h1TjkyTTB5ZUFRPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeHBRNFV3azJHZnl2RGZ2MlEydzNPRENwdkJSRSsycUZKdlhvaW1vWEJrdmxGUDRqCmhLbDZIalg1dS9uN3lLc1B6UlcrZXBXU2luOVJIMFJCTWlYZHIwWmQ0K3RLZ1hGaUM0QlBEVk9ZNTdCc252cWoKbnozclcxSXpFQ1oyRFBzWG00d2E2ZmRDLy8xVC9BbEc1TiszblNQdkU3UGVTL0R3cklJU1lyMzUraEl2cnNuVgpEQk9QbWVPMWR2L2pyS0c0MHFhQTg3S2d2OFdiMis4OCtZRC9HdTRKdzR5QzlZalpLZUFGbFFMY3piaG5HeVdwCno2aHN2NUV4ZGtYTUs5ak9rYWZIWk9DcG5ORi96REZPb0pYN1BiVlJKSmtVdkVFWTVOM1FLY3llcm9YcS96Y3AKZlNEMnQweHozTTA2cXpFRHRnazdGSjdLT3Z6cHpDUzB5T1lONndJREFRQUJBb0lCQVFDenJMVHgzT25JeGFzVwp1aDN1ajJHL1E3aXdacDZyNVl1bzN1T1RLYjYvZ2JnN01GK3V6ekdoV0RFb2RsM3RDV3A0byszL09JcXBLZDJhCnJzVld2SkJDNFNaZTdTd3l4d1p4WlowaGI3eHdGbCtSMFRKdkNUV0ZJWEQyY2ZacWRGNjk3UjBGQ1Nia1BMRGEKNFFIMllMM2dQdjA1Rkl4VXBpTDkwNHNUTU5XWC8zY05wN2JzRUZLOU5UcTNWR0VZOVZHcFFiL2tLbTFlREpVbwpOenp5eDVoR2wzMm9SYmNIcXp4ZUxLMy9kNkMxeWdJd1FKS1hGYWNsUFZRLzZEOEMrMURlRW5RUjFNVnR4RUhxClEwZEs0WHB5M3FUSGJmNm01azdiMGsvTU1DV0pkWkFKTTdTcE9nVjJ0OXNSZDNkVEMwbm94emtUWkJUVmErNWkKZTRSbGROQ1JBb0dCQU04akpkRzhDZm1JdzdoejhrYU9TekY4ejgrQlZWdWNORlNhOHE1bzNmdEJkUGs1VTVkRAplTnhvM3VGeklaTmkvZis4UStIZjVPOTgzeUc0bUFhRXdPaGl6TERTQnhURW1iUC9KaVUvdXRWeFBGZHFsajI4CnNsQW04SVIyMHY5SmVjZXN4UVRHQnUwRHBSVEM4WS9xYXhOcjd1cHJjMUhwRFRMck1meTczWE0zQW9HQkFQVnMKUGlzUThOcWJ3aC9rYmxlemZxUWxTa3NuNks2eEhveG5LRWEzNjdZMVpTL3ZldXFENjFmTUQzL1VIS3hSUElZTQpJSU84TzVWancxbUVJeWIwNHpJWlV4MGVBOHhJa2MxUFNhWi9nMmlCbVc3OVRjMk9tNHY1QmlmWTNPVzI4SVRUCmwwNW9FWW5vL2J1MUY4UndJbUh2UDBtN3dTdm1SNm9zLy94MDZyenRBb0dBUVdzZVZLRUluWENlTDdFZXdUM0wKYmJPM2hoZVl0N2dicHVUUTVGaG1VeVlYSldiL2lYUmJ4WEN4ZzQ1eStqTjNlTDhpeVVHRzhrUUR6SWlhS3VUZQpjQVpVRXp3aDFHTkxEOWZ6V2l4SWU0U3B4QW43clQvZEtRZERTdktrTE5BdHordzJ4UTB0dnNrNTU5YXhwL3duCkdSa3JlWW02QUJLVWdwSlpWVEtYKy8wQ2dZRUFzTUlaOEdpT0g5U290dEdPQzBveXZzUkF3dXBtY2xNTXZuQ1oKbUgxa25lSE5FLzQyRit1Vk43RzN4QWdmOHBlN3NJdlJheS9KOWlsWkRBTFlVbmx6bktTU3NOanFRVnBPOElEWAplYnhEQjZTM3ZqRmZ0Tm10KzkwSjZ1OE5BY0dGYnhUNTE3V3FWQnBqaktxOENIWCt2V3hUdDZZclZaUFFMNmVqCllzOU9OVzBDZ1lCWWROQ0pZSFNYWmtsWVJxR1pZYnNmazR2SFkvYno0RUJ2YlRjQkduOGlaY2lxOVNaRzdFSVUKdWFZQ3NJUTRqL0Y4ak5lbEtCSEY2a1l0VTRDUkxOVGl3Wm5pd2cwbkd4MnJLdmMvN29LYlVLTVVNd05aeW5iYwpHZDZjQkppUmw3NHF0RXB4bkRQUEVydS9tSXV6SyswN21vbnlXWTdFM2RqeVEyZHBESXVpVGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: c2
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "12"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-wireguard: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.2.0.0/17"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: c2
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/clustermesh-apiserver/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumexternalworkloads/status
  - ciliumnodes
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumendpoints/status
  verbs:
  - patch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumexternalworkloads
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - endpoints
  - namespaces
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: clustermesh-apiserver
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: clustermesh-apiserver
subjects:
- kind: ServiceAccount
  name: "clustermesh-apiserver"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/clustermesh-apiserver/metrics-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver-metrics
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
    app.kubernetes.io/component: metrics
spec:
  clusterIP: None
  type: ClusterIP
  ports:
  - name: apiserv-metrics
    port: 9962
    protocol: TCP
    targetPort: apiserv-metrics
  - name: kvmesh-metrics
    port: 9964
    protocol: TCP
    targetPort: kvmesh-metrics
  selector:
    k8s-app: clustermesh-apiserver
---
# Source: cilium/templates/clustermesh-apiserver/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  type: NodePort
  selector:
    k8s-app: clustermesh-apiserver
  ports:
  - port: 2379
    nodePort: 32379
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.2@sha256:6263f3a3d5d63b267b538298dbeb5ae87da3efacf09a2c620446c873ba807d35"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 1
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 100%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.2@sha256:52f70250dea22e506959439a7c4ea31b10fe8375db62f5c27ab746e3a2af866d"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/clustermesh-apiserver/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clustermesh-apiserver
  namespace: kube-system
  labels:
    k8s-app: clustermesh-apiserver
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: clustermesh-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: clustermesh-apiserver
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: clustermesh-apiserver
        k8s-app: clustermesh-apiserver
    spec:
      initContainers:
      - name: etcd-init
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh", "-c"]
        args:
        - |
          rm -rf /var/run/etcd/*;
          /usr/local/bin/etcd --data-dir=/var/run/etcd --name=clustermesh-apiserver --listen-client-urls=http://127.0.0.1:2379 --advertise-client-urls=http://127.0.0.1:2379 --initial-cluster-token=clustermesh-apiserver --initial-cluster-state=new --auto-compaction-retention=1 &

          # The following key needs to be created before that the cilium agents
          # have the possibility of connecting to etcd.
          etcdctl put cilium/.has-cluster-config true

          etcdctl user add root --no-password;
          etcdctl user grant-role root root;
          etcdctl user add admin-c2 --no-password;
          etcdctl user grant-role admin-c2 root;
          etcdctl user add externalworkload --no-password;
          etcdctl role add externalworkload;
          etcdctl role grant-permission externalworkload --from-key read '';
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/state/noderegister/v1/;
          etcdctl role grant-permission externalworkload readwrite --prefix cilium/.initlock/;
          etcdctl user grant-role externalworkload externalworkload;
          etcdctl user add remote --no-password;
          etcdctl role add remote;
          etcdctl role grant-permission remote --from-key read '';
          etcdctl user grant-role remote remote;
          etcdctl auth enable;
          exit
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      containers:
      - name: etcd
        image: "quay.io/coreos/etcd:v3.5.4@sha256:795d8660c48c439a7c3764c2330ed9222ab5db5bb524d8d0607cac76f7ba82a3"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/local/bin/etcd
        args:
        - --data-dir=/var/run/etcd
        - --name=clustermesh-apiserver
        - --client-cert-auth
        - --trusted-ca-file=/var/lib/etcd-secrets/ca.crt
        - --cert-file=/var/lib/etcd-secrets/tls.crt
        - --key-file=/var/lib/etcd-secrets/tls.key
        # Surrounding the IPv4 address with brackets works in this case, since etcd
        # uses net.SplitHostPort() internally and it accepts the that format.
        - --listen-client-urls=https://127.0.0.1:2379,https://[$(HOSTNAME_IP)]:2379
        - --advertise-client-urls=https://[$(HOSTNAME_IP)]:2379
        - --initial-cluster-token=clustermesh-apiserver
        - --auto-compaction-retention=1
        env:
        - name: ETCDCTL_API
          value: "3"
        - name: HOSTNAME_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        ports:
        - name: etcd
          containerPort: 2379
          protocol: TCP
        volumeMounts:
        - name: etcd-server-secrets
          mountPath: /var/lib/etcd-secrets
          readOnly: true
        - name: etcd-data-dir
          mountPath: /var/run/etcd
        terminationMessagePolicy: FallbackToLogsOnError
      - name: apiserver
        image: "quay.io/cilium/clustermesh-apiserver:v1.14.2@sha256:0650beac6633a483261640b6539c9609f5a761f4ab4504fd1e6ffe7f2bb82e9a"
        imagePullPolicy: IfNotPresent
        command:
        - /usr/bin/clustermesh-apiserver
        args:
        - --cluster-name=$(CLUSTER_NAME)
        - --cluster-id=$(CLUSTER_ID)
        - --kvstore-opt
        - etcd.config=/var/lib/cilium/etcd-config.yaml
        - --enable-external-workloads=false
        - --prometheus-serve-addr=:9962
        env:
        - name: CLUSTER_NAME
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-name
        - name: CLUSTER_ID
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: cluster-id
              optional: true
        - name: IDENTITY_ALLOCATION_MODE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: identity-allocation-mode
        - name: ENABLE_K8S_ENDPOINT_SLICE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: enable-k8s-endpoint-slice
              optional: true
        ports:
        - name: apiserv-metrics
          containerPort: 9962
          protocol: TCP
        volumeMounts:
        - name: etcd-admin-client
          mountPath: /var/lib/cilium/etcd-secrets
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      volumes:
      - name: etcd-server-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-server-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-admin-client
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: clustermesh-apiserver-admin-cert
              items:
              - key: tls.crt
                path: tls.crt
              - key: tls.key
                path: tls.key
              - key: ca.crt
                path: ca.crt
      - name: etcd-data-dir
        emptyDir: {}
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "clustermesh-apiserver"
      serviceAccountName: "clustermesh-apiserver"
      automountServiceAccountToken: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: clustermesh-apiserver
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.2@sha256:a89030b31f333e8fb1c10d2473250399a1a537c27d022cd8becc1a65d1bef1d6"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.0@sha256:1c876cfa1d5e35bc91e1025c9314f922041592a88b03313c22c1f97a5d2ba88f"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.0@sha256:8a79a1aad4fc9c2aa2b3e4379af0af872a89fcec9d99e117188190671c66fc2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
